//                                 Apache License
//                           Version 2.0, January 2004
//                        http://www.apache.org/licenses/
//
//   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
//
//   1. Definitions.
//
//      "License" shall mean the terms and conditions for use, reproduction,
//      and distribution as defined by Sections 1 through 9 of this document.
//
//      "Licensor" shall mean the copyright owner or entity authorized by
//      the copyright owner that is granting the License.
//
//      "Legal Entity" shall mean the union of the acting entity and all
//      other entities that control, are controlled by, or are under common
//      control with that entity. For the purposes of this definition,
//      "control" means (i) the power, direct or indirect, to cause the
//      direction or management of such entity, whether by contract or
//      otherwise, or (ii) ownership of fifty percent (50%) or more of the
//      outstanding shares, or (iii) beneficial ownership of such entity.
//
//      "You" (or "Your") shall mean an individual or Legal Entity
//      exercising permissions granted by this License.
//
//      "Source" form shall mean the preferred form for making modifications,
//      including but not limited to software source code, documentation
//      source, and configuration files.
//
//      "Object" form shall mean any form resulting from mechanical
//      transformation or translation of a Source form, including but
//      not limited to compiled object code, generated documentation,
//      and conversions to other media types.
//
//      "Work" shall mean the work of authorship, whether in Source or
//      Object form, made available under the License, as indicated by a
//      copyright notice that is included in or attached to the work
//      (an example is provided in the Appendix below).
//
//      "Derivative Works" shall mean any work, whether in Source or Object
//      form, that is based on (or derived from) the Work and for which the
//      editorial revisions, annotations, elaborations, or other modifications
//      represent, as a whole, an original work of authorship. For the purposes
//      of this License, Derivative Works shall not include works that remain
//      separable from, or merely link (or bind by name) to the interfaces of,
//      the Work and Derivative Works thereof.
//
//      "Contribution" shall mean any work of authorship, including
//      the original version of the Work and any modifications or additions
//      to that Work or Derivative Works thereof, that is intentionally
//      submitted to Licensor for inclusion in the Work by the copyright owner
//      or by an individual or Legal Entity authorized to submit on behalf of
//      the copyright owner. For the purposes of this definition, "submitted"
//      means any form of electronic, verbal, or written communication sent
//      to the Licensor or its representatives, including but not limited to
//      communication on electronic mailing lists, source code control systems,
//      and issue tracking systems that are managed by, or on behalf of, the
//      Licensor for the purpose of discussing and improving the Work, but
//      excluding communication that is conspicuously marked or otherwise
//      designated in writing by the copyright owner as "Not a Contribution."
//
//      "Contributor" shall mean Licensor and any individual or Legal Entity
//      on behalf of whom a Contribution has been received by Licensor and
//      subsequently incorporated within the Work.
//
//   2. Grant of Copyright License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      copyright license to reproduce, prepare Derivative Works of,
//      publicly display, publicly perform, sublicense, and distribute the
//      Work and such Derivative Works in Source or Object form.
//
//   3. Grant of Patent License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      (except as stated in this section) patent license to make, have made,
//      use, offer to sell, sell, import, and otherwise transfer the Work,
//      where such license applies only to those patent claims licensable
//      by such Contributor that are necessarily infringed by their
//      Contribution(s) alone or by combination of their Contribution(s)
//      with the Work to which such Contribution(s) was submitted. If You
//      institute patent litigation against any entity (including a
//      cross-claim or counterclaim in a lawsuit) alleging that the Work
//      or a Contribution incorporated within the Work constitutes direct
//      or contributory patent infringement, then any patent licenses
//      granted to You under this License for that Work shall terminate
//      as of the date such litigation is filed.
//
//   4. Redistribution. You may reproduce and distribute copies of the
//      Work or Derivative Works thereof in any medium, with or without
//      modifications, and in Source or Object form, provided that You
//      meet the following conditions:
//
//      (a) You must give any other recipients of the Work or
//          Derivative Works a copy of this License; and
//
//      (b) You must cause any modified files to carry prominent notices
//          stating that You changed the files; and
//
//      (c) You must retain, in the Source form of any Derivative Works
//          that You distribute, all copyright, patent, trademark, and
//          attribution notices from the Source form of the Work,
//          excluding those notices that do not pertain to any part of
//          the Derivative Works; and
//
//      (d) If the Work includes a "NOTICE" text file as part of its
//          distribution, then any Derivative Works that You distribute must
//          include a readable copy of the attribution notices contained
//          within such NOTICE file, excluding those notices that do not
//          pertain to any part of the Derivative Works, in at least one
//          of the following places: within a NOTICE text file distributed
//          as part of the Derivative Works; within the Source form or
//          documentation, if provided along with the Derivative Works; or,
//          within a display generated by the Derivative Works, if and
//          wherever such third-party notices normally appear. The contents
//          of the NOTICE file are for informational purposes only and
//          do not modify the License. You may add Your own attribution
//          notices within Derivative Works that You distribute, alongside
//          or as an addendum to the NOTICE text from the Work, provided
//          that such additional attribution notices cannot be construed
//          as modifying the License.
//
//      You may add Your own copyright statement to Your modifications and
//      may provide additional or different license terms and conditions
//      for use, reproduction, or distribution of Your modifications, or
//      for any such Derivative Works as a whole, provided Your use,
//      reproduction, and distribution of the Work otherwise complies with
//      the conditions stated in this License.
//
//   5. Submission of Contributions. Unless You explicitly state otherwise,
//      any Contribution intentionally submitted for inclusion in the Work
//      by You to the Licensor shall be under the terms and conditions of
//      this License, without any additional terms or conditions.
//      Notwithstanding the above, nothing herein shall supersede or modify
//      the terms of any separate license agreement you may have executed
//      with Licensor regarding such Contributions.
//
//   6. Trademarks. This License does not grant permission to use the trade
//      names, trademarks, service marks, or product names of the Licensor,
//      except as required for reasonable and customary use in describing the
//      origin of the Work and reproducing the content of the NOTICE file.
//
//   7. Disclaimer of Warranty. Unless required by applicable law or
//      agreed to in writing, Licensor provides the Work (and each
//      Contributor provides its Contributions) on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
//      implied, including, without limitation, any warranties or conditions
//      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
//      PARTICULAR PURPOSE. You are solely responsible for determining the
//      appropriateness of using or redistributing the Work and assume any
//      risks associated with Your exercise of permissions under this License.
//
//   8. Limitation of Liability. In no event and under no legal theory,
//      whether in tort (including negligence), contract, or otherwise,
//      unless required by applicable law (such as deliberate and grossly
//      negligent acts) or agreed to in writing, shall any Contributor be
//      liable to You for damages, including any direct, indirect, special,
//      incidental, or consequential damages of any character arising as a
//      result of this License or out of the use or inability to use the
//      Work (including but not limited to damages for loss of goodwill,
//      work stoppage, computer failure or malfunction, or any and all
//      other commercial damages or losses), even if such Contributor
//      has been advised of the possibility of such damages.
//
//   9. Accepting Warranty or Additional Liability. While redistributing
//      the Work or Derivative Works thereof, You may choose to offer,
//      and charge a fee for, acceptance of support, warranty, indemnity,
//      or other liability obligations and/or rights consistent with this
//      License. However, in accepting such obligations, You may act only
//      on Your own behalf and on Your sole responsibility, not on behalf
//      of any other Contributor, and only if You agree to indemnify,
//      defend, and hold each Contributor harmless for any liability
//      incurred by, or claims asserted against, such Contributor by reason
//      of your accepting any such warranty or additional liability.
//
//   END OF TERMS AND CONDITIONS
//
//   APPENDIX: How to apply the Apache License to your work.
//
//      To apply the Apache License to your work, attach the following
//      boilerplate notice, with the fields enclosed by brackets "{}"
//      replaced with your own identifying information. (Don't include
//      the brackets!)  The text should be enclosed in the appropriate
//      comment syntax for the file format. We also recommend that a
//      file or class name and description of purpose be included on the
//      same "printed page" as the copyright notice for easier
//      identification within third-party archives.
//
//   Copyright (c) 2017 Cisco
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

//Path: Cisco-IOS-XR-ipv4-ospf-oper:ospf/processes/process/default-vrf/process-information/process-summary

package cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.default_vrf.process_information.process_summary;

// OSPF Summary
message ospf_sh_summary_KEYS {
    string process_name = 1;
}

message ospf_sh_summary {
    // If true, Role is Standby, Active otherwise
    bool role_standby = 50;
    // Role, V1/V2 Active/Standby
    uint32 role = 51;
    // If true, NSR is enabled
    bool nsr_enabled = 52;
    // Trigger RP Switchover on detectable process restart
    bool nsr_switchover_on_restart = 53;
    // If true, running in IGP-Intact mode
    bool igp_intact_on = 54;
    // Router ID
    string router_id = 55;
    // Type of Service supported
    uint32 tos_options = 56;
    // Opaque LSA capable
    bool opaque_capable = 57;
    // If true, is an Area Border Router
    bool area_border_router = 58;
    // If true, is an AS Border Router
    bool as_border_router = 59;
    // If true, vrf lite is enabled
    bool vrf_lite_enabled = 60;
    // If true, originate Router LSA with maximum metric
    bool maximum_metric_start = 61;
    // Time remaining for hold down timer (s)
    uint32 maximum_metric_start_timer = 62;
    // Max-metric set reason
    string maximum_metric_set_reason = 63;
    // If true, ABR duties temporarily disabled
    bool maximum_metric_abr_off_mode = 64;
    // Reasons for ABR duties being temporarily disabled
    string maximum_metric_abr_off_reasons = 65;
    // Buffer time in seconds since last neighbor activity, to remain in max-metric ABR off state
    uint32 maximum_metric_abr_off_buffer_time = 66;
    // Max-metric list
    repeated ospf_sh_max_metric maximum_metric_list = 67;
    // Redistribution list
    repeated ospf_sh_redist redistribution_list = 68;
    // Scheduling delay for SPF (ms) This is valid if configured below 64k Deprecated by SPFStartTimeU32]
    uint32 spf_start_time = 69;
    // Minimum delay time between SPF runs (ms) This is valid if configured below 64k Deprecated by SPFHoldTimeU32]
    uint32 spf_hold_time = 70;
    // Maximum delay time between SPF runs (ms) This is valid if configured below 64k Deprecated by SPFMaximumTimeU32]
    uint32 spf_maximum_time = 71;
    // Scheduling delay for SPF (ms)
    uint32 spf_start_time_u32 = 72;
    // Minimum delay time between SPF runs (ms)
    uint32 spf_hold_time_u32 = 73;
    // Maximum delay time between SPF runs (ms)
    uint32 spf_maximum_time_u32 = 74;
    // If true, prefix-priority policy is configured
    bool spf_prefix_priority = 75;
    // SPF Prefix-priority route policy
    string spf_prefix_priority_route_policy = 76;
    // Inital LSA throttle delay (ms)
    sint32 lsa_start_time = 77;
    // Second delay before generating next LSA (ms)
    uint32 lsa_hold_time = 78;
    // Maximum delay before generating an LSA (ms)
    uint32 lsa_maximum_time = 79;
    // Minimum time between LSA regeneration (ms) Rel 4.0.1, deprecated by MinimumLSAIntervalU32]
    uint32 minimum_lsa_interval = 80;
    // Minimum time between LSA regeneration (ms)
    uint32 minimum_lsa_interval_u32 = 81;
    // LSA refresh interval (sec)
    uint32 lsa_refresh_interval = 82;
    // Minimum time between accepting LSAs (ms) Rel 4.0.1, deprecated by MinimumLSAArrivalIntervalU32]
    uint32 minimum_lsa_arrival_interval = 83;
    // Minimum time between accepting LSAs (ms)
    uint32 minimum_lsa_arrival_interval_u32 = 84;
    // Flood pacing timer (ms)
    uint32 if_flood_pacing_interval = 85;
    // Retransmission pacing timer (ms)
    uint32 if_retrans_pacing_interval = 86;
    // Num of nbrs brought up initially per area
    uint32 adj_stag_init_num_nbr = 87;
    // Max num of nbrs brought up simultaneously per OSPF instance
    uint32 adj_stag_max_num_nbr = 88;
    // If true, OSPF Adjacency Staggering is configured
    bool adj_stagger_enabled = 89;
    // Num of nbrs currently forming for OSPF instance
    uint32 adj_stag_num_nbr_forming = 90;
    // Num of full nbrs
    uint32 number_nbrs_full = 91;
    // Number of AS scope LSAs
    uint32 as_lsa_count = 92;
    // Sum of AS scope LSA checksum
    uint32 as_lsa_checksum = 93;
    // Number of Opaque LSAs
    uint32 opaque_lsa_count = 94;
    // Sum of opaque LSA checksum
    uint32 opaque_lsa_checksum = 95;
    // Number of External and AS Opaque LSAs with demand circut bit not set
    uint32 as_dc_bitless_lsa_count = 96;
    // Number of External and AS Opaque LSAs with DoNotAge set 
    uint32 as_dna_lsa_count = 97;
    // Number of areas
    uint32 area_count = 98;
    // Number of normal Areas
    uint32 normal_area_count = 99;
    // Number of Stub and Total Stub Areas
    uint32 stub_area_count = 100;
    // Number of NSSA Areas
    uint32 nssa_area_count = 101;
    // Maximum number of interfaces
    uint32 maximum_interfaces = 102;
    // Length of AS LSAs flood list
    uint32 as_lsa_flood_list_length = 103;
    // If true, NSF enabled
    bool nsf_enabled = 104;
    //  Length of time since the last NSF (s)
    uint32 last_nsf_time = 105;
    // Total time to complete NSF (s)
    uint32 nsf_time = 106;
    // The number of redistributed prefixes allowed
    uint32 redistribution_limit = 107;
    // When the number of redistributed prefixes reaches this threshold, a warning message is issued
    uint32 redistribution_threshold = 108;
    // If true, only a syslog message is printed when redistribution prefix limit is reached
    bool redistribution_limit_warn = 109;
    // Amount of time routes are retained after graceful shutdown (s)
    uint32 graceful_shutdown_retention_time = 110;
    // State of graceful shutdown
    string graceful_shutdown_state = 111;
    // Domain ID information
    ospf_sh_domain_id domain_id = 112;
    // If true, prefix limit for table has been  reached
    bool table_prefix_limit_reached = 113;
    // Non self-generated LSA count
    uint32 non_self_lsa_count = 114;
    // If true, max-lsa protection enabled
    bool max_lsa_enabled = 115;
    // Maximum allowed number of non self-generated LSAs
    uint32 max_lsa_limit = 116;
    // max-lsa protection warning threshold
    uint32 max_lsa_treshold = 117;
    // Warning only when max-lsa reached
    bool max_lsa_warning_only = 118;
    // Time ignoring new LSAs after max-lsa reached
    uint32 max_lsa_ignore_time = 119;
    // Time after which LSA protection counter is reset
    uint32 max_lsa_reset_time = 120;
    // Max allowed number of entering ignore state
    uint32 max_lsa_ignore_limit = 121;
    // How many times ignore state has been entered
    uint32 max_lsa_ignore_count = 122;
    // Remaining time when ignore timer is running
    uint32 max_lsa_ignore_timer = 123;
    // Remaining time when reset timer is running
    uint32 max_lsa_reset_timer = 124;
    // Context name
    string context_name = 125;
    // If true, snmp trap is enabled
    bool snmp_trap_enabled = 126;
    // If true, UCMP is enabled
    bool ucmp = 127;
    // UCMP Prefix-list
    string ucmp_prefix_list = 128;
    // UCMP Variance
    sint32 ucmp_variance = 129;
    // Delay between end of SPF and start of UCMP calculation (ms)
    uint32 ucmp_delay = 130;
    // Microloop avoidance type configured
    string microloop_avoidance_type = 131;
    // Microloop delay time after which actual post convergence paths are given to RIB (s)
    uint32 microloop_avoidance_delay = 132;
    // If true, Uloop is active
    bool microloop_avoidance_active = 133;
    // Remaining time for uloop delay timer to expire (s)
    uint32 microloop_avoidance_delay_expiry = 134;
    // True if connected to LSD
    bool lsd_connected = 135;
    // True if registered with LSD
    bool lsd_registered = 136;
    // True if bound to LSD
    bool lsd_bound = 137;
    // LSD Connection Revision
    uint32 lsd_connection_revision = 138;
    // True if Segment Routing Global Block configured
    bool srgb_configured = 139;
    // Segment Routing Global Block start label value
    uint32 srgb_start = 140;
    // Segment Routing Global Block end label value
    uint32 srgb_end = 141;
    // Segment Routing Global Block allocation status
    string srgb_status = 142;
    // True if Segment Routing Strict-SPF capable
    bool sr_strict_spf_cap = 143;
}

message ospf_sh_time {
    uint32 second = 1;
    uint32 nanosecond = 2;
}

message string_type {
    string value = 1;
}

// Redistributed protocol instance
message ospf_sh_redist_proto {
    string protocol_type = 1;
    // ISIS instance identifier
    string_type isis_instance_id = 2;
    // OSPF process identifier
    string_type ospf_process_id = 3;
    // BGP Autonomous System Number
    string_type bgp_as_number = 4;
    // Autonomous System Number
    string_type eigrp_as_number = 5;
    // Connected instance name
    string_type connected_instance = 6;
}

// OSPF Redistribution Information
message ospf_sh_redist {
    // Protocol Information
    ospf_sh_redist_proto redistribution_protocol = 1;
    // If true, Metric configured
    bool metric_flag = 2;
    // Route metric
    uint32 metric = 3;
    // Whether to use CIDR
    bool classless = 4;
    // To NSSA areas only
    bool nssa_only = 5;
}

// OSPF Domain ID
message ospf_sh_domain_id_entry {
    // Domain ID Type
    uint32 domain_id_type = 1;
    // Domain ID value
    bytes domain_id_value = 2;
}

// OSPF Domain ID entries
message ospf_sh_domain_id {
    // Primary Domain ID
    ospf_sh_domain_id_entry primary_domain_id = 1;
    // List of secondary domain IDs
    repeated ospf_sh_domain_id_entry secondary_domain_id_list = 2;
}

// OSPF Max-metric Information
message ospf_sh_max_metric {
    // Max-metric reason
    uint32 max_metric_reason = 1;
    // Max-metric enabled
    bool max_metric_enabled = 2;
    // If true, BGP is up, no maximum metric Router LSA
    bool unset_maximum_metric = 3;
    // Saved UnsetMaximumMetric
    bool saved_unset_maximum_metric = 4;
    // Time remaining until we will start using normal metrics (s)
    uint32 maximum_metric_start_time = 5;
    // Hold time configured (s)
    uint32 saved_startup_time = 6;
    // If true, set max-metric in stub links
    bool maximum_metric_include_stubs = 7;
    // If true, advertise max-metric in summary-LSAs
    bool maximum_metric_summary_lsa = 8;
    // Max-metric value to advertise in summary-LSAs
    uint32 maximum_metric_summary_lsa_metric = 9;
    // If true, advertise max-metric in external-LSAs
    bool maximum_metric_external_lsa = 10;
    // Max-metric value to advertise in external-LSAs
    uint32 maximum_metric_external_lsa_metric = 11;
    // Time max-metric was used for
    uint32 maximum_metric_originated_for = 12;
    // Time max-metric condition was cleared
    ospf_sh_time maximum_metric_time_unset = 13;
    // Max-metric unset reason
    string maximum_metric_unset_reason = 14;
}

