// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_drivers_media_eth_oper.ethernet_interface.statistics.statistic;

// Port stats counters
message ethernet_port_stats_type_KEYS {
    string interface_name = 1;
}

message ethernet_port_stats_type {
    // Total octets of all frames
    uint64 received_total_bytes = 50;
    // Total octets of all good frames
    uint64 received_good_bytes = 51;
    // All frames, good or bad
    uint64 received_total_frames = 52;
    // All 802.1Q frames
    uint64 received8021_q_frames = 53;
    // All pause frames
    uint64 received_pause_frames = 54;
    // Unsupported MAC Control frames
    uint64 received_unknown_opcodes = 55;
    // All 64 Octet Frame Count
    uint64 received_total64_octet_frames = 56;
    // All 65-127 Octet Frame Count
    uint64 received_total_octet_frames_from65_to127 = 57;
    // All 128-255 Octet Frame Count
    uint64 received_total_octet_frames_from128_to255 = 58;
    // All 256-511 Octet Frame Count
    uint64 received_total_octet_frames_from256_to511 = 59;
    // All 512-1023 Octet Frame Count
    uint64 received_total_octet_frames_from512_to1023 = 60;
    // All 1024-1518 Octet Frame Count
    uint64 received_total_octet_frames_from1024_to1518 = 61;
    // All > 1518 Octet Frame Count
    uint64 received_total_octet_frames_from1519_to_max = 62;
    // Received Good Frames
    uint64 received_good_frames = 63;
    // Received unicast Frames
    uint64 received_unicast_frames = 64;
    // Received multicast Frames
    uint64 received_multicast_frames = 65;
    // Received broadcast Frames
    uint64 received_broadcast_frames = 66;
    // Drops due to buffer overrun
    uint64 number_of_buffer_overrun_packets_dropped = 67;
    // Drops due to packet abort
    uint64 number_of_aborted_packets_dropped = 68;
    // Drops due to invalid VLAN id
    uint64 numberof_invalid_vlan_id_packets_dropped = 69;
    // Drops due to the destination MAC not matching
    uint64 invalid_dest_mac_drop_packets = 70;
    // Drops due to the encapsulation or ether type not matching
    uint64 invalid_encap_drop_packets = 71;
    // Any other drops not counted
    uint64 number_of_miscellaneous_packets_dropped = 72;
    // Good frames > MRU, dropped
    uint64 dropped_giant_packets_greaterthan_mru = 73;
    // Good frames < 64 Octet, dropped
    uint64 dropped_ether_stats_undersize_pkts = 74;
    // Bad Frames > MRU, dropped
    uint64 dropped_jabbers_packets_greaterthan_mru = 75;
    // Bad Frames < 64 Octet, dropped
    uint64 dropped_ether_stats_fragments = 76;
    // Frames 64 - MRU with CRC error
    uint64 dropped_packets_with_crc_align_errors = 77;
    // All collision events
    uint64 ether_stats_collisions = 78;
    // Symbol errors
    uint64 symbol_errors = 79;
    // Any other errors not counted
    uint64 dropped_miscellaneous_error_packets = 80;
    // RFC2819 etherStatsOversizedPkts
    uint64 rfc2819_ether_stats_oversized_pkts = 81;
    // RFC2819 etherStatsJabbers
    uint64 rfc2819_ether_stats_jabbers = 82;
    // RFC2819 etherStatsCRCAlignErrors
    uint64 rfc2819_ether_stats_crc_align_errors = 83;
    // RFC3635 dot3StatsAlignmentErrors
    uint64 rfc3635dot3_stats_alignment_errors = 84;
    // Total octets of all frames
    uint64 total_bytes_transmitted = 85;
    // Total octets of all good frames
    uint64 total_good_bytes_transmitted = 86;
    // All frames, good or bad
    uint64 total_frames_transmitted = 87;
    // All 802.1Q frames
    uint64 transmitted8021_q_frames = 88;
    // All pause frames
    uint64 transmitted_total_pause_frames = 89;
    // All 64 Octet Frame Count
    uint64 transmitted_total64_octet_frames = 90;
    // All 65-127 Octet Frame Count
    uint64 transmitted_total_octet_frames_from65_to127 = 91;
    // All 128-255 Octet Frame Count
    uint64 transmitted_total_octet_frames_from128_to255 = 92;
    // All 256-511 Octet Frame Count
    uint64 transmitted_total_octet_frames_from256_to511 = 93;
    // All 512-1023 Octet Frame Count
    uint64 transmitted_total_octet_frames_from512_to1023 = 94;
    // All 1024-1518 Octet Frame Count
    uint64 transmitted_total_octet_frames_from1024_to1518 = 95;
    // All > 1518 Octet Frame Count
    uint64 transmitted_total_octet_frames_from1518_to_max = 96;
    // Transmitted Good Frames
    uint64 transmitted_good_frames = 97;
    // Transmitted unicast Frames
    uint64 transmitted_unicast_frames = 98;
    // Transmitted multicast Frames
    uint64 transmitted_multicast_frames = 99;
    // Transmitted broadcast Frames
    uint64 transmitted_broadcast_frames = 100;
    // Drops due to buffer underrun
    uint64 buffer_underrun_packet_drops = 101;
    // Drops due to packet abort
    uint64 aborted_packet_drops = 102;
    // Any other drops not counted
    uint64 uncounted_dropped_frames = 103;
    // Any other errors not counted
    uint64 miscellaneous_output_errors = 104;
}

