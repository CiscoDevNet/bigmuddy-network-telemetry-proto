//                                 Apache License
//                           Version 2.0, January 2004
//                        http://www.apache.org/licenses/
//
//   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
//
//   1. Definitions.
//
//      "License" shall mean the terms and conditions for use, reproduction,
//      and distribution as defined by Sections 1 through 9 of this document.
//
//      "Licensor" shall mean the copyright owner or entity authorized by
//      the copyright owner that is granting the License.
//
//      "Legal Entity" shall mean the union of the acting entity and all
//      other entities that control, are controlled by, or are under common
//      control with that entity. For the purposes of this definition,
//      "control" means (i) the power, direct or indirect, to cause the
//      direction or management of such entity, whether by contract or
//      otherwise, or (ii) ownership of fifty percent (50%) or more of the
//      outstanding shares, or (iii) beneficial ownership of such entity.
//
//      "You" (or "Your") shall mean an individual or Legal Entity
//      exercising permissions granted by this License.
//
//      "Source" form shall mean the preferred form for making modifications,
//      including but not limited to software source code, documentation
//      source, and configuration files.
//
//      "Object" form shall mean any form resulting from mechanical
//      transformation or translation of a Source form, including but
//      not limited to compiled object code, generated documentation,
//      and conversions to other media types.
//
//      "Work" shall mean the work of authorship, whether in Source or
//      Object form, made available under the License, as indicated by a
//      copyright notice that is included in or attached to the work
//      (an example is provided in the Appendix below).
//
//      "Derivative Works" shall mean any work, whether in Source or Object
//      form, that is based on (or derived from) the Work and for which the
//      editorial revisions, annotations, elaborations, or other modifications
//      represent, as a whole, an original work of authorship. For the purposes
//      of this License, Derivative Works shall not include works that remain
//      separable from, or merely link (or bind by name) to the interfaces of,
//      the Work and Derivative Works thereof.
//
//      "Contribution" shall mean any work of authorship, including
//      the original version of the Work and any modifications or additions
//      to that Work or Derivative Works thereof, that is intentionally
//      submitted to Licensor for inclusion in the Work by the copyright owner
//      or by an individual or Legal Entity authorized to submit on behalf of
//      the copyright owner. For the purposes of this definition, "submitted"
//      means any form of electronic, verbal, or written communication sent
//      to the Licensor or its representatives, including but not limited to
//      communication on electronic mailing lists, source code control systems,
//      and issue tracking systems that are managed by, or on behalf of, the
//      Licensor for the purpose of discussing and improving the Work, but
//      excluding communication that is conspicuously marked or otherwise
//      designated in writing by the copyright owner as "Not a Contribution."
//
//      "Contributor" shall mean Licensor and any individual or Legal Entity
//      on behalf of whom a Contribution has been received by Licensor and
//      subsequently incorporated within the Work.
//
//   2. Grant of Copyright License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      copyright license to reproduce, prepare Derivative Works of,
//      publicly display, publicly perform, sublicense, and distribute the
//      Work and such Derivative Works in Source or Object form.
//
//   3. Grant of Patent License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      (except as stated in this section) patent license to make, have made,
//      use, offer to sell, sell, import, and otherwise transfer the Work,
//      where such license applies only to those patent claims licensable
//      by such Contributor that are necessarily infringed by their
//      Contribution(s) alone or by combination of their Contribution(s)
//      with the Work to which such Contribution(s) was submitted. If You
//      institute patent litigation against any entity (including a
//      cross-claim or counterclaim in a lawsuit) alleging that the Work
//      or a Contribution incorporated within the Work constitutes direct
//      or contributory patent infringement, then any patent licenses
//      granted to You under this License for that Work shall terminate
//      as of the date such litigation is filed.
//
//   4. Redistribution. You may reproduce and distribute copies of the
//      Work or Derivative Works thereof in any medium, with or without
//      modifications, and in Source or Object form, provided that You
//      meet the following conditions:
//
//      (a) You must give any other recipients of the Work or
//          Derivative Works a copy of this License; and
//
//      (b) You must cause any modified files to carry prominent notices
//          stating that You changed the files; and
//
//      (c) You must retain, in the Source form of any Derivative Works
//          that You distribute, all copyright, patent, trademark, and
//          attribution notices from the Source form of the Work,
//          excluding those notices that do not pertain to any part of
//          the Derivative Works; and
//
//      (d) If the Work includes a "NOTICE" text file as part of its
//          distribution, then any Derivative Works that You distribute must
//          include a readable copy of the attribution notices contained
//          within such NOTICE file, excluding those notices that do not
//          pertain to any part of the Derivative Works, in at least one
//          of the following places: within a NOTICE text file distributed
//          as part of the Derivative Works; within the Source form or
//          documentation, if provided along with the Derivative Works; or,
//          within a display generated by the Derivative Works, if and
//          wherever such third-party notices normally appear. The contents
//          of the NOTICE file are for informational purposes only and
//          do not modify the License. You may add Your own attribution
//          notices within Derivative Works that You distribute, alongside
//          or as an addendum to the NOTICE text from the Work, provided
//          that such additional attribution notices cannot be construed
//          as modifying the License.
//
//      You may add Your own copyright statement to Your modifications and
//      may provide additional or different license terms and conditions
//      for use, reproduction, or distribution of Your modifications, or
//      for any such Derivative Works as a whole, provided Your use,
//      reproduction, and distribution of the Work otherwise complies with
//      the conditions stated in this License.
//
//   5. Submission of Contributions. Unless You explicitly state otherwise,
//      any Contribution intentionally submitted for inclusion in the Work
//      by You to the Licensor shall be under the terms and conditions of
//      this License, without any additional terms or conditions.
//      Notwithstanding the above, nothing herein shall supersede or modify
//      the terms of any separate license agreement you may have executed
//      with Licensor regarding such Contributions.
//
//   6. Trademarks. This License does not grant permission to use the trade
//      names, trademarks, service marks, or product names of the Licensor,
//      except as required for reasonable and customary use in describing the
//      origin of the Work and reproducing the content of the NOTICE file.
//
//   7. Disclaimer of Warranty. Unless required by applicable law or
//      agreed to in writing, Licensor provides the Work (and each
//      Contributor provides its Contributions) on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
//      implied, including, without limitation, any warranties or conditions
//      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
//      PARTICULAR PURPOSE. You are solely responsible for determining the
//      appropriateness of using or redistributing the Work and assume any
//      risks associated with Your exercise of permissions under this License.
//
//   8. Limitation of Liability. In no event and under no legal theory,
//      whether in tort (including negligence), contract, or otherwise,
//      unless required by applicable law (such as deliberate and grossly
//      negligent acts) or agreed to in writing, shall any Contributor be
//      liable to You for damages, including any direct, indirect, special,
//      incidental, or consequential damages of any character arising as a
//      result of this License or out of the use or inability to use the
//      Work (including but not limited to damages for loss of goodwill,
//      work stoppage, computer failure or malfunction, or any and all
//      other commercial damages or losses), even if such Contributor
//      has been advised of the possibility of such damages.
//
//   9. Accepting Warranty or Additional Liability. While redistributing
//      the Work or Derivative Works thereof, You may choose to offer,
//      and charge a fee for, acceptance of support, warranty, indemnity,
//      or other liability obligations and/or rights consistent with this
//      License. However, in accepting such obligations, You may act only
//      on Your own behalf and on Your sole responsibility, not on behalf
//      of any other Contributor, and only if You agree to indemnify,
//      defend, and hold each Contributor harmless for any liability
//      incurred by, or claims asserted against, such Contributor by reason
//      of your accepting any such warranty or additional liability.
//
//   END OF TERMS AND CONDITIONS
//
//   APPENDIX: How to apply the Apache License to your work.
//
//      To apply the Apache License to your work, attach the following
//      boilerplate notice, with the fields enclosed by brackets "{}"
//      replaced with your own identifying information. (Don't include
//      the brackets!)  The text should be enclosed in the appropriate
//      comment syntax for the file format. We also recommend that a
//      file or class name and description of purpose be included on the
//      same "printed page" as the copyright notice for easier
//      identification within third-party archives.
//
//   Copyright (c) 2017 Cisco
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

//Path: Cisco-IOS-XR-ipv4-bgp-oper:bgp/instances/instance/instance-active/default-vrf/afs/af/attributes/attribute

package cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.default_vrf.afs.af.attributes.attribute;

// BGP attribute information
message bgp_attr_bag_KEYS {
    string instance_name = 1;
    string af_name = 2;
    uint32 attribute_iid = 3;
    uint32 attribute_cache_bucket = 4;
    uint32 attribute_cache_id = 5;
}

message bgp_attr_bag {
    // Process instance ID
    uint32 process_instance_id = 50;
    // Attribute Instance ID
    uint32 attribute_instance_id = 51;
    // ID of attribute structure
    uint32 attribute_structure_id = 52;
    // Hash value for attribute structure
    uint32 attribute_structure_hash_value = 53;
    // Number of paths which use this attribute structure
    uint32 reference_count = 54;
    // Attributes
    bgp_attr_ attribute_info = 55;
}

// IPV4Tunnel Address type
message IPV4TunnelAddressType {
    string value = 1;
}

// IPV4MDT Address type
message IPV4MDTAddressType {
    string value = 1;
}

// IPV4 RTConstraint Address type
message RTConstraintAddressType {
    string value = 1;
}

// IPV6 Address type
message IPV6AddressType {
    string value = 1;
}

// MAC Address type
message MACAddressType {
    string value = 1;
}

message bgp_attr_rnh_addr_t {
    string len = 1;
    // IPv4 Addr
    string ipv4_address = 2;
    // IPv6 Addr
    IPV6AddressType ipv6_address = 3;
    // MAC Addr
    MACAddressType mac_address = 4;
}

message bgp_ipv4_srpolicy_addr_t {
    bytes ipv4_srpolicy_address = 1;
}

message bgp_ipv6_srpolicy_addr_t {
    bytes ipv6_srpolicy_address = 1;
}

message bgp_l2vpn_addr_t {
    bytes l2vpn_address = 1;
}

// L2VPN EVPN Address type
message L2VPNEVPNAddressType {
    string value = 1;
}

message bgp_l2vpn_mspw_addr_t {
    bytes l2vpn_address = 1;
}

// IPV6 MVPN Address type
message IPV6MVPNAddressType {
    string value = 1;
}

// IPV4 MVPN Address type
message IPV4MVPNAddressType {
    string value = 1;
}

// LINKSTATE LINKSTATE Address type
message LS_LSAddressType {
    string value = 1;
}

// IPv4 Flowspec Address type
message IPv4FlowspecAddressType {
    string value = 1;
}

// IPv6 Flowspec Address type
message IPv6FlowspecAddressType {
    string value = 1;
}

message bgp_addrtype {
    string afi = 1;
    // IPv4 Addr
    string ipv4_address = 2;
    // IPv4 Mcast Addr
    string ipv4_mcast_address = 3;
    // IPv4 Label Addr
    string ipv4_label_address = 4;
    // IPv4 Tunnel
    IPV4TunnelAddressType ipv4_tunnel_address = 5;
    // IPv4 MDT Addr
    IPV4MDTAddressType ipv4_mdt_address = 6;
    // IPv4 VPN Addr
    string ipv4_vpn_address = 7;
    // IPv4 VPN Mcast Addr
    string ipv4_vpna_mcastddress = 8;
    // IPV6 Addr
    IPV6AddressType ipv6_address = 9;
    // IPV6 Mcast Addr
    IPV6AddressType ipv6_mcast_address = 10;
    // IPv6 Label Addr
    IPV6AddressType ipv6_label_address = 11;
    // IPv6 VPN Addr
    IPV6AddressType ipv6_vpn_address = 12;
    // IPv6 VPN Mcast Addr
    IPV6AddressType ipv6_vpn_mcast_address = 13;
    // L2VPN VPLS Addr
    bgp_l2vpn_addr_t l2_vpnvpls_address = 14;
    // RT Constrt Addr
    RTConstraintAddressType rt_constraint_address = 15;
    // MVPN addr
    IPV6MVPNAddressType ipv6_mvpn_address = 16;
    // MVPN4 addr
    IPV4MVPNAddressType ipv4_mvpn_address = 17;
    // L2VPN EVPN Addr
    L2VPNEVPNAddressType l2_vpn_evpn_address = 18;
    // LINKSTATE LINKSTATE Addr
    LS_LSAddressType ls_ls_address = 19;
    // L2VPN MSPW Addr
    bgp_l2vpn_mspw_addr_t l2_vpn_mspw_address = 20;
    // IPV4 Flowspec Addr
    IPv4FlowspecAddressType ipv4_flowspec_address = 21;
    // IPV6 Flowspec Addr
    IPv6FlowspecAddressType ipv6_flowspec_address = 22;
    // IPV4 VPN Flowspec Addr
    IPv4FlowspecAddressType ipv4_vpn_flowspec_address = 23;
    // IPV6 VPN Flowspec Addr
    IPv6FlowspecAddressType ipv6_vpn_flowspec_address = 24;
    // IPV4 Policy Addr
    bgp_ipv4_srpolicy_addr_t ipv4_sr_policy_address = 25;
    // IPV6 Policy Addr
    bgp_ipv6_srpolicy_addr_t ipv6_sr_policy_address = 26;
}

message bgp_pedistlbl_entry_ {
    //  PE address
    string pe_address = 1;
    // Label
    uint32 label = 2;
}

message sr_sid_ {
    string type = 1;
    // MPLS Label value
    uint32 label = 2;
    // IPv4 Address value
    string ipv4_address = 3;
    // IPv6 address value
    IPV6AddressType ipv6_address = 4;
}

message bgp_binding_sid_t {
    string type = 1;
    // MPLS Label
    uint32 label = 2;
    // IPv6 Addr
    IPV6AddressType ipv6_address = 3;
}

message sr_exppath_ {
    // Weight of segment list
    uint32 weight = 1;
    // Segments in segment list
    repeated sr_sid_ segment = 2;
}

message bgp_srpolicy_entry_ {
    // Tunnel Encapsulation Type
    uint32 tunnel_encap_type = 1;
    // SR Policy incoming Binding sid
    bgp_binding_sid_t binding_sid = 2;
    // SR Policy allocated Binding sid by the router
    bgp_binding_sid_t allocated_binding_sid = 3;
    // SR Policy Preference
    uint32 preference = 4;
    // SR Policy active state in forwarding
    bool state = 5;
    // SR Policy programming Status
    string request_state = 6;
    // SR Policy Segment Lists
    repeated sr_exppath_ segment_lists = 7;
}

message bgp_tunencap_entry_ {
    // Tunnel encap type SR policy
    bgp_srpolicy_entry_ sr_policy = 1;
}

message bgp_bag_largecomm_ {
    // Global Administrator
    uint32 global_admin = 1;
    // Local Data 1
    uint32 local_data1 = 2;
    // Local Data 2
    uint32 local_data2 = 3;
}

message bgp_common_attr_entry_ {
    // Metric attribute present
    bool is_metric_present = 1;
    // Local Preference attribute present
    bool is_local_pref_present = 2;
    // Atomic aggregate attribute present
    bool is_atomic_aggregate_present = 3;
    // Aggregator attribute present
    bool is_aggregator_present = 4;
    // Origin attribute present
    bool is_origin_present = 5;
    // AS path attribute present
    bool is_as_path_present = 6;
    // Community attribute present
    bool is_community_present = 7;
    // Extended community attribute present
    bool is_extended_community_present = 8;
    // SSA attribute present
    bool is_ssa_present = 9;
    // Connector present
    bool is_connector_present = 10;
    // PMSI Attribute  present
    bool is_pmsi_present = 11;
    // PPMP Attribute  present
    bool is_pppmp_present = 12;
    // AIGP Present
    bool is_aigp_present = 13;
    // PE distinguisher label  attribute present
    bool is_pe_distinguisher_label_present = 14;
    // BGP LS attribute present
    bool is_ls_attribute_present = 15;
    // Label Index attribute present
    bool is_label_index_present = 16;
    // Neighbor AS number
    uint32 neighbor_as = 17;
    // AS where aggregation was last performed
    uint32 aggregator_as = 18;
    // Address where aggregation was performed
    string aggregator_address = 19;
    // Metric
    uint32 metric = 20;
    // Local preference
    uint32 local_preference = 21;
    // Origin
    uint32 origin = 22;
    // AS path attribute
    string as_path = 23;
    // Community attribute
    repeated uint32 community = 24;
    // Extended community Flags
    uint32 extended_community_flags = 25;
    // Extended community attribute
    repeated uint32 extended_community = 26;
    // Unknown attributes
    repeated uint32 unknown_attributes = 27;
    // Cluster list attribute
    repeated uint32 cluster_list = 28;
    // Originator attribute
    string originator = 29;
    // L2TPv3 session id
    uint32 l2_t_pv3_session_id = 30;
    // L2TPv3 Cookie
    repeated uint32 l2_t_pv3_cookie = 31;
    // Connector Type
    uint32 connector_type = 32;
    // Connector Value
    repeated uint32 connector_value = 33;
    // AIGP metric value
    uint64 aigp_metric_value = 34;
    // PMSI Type
    uint32 pmsi_type = 35;
    // PMSI Value
    uint32 pmsi_flags = 36;
    // PMSI label
    uint32 pmsi_label = 37;
    // PMSI Value
    repeated uint32 pmsi_value = 38;
    // PPMP Value
    uint32 ppm_pvalue = 39;
    // PE distinguisher label attribute
    repeated bgp_pedistlbl_entry_ pe_distinguisher_label = 40;
    // BGP LS attribute
    repeated uint32 ls_attr = 41;
    // Label Index attribute
    repeated uint32 label_index_attr = 42;
    // Tunnel Encapsulation attribute
    bgp_tunencap_entry_ tunnel_encap = 43;
    // Large Community attribute present
    bool is_large_community_present = 44;
    // Large Community attribute
    repeated bgp_bag_largecomm_ large_community = 45;
}

message bgp_attr_ {
    // AS path encoded as 2-byte
    bool is_as_path2_byte = 1;
    // Application gateway present
    bool is_application_gateway_present = 2;
    // BGP ATTR_SET attribute present
    bool is_attr_set_present = 3;
    // AIGP set by policy inbound IGP 
    bool set_aigp_inbound_igp = 4;
    // AIGP set by policy inbound metric
    bool set_aigp_inbound_metric = 5;
    // RNH Attribute  present
    bool is_rnh_present = 6;
    // RIB RNH Attribute  present
    bool is_ribrnh_present = 7;
    // Attribute key number
    uint32 attribute_key_number = 8;
    // Attribute reuse ID Configured
    bool attribute_reuse_id_config = 9;
    // Attribute reuse ID maximum ID
    uint32 attribute_reuse_id_max_id = 10;
    // Attribute reuse ID nodes
    uint32 attribute_reuse_id_node = 11;
    // Attribute reuse ID current ID
    uint32 attribute_reuse_id_current = 12;
    // Attribute reuse ID allocated keys
    uint32 attribute_reuse_id_keys = 13;
    // Attribute reuse ID timer in seconds
    uint32 attribute_reuse_id_recover_sec = 14;
    // VPN Distinguisher
    uint32 vpn_distinguisher = 15;
    // Common attributes
    bgp_common_attr_entry_ common_attributes = 16;
    // ATTR_SET attribute
    bgp_common_attr_entry_ attr_set = 17;
    // RNH Type
    uint32 rnh_type = 18;
    // RNH Length
    uint32 rnh_len = 19;
    // RNH Address Length
    uint32 rnh_addr_len = 20;
    // RNH Address
    bgp_attr_rnh_addr_t rnh_addr = 21;
    // RIB RNH Table
    uint32 ribrnh_table = 22;
    // RIB RNH MAC Address
    string ribrnh_mac = 23;
    // RIB RNH IP Address
    bgp_addrtype ribrnh_ip = 24;
    // RIB RNH IP Table
    uint32 ribrnhip_table = 25;
    // RIB RNH Vni
    uint32 ribrnh_vni = 26;
    // RIB RNH Encapsulation Type
    uint32 ribrnh_encap = 27;
}

