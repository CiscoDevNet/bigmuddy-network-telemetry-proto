//                                 Apache License
//                           Version 2.0, January 2004
//                        http://www.apache.org/licenses/
//
//   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
//
//   1. Definitions.
//
//      "License" shall mean the terms and conditions for use, reproduction,
//      and distribution as defined by Sections 1 through 9 of this document.
//
//      "Licensor" shall mean the copyright owner or entity authorized by
//      the copyright owner that is granting the License.
//
//      "Legal Entity" shall mean the union of the acting entity and all
//      other entities that control, are controlled by, or are under common
//      control with that entity. For the purposes of this definition,
//      "control" means (i) the power, direct or indirect, to cause the
//      direction or management of such entity, whether by contract or
//      otherwise, or (ii) ownership of fifty percent (50%) or more of the
//      outstanding shares, or (iii) beneficial ownership of such entity.
//
//      "You" (or "Your") shall mean an individual or Legal Entity
//      exercising permissions granted by this License.
//
//      "Source" form shall mean the preferred form for making modifications,
//      including but not limited to software source code, documentation
//      source, and configuration files.
//
//      "Object" form shall mean any form resulting from mechanical
//      transformation or translation of a Source form, including but
//      not limited to compiled object code, generated documentation,
//      and conversions to other media types.
//
//      "Work" shall mean the work of authorship, whether in Source or
//      Object form, made available under the License, as indicated by a
//      copyright notice that is included in or attached to the work
//      (an example is provided in the Appendix below).
//
//      "Derivative Works" shall mean any work, whether in Source or Object
//      form, that is based on (or derived from) the Work and for which the
//      editorial revisions, annotations, elaborations, or other modifications
//      represent, as a whole, an original work of authorship. For the purposes
//      of this License, Derivative Works shall not include works that remain
//      separable from, or merely link (or bind by name) to the interfaces of,
//      the Work and Derivative Works thereof.
//
//      "Contribution" shall mean any work of authorship, including
//      the original version of the Work and any modifications or additions
//      to that Work or Derivative Works thereof, that is intentionally
//      submitted to Licensor for inclusion in the Work by the copyright owner
//      or by an individual or Legal Entity authorized to submit on behalf of
//      the copyright owner. For the purposes of this definition, "submitted"
//      means any form of electronic, verbal, or written communication sent
//      to the Licensor or its representatives, including but not limited to
//      communication on electronic mailing lists, source code control systems,
//      and issue tracking systems that are managed by, or on behalf of, the
//      Licensor for the purpose of discussing and improving the Work, but
//      excluding communication that is conspicuously marked or otherwise
//      designated in writing by the copyright owner as "Not a Contribution."
//
//      "Contributor" shall mean Licensor and any individual or Legal Entity
//      on behalf of whom a Contribution has been received by Licensor and
//      subsequently incorporated within the Work.
//
//   2. Grant of Copyright License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      copyright license to reproduce, prepare Derivative Works of,
//      publicly display, publicly perform, sublicense, and distribute the
//      Work and such Derivative Works in Source or Object form.
//
//   3. Grant of Patent License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      (except as stated in this section) patent license to make, have made,
//      use, offer to sell, sell, import, and otherwise transfer the Work,
//      where such license applies only to those patent claims licensable
//      by such Contributor that are necessarily infringed by their
//      Contribution(s) alone or by combination of their Contribution(s)
//      with the Work to which such Contribution(s) was submitted. If You
//      institute patent litigation against any entity (including a
//      cross-claim or counterclaim in a lawsuit) alleging that the Work
//      or a Contribution incorporated within the Work constitutes direct
//      or contributory patent infringement, then any patent licenses
//      granted to You under this License for that Work shall terminate
//      as of the date such litigation is filed.
//
//   4. Redistribution. You may reproduce and distribute copies of the
//      Work or Derivative Works thereof in any medium, with or without
//      modifications, and in Source or Object form, provided that You
//      meet the following conditions:
//
//      (a) You must give any other recipients of the Work or
//          Derivative Works a copy of this License; and
//
//      (b) You must cause any modified files to carry prominent notices
//          stating that You changed the files; and
//
//      (c) You must retain, in the Source form of any Derivative Works
//          that You distribute, all copyright, patent, trademark, and
//          attribution notices from the Source form of the Work,
//          excluding those notices that do not pertain to any part of
//          the Derivative Works; and
//
//      (d) If the Work includes a "NOTICE" text file as part of its
//          distribution, then any Derivative Works that You distribute must
//          include a readable copy of the attribution notices contained
//          within such NOTICE file, excluding those notices that do not
//          pertain to any part of the Derivative Works, in at least one
//          of the following places: within a NOTICE text file distributed
//          as part of the Derivative Works; within the Source form or
//          documentation, if provided along with the Derivative Works; or,
//          within a display generated by the Derivative Works, if and
//          wherever such third-party notices normally appear. The contents
//          of the NOTICE file are for informational purposes only and
//          do not modify the License. You may add Your own attribution
//          notices within Derivative Works that You distribute, alongside
//          or as an addendum to the NOTICE text from the Work, provided
//          that such additional attribution notices cannot be construed
//          as modifying the License.
//
//      You may add Your own copyright statement to Your modifications and
//      may provide additional or different license terms and conditions
//      for use, reproduction, or distribution of Your modifications, or
//      for any such Derivative Works as a whole, provided Your use,
//      reproduction, and distribution of the Work otherwise complies with
//      the conditions stated in this License.
//
//   5. Submission of Contributions. Unless You explicitly state otherwise,
//      any Contribution intentionally submitted for inclusion in the Work
//      by You to the Licensor shall be under the terms and conditions of
//      this License, without any additional terms or conditions.
//      Notwithstanding the above, nothing herein shall supersede or modify
//      the terms of any separate license agreement you may have executed
//      with Licensor regarding such Contributions.
//
//   6. Trademarks. This License does not grant permission to use the trade
//      names, trademarks, service marks, or product names of the Licensor,
//      except as required for reasonable and customary use in describing the
//      origin of the Work and reproducing the content of the NOTICE file.
//
//   7. Disclaimer of Warranty. Unless required by applicable law or
//      agreed to in writing, Licensor provides the Work (and each
//      Contributor provides its Contributions) on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
//      implied, including, without limitation, any warranties or conditions
//      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
//      PARTICULAR PURPOSE. You are solely responsible for determining the
//      appropriateness of using or redistributing the Work and assume any
//      risks associated with Your exercise of permissions under this License.
//
//   8. Limitation of Liability. In no event and under no legal theory,
//      whether in tort (including negligence), contract, or otherwise,
//      unless required by applicable law (such as deliberate and grossly
//      negligent acts) or agreed to in writing, shall any Contributor be
//      liable to You for damages, including any direct, indirect, special,
//      incidental, or consequential damages of any character arising as a
//      result of this License or out of the use or inability to use the
//      Work (including but not limited to damages for loss of goodwill,
//      work stoppage, computer failure or malfunction, or any and all
//      other commercial damages or losses), even if such Contributor
//      has been advised of the possibility of such damages.
//
//   9. Accepting Warranty or Additional Liability. While redistributing
//      the Work or Derivative Works thereof, You may choose to offer,
//      and charge a fee for, acceptance of support, warranty, indemnity,
//      or other liability obligations and/or rights consistent with this
//      License. However, in accepting such obligations, You may act only
//      on Your own behalf and on Your sole responsibility, not on behalf
//      of any other Contributor, and only if You agree to indemnify,
//      defend, and hold each Contributor harmless for any liability
//      incurred by, or claims asserted against, such Contributor by reason
//      of your accepting any such warranty or additional liability.
//
//   END OF TERMS AND CONDITIONS
//
//   APPENDIX: How to apply the Apache License to your work.
//
//      To apply the Apache License to your work, attach the following
//      boilerplate notice, with the fields enclosed by brackets "{}"
//      replaced with your own identifying information. (Don't include
//      the brackets!)  The text should be enclosed in the appropriate
//      comment syntax for the file format. We also recommend that a
//      file or class name and description of purpose be included on the
//      same "printed page" as the copyright notice for easier
//      identification within third-party archives.
//
//   Copyright (c) 2017 Cisco
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

//Path: Cisco-IOS-XR-ipv4-bgp-oper:bgp/instances/instance/instance-standby/vrfs/vrf/bmp/server-summaries/server-summary

package cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.vrfs.vrf.bmp.server_summaries.server_summary;

// BMP Server Details
message bgp_bmp_srvr_bag_KEYS {
    string instance_name = 1;
    string vrf_name = 2;
    uint32 server_id = 3;
}

message bgp_bmp_srvr_bag {
    // BMP Server ID
    uint32 bmp_server_id = 50;
    // BMP Server Hostname
    string bmp_server_hostname = 51;
    // BMP Server Port Number
    uint32 bmp_server_port = 52;
    // Connection state of the BMP server
    string bmp_server_state = 53;
    // Connection to the BMP server Flapping
    bool bmp_server_is_flapping = 54;
    // Age of current state of BMP Server
    bgp_timespec bmp_server_state_age = 55;
    // Timespec of current state of BMP Server
    bgp_timespec bmp_server_state_time_spec = 56;
    // Timespec of Last Disconnect event received from BMP server
    bgp_timespec bmp_server_last_discon_time = 57;
    // Neighbor count for the BMP Server
    uint32 bmp_server_nbr_count = 58;
    // Number of Initiation Msgs sent by this BMP Server
    uint32 bmp_init_msg_count = 59;
    // Number of Termination Messages sent by this BMP Server
    uint32 bmp_termination_msg_count = 60;
    // Number of Status ReportMessages sent by this BMP Server
    uint32 bmp_status_report_count = 61;
    // Total number of per peer messages sent
    uint32 bmp_per_peer_msg_count = 62;
    // Total number of messages dropped
    uint32 bmp_peer_msg_drop_count = 63;
    // Total number of bmpQ msgs pending
    uint32 bmp_peer_msg_pending_count = 64;
    // Precedence (0) or DSCP (1) type
    uint32 tos_type = 65;
    // Precedence or DSCP value
    uint32 tos_value = 66;
    // Interface configured as Update Source
    string update_source_interface_name = 67;
    // Address of Interface configured as Update Source
    bgp_addrtype update_source_address = 68;
    // VRF ID of interface configured as Update Source
    uint32 update_source_vrf_id = 69;
    // VRF Name configured
    string bmp_vrf_name = 70;
    // VRF ID for the vrf name configured
    uint32 bmp_vrf_id = 71;
    // AFI specific info for BMP server
    repeated bgp_bmp_srvr_afi_ bmpafi_info = 72;
    // Update sending mode configured for this BMP server
    string bmp_update_mode = 73;
    // TCP Keep alive interval configured
    uint32 tcp_keep_alive_interval = 74;
    // TCP Maximum Segments size configured
    uint32 tcp_maximum_segment_size = 75;
    // Are we waiting for TCP write callback ?
    uint32 tcp_write_cb_pending = 76;
    // Last TCP Socket write status
    uint32 tcp_last_write_result = 77;
    // Last TCP Write CB time
    uint64 tcp_last_write_cb_time = 78;
    // Last TCP Write time
    uint64 tcp_last_write_time = 79;
    // Last BMPQ write pulse Sent time
    uint64 bmpq_last_write_pulse_sent_time = 80;
    // Last BMPQ write pulse Sent for all BMP servers 
    uint64 bmpq_last_all_write_pulse_sent_time = 81;
    // Last BMPQ write pulse callback time
    uint64 bmpq_last_write_pulse_cb_time = 82;
    // Number of path update sent 
    uint32 path_update_count = 83;
    // Number of path wdraw sent
    uint32 path_withdraw_count = 84;
    // Number of path update drop 
    uint32 path_update_drop = 85;
    // Number of path wdraw drop 
    uint32 path_withdraw_drop = 86;
    // Total bmpQ msgs pending max
    uint32 bmp_peer_msg_pending_count_max = 87;
    // Total bmpQ msgs pending max time
    uint64 bmp_peer_msg_pending_count_hwts = 88;
    // Total bytes sent to TCP
    uint64 bmp_bytes_written_tcp = 89;
    // Time spent processing sending msg to TCP(milliseconds)
    uint32 tcp_write_time = 90;
    // Total bmpQ update msgs 
    uint32 bmpr_mon_upd_messages = 91;
    // Total bmpQ withdraw msgs 
    uint32 bmpr_mon_wdraw_messages = 92;
    // Total bmpQ wdraw msgs discarded because of peer down
    uint32 bmp_messages_wdraw_discarded = 93;
    // Total bmpQ wdraw pfxes discarded because of peer down
    uint32 bmp_pfx_wdraw_discarded = 94;
    // Total number of per peer route mon messages sent
    uint32 bmp_per_peer_msg_route_mon_count = 95;
    // Time spent in update generation(milliseconds)
    uint32 bmpr_mon_update_gen_time = 96;
    // Total bmpQ EOR update msgs 
    uint32 bmpr_mon_eo_rmessages = 97;
    // Current Buffer usage per BMP Route Mon
    uint64 bmp_rmon_cur_buffer_size = 98;
    // Buffer limit used for route mon
    uint64 bmp_maximum_buffer_size_route_mon = 99;
    // Number of BMP server that are UP
    uint32 bmp_server_up_count = 100;
    // Update generation in progress
    bool bmp_upd_gen_in_progress = 101;
    // Reset walk in progress
    bool bmp_reset_walk_in_progress = 102;
}

message bgp_timespec {
    // Seconds part of time value
    uint32 seconds = 1;
    // Nanoseconds part of time value
    uint32 nanoseconds = 2;
}

// IPV4Tunnel Address type
message IPV4TunnelAddressType {
    string value = 1;
}

// IPV4MDT Address type
message IPV4MDTAddressType {
    string value = 1;
}

// IPV4 RTConstraint Address type
message RTConstraintAddressType {
    string value = 1;
}

// IPV6 Address type
message IPV6AddressType {
    string value = 1;
}

message bgp_ipv4_srpolicy_addr_t {
    bytes ipv4_srpolicy_address = 1;
}

message bgp_ipv6_srpolicy_addr_t {
    bytes ipv6_srpolicy_address = 1;
}

message bgp_l2vpn_addr_t {
    bytes l2vpn_address = 1;
}

// L2VPN EVPN Address type
message L2VPNEVPNAddressType {
    string value = 1;
}

message bgp_l2vpn_mspw_addr_t {
    bytes l2vpn_address = 1;
}

// IPV6 MVPN Address type
message IPV6MVPNAddressType {
    string value = 1;
}

// IPV4 MVPN Address type
message IPV4MVPNAddressType {
    string value = 1;
}

// LINKSTATE LINKSTATE Address type
message LS_LSAddressType {
    string value = 1;
}

// IPv4 Flowspec Address type
message IPv4FlowspecAddressType {
    string value = 1;
}

// IPv6 Flowspec Address type
message IPv6FlowspecAddressType {
    string value = 1;
}

message bgp_addrtype {
    string afi = 1;
    // IPv4 Addr
    string ipv4_address = 2;
    // IPv4 Mcast Addr
    string ipv4_mcast_address = 3;
    // IPv4 Label Addr
    string ipv4_label_address = 4;
    // IPv4 Tunnel
    IPV4TunnelAddressType ipv4_tunnel_address = 5;
    // IPv4 MDT Addr
    IPV4MDTAddressType ipv4_mdt_address = 6;
    // IPv4 VPN Addr
    string ipv4_vpn_address = 7;
    // IPv4 VPN Mcast Addr
    string ipv4_vpna_mcastddress = 8;
    // IPV6 Addr
    IPV6AddressType ipv6_address = 9;
    // IPV6 Mcast Addr
    IPV6AddressType ipv6_mcast_address = 10;
    // IPv6 Label Addr
    IPV6AddressType ipv6_label_address = 11;
    // IPv6 VPN Addr
    IPV6AddressType ipv6_vpn_address = 12;
    // IPv6 VPN Mcast Addr
    IPV6AddressType ipv6_vpn_mcast_address = 13;
    // L2VPN VPLS Addr
    bgp_l2vpn_addr_t l2_vpnvpls_address = 14;
    // RT Constrt Addr
    RTConstraintAddressType rt_constraint_address = 15;
    // MVPN addr
    IPV6MVPNAddressType ipv6_mvpn_address = 16;
    // MVPN4 addr
    IPV4MVPNAddressType ipv4_mvpn_address = 17;
    // L2VPN EVPN Addr
    L2VPNEVPNAddressType l2_vpn_evpn_address = 18;
    // LINKSTATE LINKSTATE Addr
    LS_LSAddressType ls_ls_address = 19;
    // L2VPN MSPW Addr
    bgp_l2vpn_mspw_addr_t l2_vpn_mspw_address = 20;
    // IPV4 Flowspec Addr
    IPv4FlowspecAddressType ipv4_flowspec_address = 21;
    // IPV6 Flowspec Addr
    IPv6FlowspecAddressType ipv6_flowspec_address = 22;
    // IPV4 VPN Flowspec Addr
    IPv4FlowspecAddressType ipv4_vpn_flowspec_address = 23;
    // IPV6 VPN Flowspec Addr
    IPv6FlowspecAddressType ipv6_vpn_flowspec_address = 24;
    // IPV4 Policy Addr
    bgp_ipv4_srpolicy_addr_t ipv4_sr_policy_address = 25;
    // IPV6 Policy Addr
    bgp_ipv6_srpolicy_addr_t ipv6_sr_policy_address = 26;
}

message bgp_prefixtype {
    // Prefix
    bgp_addrtype prefix = 1;
    // Prefix length
    uint32 prefix_length = 2;
}

message bgp_bmp_srvr_afi_ {
    // BMP Address family identifier
    string bmpaf_name = 1;
    // BMP Resume prefix
    bgp_prefixtype bmp_resume_prefix = 2;
    // BMP Resume prefix Len
    uint32 bmp_resume_prefix_len = 3;
    // Update Gen ResumeWalk start version
    uint32 bmp_upd_gen_resume_start_version = 4;
    // Update Gen ResumeWalk end version
    uint32 bmp_upd_gen_resume_end_version = 5;
    // Update Gen WalkStopped
    bool bmp_upd_gen_walk_stopped = 6;
    // Update Gen ResumeWalk Net version
    uint32 bmp_upd_gen_resume_net_version = 7;
    // Last Update Gen Run time stamp
    uint64 bmp_upd_gen_walk_run_time_stamp = 8;
    // Number of times Update Gen ran
    uint64 bmp_upd_gen_walk_run_count = 9;
    // Last Update Gen Stop time stamp
    uint64 bmp_upd_gen_walk_stop_time_stamp = 10;
    // Number of times Update Gen Stopped
    uint64 bmp_upd_gen_walk_stop_count = 11;
    // Version to reach to send EOR
    uint32 bmp_init_eor_end_version = 12;
    // Count for pending EOR
    uint32 bmp_init_eor_pending_cnt = 13;
    // Filter Neighbor Address
    bgp_addrtype bmp_filter_neighbor_address = 14;
    // Filter Neighbor Address Set ?
    bool bmp_filter_neighbor_address_set = 15;
    // Filter nbr Count for this AFI
    uint32 bmp_filter_nbr_cnt = 16;
    // Table Version that this BMP server has caught upto
    uint32 bmp_send_version = 17;
}

