//                                 Apache License
//                           Version 2.0, January 2004
//                        http://www.apache.org/licenses/
//
//   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
//
//   1. Definitions.
//
//      "License" shall mean the terms and conditions for use, reproduction,
//      and distribution as defined by Sections 1 through 9 of this document.
//
//      "Licensor" shall mean the copyright owner or entity authorized by
//      the copyright owner that is granting the License.
//
//      "Legal Entity" shall mean the union of the acting entity and all
//      other entities that control, are controlled by, or are under common
//      control with that entity. For the purposes of this definition,
//      "control" means (i) the power, direct or indirect, to cause the
//      direction or management of such entity, whether by contract or
//      otherwise, or (ii) ownership of fifty percent (50%) or more of the
//      outstanding shares, or (iii) beneficial ownership of such entity.
//
//      "You" (or "Your") shall mean an individual or Legal Entity
//      exercising permissions granted by this License.
//
//      "Source" form shall mean the preferred form for making modifications,
//      including but not limited to software source code, documentation
//      source, and configuration files.
//
//      "Object" form shall mean any form resulting from mechanical
//      transformation or translation of a Source form, including but
//      not limited to compiled object code, generated documentation,
//      and conversions to other media types.
//
//      "Work" shall mean the work of authorship, whether in Source or
//      Object form, made available under the License, as indicated by a
//      copyright notice that is included in or attached to the work
//      (an example is provided in the Appendix below).
//
//      "Derivative Works" shall mean any work, whether in Source or Object
//      form, that is based on (or derived from) the Work and for which the
//      editorial revisions, annotations, elaborations, or other modifications
//      represent, as a whole, an original work of authorship. For the purposes
//      of this License, Derivative Works shall not include works that remain
//      separable from, or merely link (or bind by name) to the interfaces of,
//      the Work and Derivative Works thereof.
//
//      "Contribution" shall mean any work of authorship, including
//      the original version of the Work and any modifications or additions
//      to that Work or Derivative Works thereof, that is intentionally
//      submitted to Licensor for inclusion in the Work by the copyright owner
//      or by an individual or Legal Entity authorized to submit on behalf of
//      the copyright owner. For the purposes of this definition, "submitted"
//      means any form of electronic, verbal, or written communication sent
//      to the Licensor or its representatives, including but not limited to
//      communication on electronic mailing lists, source code control systems,
//      and issue tracking systems that are managed by, or on behalf of, the
//      Licensor for the purpose of discussing and improving the Work, but
//      excluding communication that is conspicuously marked or otherwise
//      designated in writing by the copyright owner as "Not a Contribution."
//
//      "Contributor" shall mean Licensor and any individual or Legal Entity
//      on behalf of whom a Contribution has been received by Licensor and
//      subsequently incorporated within the Work.
//
//   2. Grant of Copyright License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      copyright license to reproduce, prepare Derivative Works of,
//      publicly display, publicly perform, sublicense, and distribute the
//      Work and such Derivative Works in Source or Object form.
//
//   3. Grant of Patent License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      (except as stated in this section) patent license to make, have made,
//      use, offer to sell, sell, import, and otherwise transfer the Work,
//      where such license applies only to those patent claims licensable
//      by such Contributor that are necessarily infringed by their
//      Contribution(s) alone or by combination of their Contribution(s)
//      with the Work to which such Contribution(s) was submitted. If You
//      institute patent litigation against any entity (including a
//      cross-claim or counterclaim in a lawsuit) alleging that the Work
//      or a Contribution incorporated within the Work constitutes direct
//      or contributory patent infringement, then any patent licenses
//      granted to You under this License for that Work shall terminate
//      as of the date such litigation is filed.
//
//   4. Redistribution. You may reproduce and distribute copies of the
//      Work or Derivative Works thereof in any medium, with or without
//      modifications, and in Source or Object form, provided that You
//      meet the following conditions:
//
//      (a) You must give any other recipients of the Work or
//          Derivative Works a copy of this License; and
//
//      (b) You must cause any modified files to carry prominent notices
//          stating that You changed the files; and
//
//      (c) You must retain, in the Source form of any Derivative Works
//          that You distribute, all copyright, patent, trademark, and
//          attribution notices from the Source form of the Work,
//          excluding those notices that do not pertain to any part of
//          the Derivative Works; and
//
//      (d) If the Work includes a "NOTICE" text file as part of its
//          distribution, then any Derivative Works that You distribute must
//          include a readable copy of the attribution notices contained
//          within such NOTICE file, excluding those notices that do not
//          pertain to any part of the Derivative Works, in at least one
//          of the following places: within a NOTICE text file distributed
//          as part of the Derivative Works; within the Source form or
//          documentation, if provided along with the Derivative Works; or,
//          within a display generated by the Derivative Works, if and
//          wherever such third-party notices normally appear. The contents
//          of the NOTICE file are for informational purposes only and
//          do not modify the License. You may add Your own attribution
//          notices within Derivative Works that You distribute, alongside
//          or as an addendum to the NOTICE text from the Work, provided
//          that such additional attribution notices cannot be construed
//          as modifying the License.
//
//      You may add Your own copyright statement to Your modifications and
//      may provide additional or different license terms and conditions
//      for use, reproduction, or distribution of Your modifications, or
//      for any such Derivative Works as a whole, provided Your use,
//      reproduction, and distribution of the Work otherwise complies with
//      the conditions stated in this License.
//
//   5. Submission of Contributions. Unless You explicitly state otherwise,
//      any Contribution intentionally submitted for inclusion in the Work
//      by You to the Licensor shall be under the terms and conditions of
//      this License, without any additional terms or conditions.
//      Notwithstanding the above, nothing herein shall supersede or modify
//      the terms of any separate license agreement you may have executed
//      with Licensor regarding such Contributions.
//
//   6. Trademarks. This License does not grant permission to use the trade
//      names, trademarks, service marks, or product names of the Licensor,
//      except as required for reasonable and customary use in describing the
//      origin of the Work and reproducing the content of the NOTICE file.
//
//   7. Disclaimer of Warranty. Unless required by applicable law or
//      agreed to in writing, Licensor provides the Work (and each
//      Contributor provides its Contributions) on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
//      implied, including, without limitation, any warranties or conditions
//      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
//      PARTICULAR PURPOSE. You are solely responsible for determining the
//      appropriateness of using or redistributing the Work and assume any
//      risks associated with Your exercise of permissions under this License.
//
//   8. Limitation of Liability. In no event and under no legal theory,
//      whether in tort (including negligence), contract, or otherwise,
//      unless required by applicable law (such as deliberate and grossly
//      negligent acts) or agreed to in writing, shall any Contributor be
//      liable to You for damages, including any direct, indirect, special,
//      incidental, or consequential damages of any character arising as a
//      result of this License or out of the use or inability to use the
//      Work (including but not limited to damages for loss of goodwill,
//      work stoppage, computer failure or malfunction, or any and all
//      other commercial damages or losses), even if such Contributor
//      has been advised of the possibility of such damages.
//
//   9. Accepting Warranty or Additional Liability. While redistributing
//      the Work or Derivative Works thereof, You may choose to offer,
//      and charge a fee for, acceptance of support, warranty, indemnity,
//      or other liability obligations and/or rights consistent with this
//      License. However, in accepting such obligations, You may act only
//      on Your own behalf and on Your sole responsibility, not on behalf
//      of any other Contributor, and only if You agree to indemnify,
//      defend, and hold each Contributor harmless for any liability
//      incurred by, or claims asserted against, such Contributor by reason
//      of your accepting any such warranty or additional liability.
//
//   END OF TERMS AND CONDITIONS
//
//   APPENDIX: How to apply the Apache License to your work.
//
//      To apply the Apache License to your work, attach the following
//      boilerplate notice, with the fields enclosed by brackets "{}"
//      replaced with your own identifying information. (Don't include
//      the brackets!)  The text should be enclosed in the appropriate
//      comment syntax for the file format. We also recommend that a
//      file or class name and description of purpose be included on the
//      same "printed page" as the copyright notice for easier
//      identification within third-party archives.
//
//   Copyright (c) 2017 Cisco
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

//Path: Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/statistics

package cisco_ios_xr_qos_ma_oper.qos.nodes.node.policy_map.interface_table.interface.input.statistics;

// policy map statistics
message qos_stats_KEYS {
    string node_name = 1;
    string interface_name = 2;
}

message qos_stats {
    string policy_name = 50;
    string subscriber_group = 51;
    string state = 52;
    string state_description = 53;
    // array of classes contained in policy
    repeated class_stats class_stats = 54;
    // to maintain satellite id
    uint32 satid = 55;
}

message policy_param_uint32_st_ {
    uint32 value = 1;
    string unit = 2;
}

// Counters common to all features
message gen_stats_st {
    // Transmitted packets (packets/bytes)
    uint64 transmit_packets = 1;
    // Transmitted bytes (packets/bytes)
    uint64 transmit_bytes = 2;
    // Dropped packets (packets/bytes)
    uint64 total_drop_packets = 3;
    // Dropped bytes (packets/bytes)
    uint64 total_drop_bytes = 4;
    // Total drop rate (packets/bytes)
    uint32 total_drop_rate = 5;
    // Incoming matched data rate in kbps
    uint32 match_data_rate = 6;
    // Total transmit rate in kbps
    uint32 total_transmit_rate = 7;
    // Matched pkts before applying policy
    uint64 pre_policy_matched_packets = 8;
    // Matched bytes before applying policy
    uint64 pre_policy_matched_bytes = 9;
}

// Color Aware Policer statistics
message plc_color_class_stats_st {
    // Packets with classification result conform and policer result conform
    uint64 conform_class_conform_packets = 1;
    // Bytes with classification result conform and policer result conform
    uint64 conform_class_conform_bytes = 2;
    // Conform Class Conform rate in kbps
    uint32 conform_class_conform_rate = 3;
    // Packets with classification result conform and policer result exceed
    uint64 conform_class_exceed_packets = 4;
    // Bytes with classification result conform and policer result exceed
    uint64 conform_class_exceed_bytes = 5;
    // Conform Class Exceed rate in kbps
    uint32 conform_class_exceed_rate = 6;
    // Packets with classification result conform and policer result violate
    uint64 conform_class_violate_packets = 7;
    // Bytes with classification result conform and policer result violate
    uint64 conform_class_violate_bytes = 8;
    // Conform Class Violate rate in kbps
    uint32 conform_class_violate_rate = 9;
    // Packets with classification result exceed and policer result exceed
    uint64 exceed_class_exceed_packets = 10;
    // Bytes with classification result exceed and policer result exceed
    uint64 exceed_class_exceed_bytes = 11;
    // Exceed Class Exceed rate in kbps
    uint32 exceed_class_exceed_rate = 12;
    // Packets with classification result exceed and policer result violate
    uint64 exceed_class_violate_packets = 13;
    // Bytes with classification result exceed and policer result violate
    uint64 exceed_class_violate_bytes = 14;
    // Exceed Class Violate rate in kbps
    uint32 exceed_class_violate_rate = 15;
    // Packets with classification result violate and policer result violate
    uint64 violate_class_violate_packets = 16;
    // Bytes with classification result violate and policer result violate
    uint64 violate_class_violate_bytes = 17;
    // Violate Class Violate rate in kbps
    uint32 violate_class_violate_rate = 18;
}

// Policer statistics
message plc_stats_st {
    // Police dropped packets
    uint64 drop_packets = 1;
    // Police dropped bytes
    uint64 drop_bytes = 2;
    // Packets that conform  to the policed rate
    uint64 conform_packets = 3;
    // Bytes that conform to the policed rate
    uint64 conform_bytes = 4;
    // Packets that exceed the policed rate
    uint64 exceed_packets = 5;
    // Bytes that exceed  the policed rate
    uint64 exceed_bytes = 6;
    // Packets violating the policed rate
    uint64 violate_packets = 7;
    // Bytes that violate the policed rate
    uint64 violate_bytes = 8;
    // Dropped pkts by the parent policer
    uint64 parent_drop_packets = 9;
    // Dropped bytes by the parent policer
    uint64 parent_drop_bytes = 10;
    // Conform rate in kbps
    uint32 conform_rate = 11;
    // Exceed rate in kbps
    uint32 exceed_rate = 12;
    // Violate rate in kbps
    uint32 violate_rate = 13;
    plc_color_class_stats_st color_class_stats = 14;
}

// CAC statistics
message cac_stats_st {
    // CAC dropped packets
    uint64 drop_packets = 1;
    // CAC dropped bytes
    uint64 drop_bytes = 2;
    // CAC dropped rate
    uint32 drop_rates = 3;
    // Admitted packets (pkts/bytes)
    uint64 admitpackets = 4;
    // Admitted bytes (pkts/bytes)
    uint64 admit_bytes = 5;
    // CAC admit rate
    uint32 admit_rates = 6;
}

// IPHC Stats
message iphc_stats_st {
    // TotalNum of Non tcp pkts sent
    uint64 non_tcp_total_out_packets = 1;
    // TotalNum of Non Tcp Bytes sent
    uint64 non_tcp_total_out_bytes = 2;
    // Non Tcp Bytes saved due to compression
    uint64 non_tcp_bytes_saved = 3;
    // Num of non tcp compressed pkts sent
    uint64 non_tcp_compressed_packets_out = 4;
    // Compressed Non Tcp Bytes sent rate
    uint32 non_tcp_bytes_sent_rate = 5;
    // Num of non tcp fullheader pkts sent
    uint64 non_tcp_full_header_packets_out = 6;
    // Total Num of tcp pkts sent
    uint64 tcp_total_out_packets = 7;
    // TotalNum of Tcp Bytes sent
    uint64 tcp_total_out_bytes = 8;
    // Tcp Bytes saved due to compression
    uint64 tcp_bytes_saved = 9;
    // Num of tcp compressed pkts sent
    uint64 tcp_compressed_packets_out = 10;
    // Compressed Tcp Bytes sent rate
    uint32 tcp_bytes_sent_rate = 11;
    // Num of tcp fullheader pkts sent
    uint64 tcp_full_header_packets_out = 12;
}

// Queue limit statistics
message q_stats_st {
    // Queue Id used for Fabric Stats
    uint32 queue_id = 1;
    // Packets tail dropped
    uint64 tail_drop_packets = 2;
    // Bytes tail dropped
    uint64 tail_drop_bytes = 3;
    // ATP CLP 0 matched packets dropped
    uint64 atm_clp0_drop_packets = 4;
    // ATP CLP 0 matched bytes dropped
    uint64 atm_clp0_drop_bytes = 5;
    // ATP CLP 0 matched packets dropped
    uint64 atm_clp1_drop_packets = 6;
    // ATP CLP 0 matched bytes dropped
    uint64 atm_clp1_drop_bytes = 7;
    // Queue instance length
    repeated policy_param_uint32_st_ queue_instance_length = 8;
    // Queue average length
    repeated policy_param_uint32_st_ queue_average_length = 9;
    // Queue maximum length
    repeated policy_param_uint32_st_ queue_max_length = 10;
    // tail drop threshold of the queue in bytes
    uint32 queue_drop_threshold = 11;
    // flag to forcedisplay of WRED even when per WredWRED profile stats is not available
    bool forced_wred_stats_display = 12;
    // Packets probabilistically dropped
    uint64 random_drop_packets = 13;
    // Bytes probabilistically dropped
    uint64 random_drop_bytes = 14;
    // Dropped packets with the average queue size at the max-threshold
    uint64 max_threshold_packets = 15;
    // Dropped bytes with the average queue size at the max-threshold
    uint64 max_threshold_bytes = 16;
    // Packets that conform  to the queue rate
    uint64 conform_packets = 17;
    // Bytes that conform to the queue rate
    uint64 conform_bytes = 18;
    // Packets that exceed the queue rate
    uint64 exceed_packets = 19;
    // Bytes that exceed  the queue rate
    uint64 exceed_bytes = 20;
    // Conform rate
    uint32 conform_rate = 21;
    // Exceed rate
    uint32 exceed_rate = 22;
}

// WRED Type Value pairs
message wred_type_value {
    // WRED type DSCP, EXP, PREC etc.
    string wred_type = 1;
    // WRED value for this type.
    uint32 value = 2;
}

// Per RED profile stats
message red_profile_stats {
    string profile_title = 1;
    // Array of WRED Typevalues as in PRP stats is available per threshold   
    repeated wred_type_value red_label = 2;
    // Transmitted packets
    uint64 red_transmit_packets = 3;
    // Transmitted bytes
    uint64 red_transmit_bytes = 4;
    // Probabilistically dropped  packets
    uint64 random_drop_packets = 5;
    // Probabilisticallydropped bytes
    uint64 random_drop_bytes = 6;
    // Dropped packets with  the average queue size at the max-threshold
    uint64 max_threshold_packets = 7;
    // Dropped bytes with  the average queue size at the max-threshold
    uint64 max_threshold_bytes = 8;
    // ECN marked packets 
    uint64 red_ecn_marked_packets = 9;
    // ECN marked bytes
    uint64 red_ecn_marked_bytes = 10;
}

message class_stats {
    //  Bitmask to indicate which counter or counters are undetermined. Counters will be marked undetermined when one or more classes share queues with class-default because in such cases the value of counters for each class is invalid. Based on the flag(s) set, the following counters will be marked undetermined. For example, if value of this object returned is 0x00000101, counters TransmitPackets/TransmitBytes/TotalTransmitRate and DropPackets/DropBytes are undetermined.0x00000001 - Transmit (TransmitPackets/TransmitBytes/TotalTransmitRate), 0x00000002 - Total drop (TotalDropPackets/TotalDropBytes/TotalDropRate), 0x00000004 - Match (MatchDataRate/PrepolicyMatchedPackets/PrepolicyMatchedBytes), 0x00000100 - Police drop (DropPackets/DropBytes), 0x00000200 - Police conform (ConformPackets/ConformBytes/ConformRate), 0x00000400 - Police exceed (ExceedPackets/ExceedBytes/ExceedRate), 0x00000800 - Police violate (ViolatePackets/ViolateBytes/ViolateRate), 0x00001000 - Parent policer drop (ParentDropPackets/ParentDropBytes), 0x00010000 - Queueing drop (TailDropPackets/TailDropBytes), 0x00020000 - Red queue drop (RandomDropPackets/RandomDropBytes), 0x00040000 - Queue maximum threshold drop (MaxThresholdPackets/MaxThresholdBytes), 0x00080000 - Queue conform (ConformPackets/ConformBytes/ConformRate), 0x00100000 - Queue exceed (ExceedPackets/ExceedBytes/ExceedRate), 0x00200000 - CLP limit drop (ATM_CLP0DropPackets/ATM_CLP0DropBytes/ATM_CLP1DropPackets/ATM_CLP1DropBytes), 0x01000000 - RED transmit (RedTransmitPackets/RedTransmitBytes), 0x02000000 - RED drop (RandomDropPackets/RandomDropBytes), 0x04000000 - RED maximum threshold drop (MaxThresholdPackets/MaxThresholdBytes)
    uint64 counter_validity_bitmask = 1;
    string class_name = 2;
    // q-id of the  shared queue for this class
    uint32 shared_queue_id = 3;
    // Description of queue for the class
    string queue_descr = 4;
    string cac_state = 5;
    gen_stats_st general_stats = 6;
    // array of queue stats
    repeated q_stats_st queue_stats_array = 7;
    // array of police stats
    repeated plc_stats_st police_stats_array = 8;
    // array of red stats
    repeated red_profile_stats wred_stats_array = 9;
    // IPHC stats
    iphc_stats_st iphc_stats = 10;
    qos_stats child_policy = 11;
    // bag for cac stats
    cac_stats_st cac_stats = 12;
}

