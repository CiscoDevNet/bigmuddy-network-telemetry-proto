//                                 Apache License
//                           Version 2.0, January 2004
//                        http://www.apache.org/licenses/
//
//   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
//
//   1. Definitions.
//
//      "License" shall mean the terms and conditions for use, reproduction,
//      and distribution as defined by Sections 1 through 9 of this document.
//
//      "Licensor" shall mean the copyright owner or entity authorized by
//      the copyright owner that is granting the License.
//
//      "Legal Entity" shall mean the union of the acting entity and all
//      other entities that control, are controlled by, or are under common
//      control with that entity. For the purposes of this definition,
//      "control" means (i) the power, direct or indirect, to cause the
//      direction or management of such entity, whether by contract or
//      otherwise, or (ii) ownership of fifty percent (50%) or more of the
//      outstanding shares, or (iii) beneficial ownership of such entity.
//
//      "You" (or "Your") shall mean an individual or Legal Entity
//      exercising permissions granted by this License.
//
//      "Source" form shall mean the preferred form for making modifications,
//      including but not limited to software source code, documentation
//      source, and configuration files.
//
//      "Object" form shall mean any form resulting from mechanical
//      transformation or translation of a Source form, including but
//      not limited to compiled object code, generated documentation,
//      and conversions to other media types.
//
//      "Work" shall mean the work of authorship, whether in Source or
//      Object form, made available under the License, as indicated by a
//      copyright notice that is included in or attached to the work
//      (an example is provided in the Appendix below).
//
//      "Derivative Works" shall mean any work, whether in Source or Object
//      form, that is based on (or derived from) the Work and for which the
//      editorial revisions, annotations, elaborations, or other modifications
//      represent, as a whole, an original work of authorship. For the purposes
//      of this License, Derivative Works shall not include works that remain
//      separable from, or merely link (or bind by name) to the interfaces of,
//      the Work and Derivative Works thereof.
//
//      "Contribution" shall mean any work of authorship, including
//      the original version of the Work and any modifications or additions
//      to that Work or Derivative Works thereof, that is intentionally
//      submitted to Licensor for inclusion in the Work by the copyright owner
//      or by an individual or Legal Entity authorized to submit on behalf of
//      the copyright owner. For the purposes of this definition, "submitted"
//      means any form of electronic, verbal, or written communication sent
//      to the Licensor or its representatives, including but not limited to
//      communication on electronic mailing lists, source code control systems,
//      and issue tracking systems that are managed by, or on behalf of, the
//      Licensor for the purpose of discussing and improving the Work, but
//      excluding communication that is conspicuously marked or otherwise
//      designated in writing by the copyright owner as "Not a Contribution."
//
//      "Contributor" shall mean Licensor and any individual or Legal Entity
//      on behalf of whom a Contribution has been received by Licensor and
//      subsequently incorporated within the Work.
//
//   2. Grant of Copyright License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      copyright license to reproduce, prepare Derivative Works of,
//      publicly display, publicly perform, sublicense, and distribute the
//      Work and such Derivative Works in Source or Object form.
//
//   3. Grant of Patent License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      (except as stated in this section) patent license to make, have made,
//      use, offer to sell, sell, import, and otherwise transfer the Work,
//      where such license applies only to those patent claims licensable
//      by such Contributor that are necessarily infringed by their
//      Contribution(s) alone or by combination of their Contribution(s)
//      with the Work to which such Contribution(s) was submitted. If You
//      institute patent litigation against any entity (including a
//      cross-claim or counterclaim in a lawsuit) alleging that the Work
//      or a Contribution incorporated within the Work constitutes direct
//      or contributory patent infringement, then any patent licenses
//      granted to You under this License for that Work shall terminate
//      as of the date such litigation is filed.
//
//   4. Redistribution. You may reproduce and distribute copies of the
//      Work or Derivative Works thereof in any medium, with or without
//      modifications, and in Source or Object form, provided that You
//      meet the following conditions:
//
//      (a) You must give any other recipients of the Work or
//          Derivative Works a copy of this License; and
//
//      (b) You must cause any modified files to carry prominent notices
//          stating that You changed the files; and
//
//      (c) You must retain, in the Source form of any Derivative Works
//          that You distribute, all copyright, patent, trademark, and
//          attribution notices from the Source form of the Work,
//          excluding those notices that do not pertain to any part of
//          the Derivative Works; and
//
//      (d) If the Work includes a "NOTICE" text file as part of its
//          distribution, then any Derivative Works that You distribute must
//          include a readable copy of the attribution notices contained
//          within such NOTICE file, excluding those notices that do not
//          pertain to any part of the Derivative Works, in at least one
//          of the following places: within a NOTICE text file distributed
//          as part of the Derivative Works; within the Source form or
//          documentation, if provided along with the Derivative Works; or,
//          within a display generated by the Derivative Works, if and
//          wherever such third-party notices normally appear. The contents
//          of the NOTICE file are for informational purposes only and
//          do not modify the License. You may add Your own attribution
//          notices within Derivative Works that You distribute, alongside
//          or as an addendum to the NOTICE text from the Work, provided
//          that such additional attribution notices cannot be construed
//          as modifying the License.
//
//      You may add Your own copyright statement to Your modifications and
//      may provide additional or different license terms and conditions
//      for use, reproduction, or distribution of Your modifications, or
//      for any such Derivative Works as a whole, provided Your use,
//      reproduction, and distribution of the Work otherwise complies with
//      the conditions stated in this License.
//
//   5. Submission of Contributions. Unless You explicitly state otherwise,
//      any Contribution intentionally submitted for inclusion in the Work
//      by You to the Licensor shall be under the terms and conditions of
//      this License, without any additional terms or conditions.
//      Notwithstanding the above, nothing herein shall supersede or modify
//      the terms of any separate license agreement you may have executed
//      with Licensor regarding such Contributions.
//
//   6. Trademarks. This License does not grant permission to use the trade
//      names, trademarks, service marks, or product names of the Licensor,
//      except as required for reasonable and customary use in describing the
//      origin of the Work and reproducing the content of the NOTICE file.
//
//   7. Disclaimer of Warranty. Unless required by applicable law or
//      agreed to in writing, Licensor provides the Work (and each
//      Contributor provides its Contributions) on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
//      implied, including, without limitation, any warranties or conditions
//      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
//      PARTICULAR PURPOSE. You are solely responsible for determining the
//      appropriateness of using or redistributing the Work and assume any
//      risks associated with Your exercise of permissions under this License.
//
//   8. Limitation of Liability. In no event and under no legal theory,
//      whether in tort (including negligence), contract, or otherwise,
//      unless required by applicable law (such as deliberate and grossly
//      negligent acts) or agreed to in writing, shall any Contributor be
//      liable to You for damages, including any direct, indirect, special,
//      incidental, or consequential damages of any character arising as a
//      result of this License or out of the use or inability to use the
//      Work (including but not limited to damages for loss of goodwill,
//      work stoppage, computer failure or malfunction, or any and all
//      other commercial damages or losses), even if such Contributor
//      has been advised of the possibility of such damages.
//
//   9. Accepting Warranty or Additional Liability. While redistributing
//      the Work or Derivative Works thereof, You may choose to offer,
//      and charge a fee for, acceptance of support, warranty, indemnity,
//      or other liability obligations and/or rights consistent with this
//      License. However, in accepting such obligations, You may act only
//      on Your own behalf and on Your sole responsibility, not on behalf
//      of any other Contributor, and only if You agree to indemnify,
//      defend, and hold each Contributor harmless for any liability
//      incurred by, or claims asserted against, such Contributor by reason
//      of your accepting any such warranty or additional liability.
//
//   END OF TERMS AND CONDITIONS
//
//   APPENDIX: How to apply the Apache License to your work.
//
//      To apply the Apache License to your work, attach the following
//      boilerplate notice, with the fields enclosed by brackets "{}"
//      replaced with your own identifying information. (Don't include
//      the brackets!)  The text should be enclosed in the appropriate
//      comment syntax for the file format. We also recommend that a
//      file or class name and description of purpose be included on the
//      same "printed page" as the copyright notice for easier
//      identification within third-party archives.
//
//   Copyright (c) 2017 Cisco
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

//Path: Cisco-IOS-XR-clns-isis-oper:isis/instances/instance/topologies/topology/topology-levels/topology-level/spf-log

package cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.topology_levels.topology_level.spf_log;

// Log of IS-IS route calculations
message isis_sh_spf_log_struc_KEYS {
    string instance_name = 1;
    string af_name = 2;
    string saf_name = 3;
    string topology_name = 4;
    string level = 5;
}

message isis_sh_spf_log_struc {
    // SPF Log entries
    repeated isis_sh_spf_log_ent log_entry = 50;
}

message isis_system_id_type {
    string value = 1;
}

message isis_node_id_type {
    string value = 1;
}

// IPv4 address and prefix length
message isis_ipv4_prefix_type {
    // prefix
    string prefix = 1;
    // prefix length
    uint32 prefix_length = 2;
}

// IPv4 address and prefix length
message isis_ipv6_prefix_type {
    // prefix
    string prefix = 1;
    // prefix length
    uint32 prefix_length = 2;
}

message isis_ip_prefix_type {
    string af_name = 1;
    isis_ipv4_prefix_type ipv4 = 2;
    isis_ipv6_prefix_type ipv6 = 3;
}

message isis_lsp_id_type {
    string value = 1;
}

// Per-priority counts
message isis_per_priority_counts {
    // Critical priority
    uint32 critical = 1;
    // High priority
    uint32 high = 2;
    // Medium priority
    uint32 medium = 3;
    // Low priority
    uint32 low = 4;
}

// Duration of an event in real and CPU time
message isis_timings_type {
    // Real time duration in milliseconds
    uint32 real_duration = 1;
    // CPU time duration in milliseconds
    uint32 cpu_duration = 2;
}

// Per-priority timings
message isis_per_priority_timings {
    // Critical priority
    isis_timings_type critical = 1;
    // High priority
    isis_timings_type high = 2;
    // Medium priority
    isis_timings_type medium = 3;
    // Low priority
    isis_timings_type low = 4;
}

// Timestamp for an event
message isis_sh_timestamp_type {
    // Timestamp value (seconds)
    uint32 seconds = 1;
    // Timestamp value (nanoseconds)
    uint32 nano_seconds = 2;
}

// Generic portion of a log entry
message isis_sh_generic_log_ent {
    // Time in UTC relative to Jan 1st, 1970
    isis_sh_timestamp_type timestamp = 1;
}

// The reasons for running a calculation
message isis_sh_spf_log_triggers {
    // Triggers applying to this log entry
    repeated string triggers = 1;
    // Number of unique triggers on this run
    uint32 unique_trigger_count = 2;
    // ID of the first LSP to trigger the calculation, if any
    isis_lsp_id_type first_trigger_lsp_id = 3;
    // ID of a changed link in the first trigger LSP, if any
    isis_node_id_type trigger_link = 4;
    // ID of a changed prefix in the first trigger LSP, if any
    isis_ip_prefix_type trigger_prefix = 5;
    // ID of a changed next hop, if any
    isis_system_id_type trigger_next_hop_id = 6;
    // Is this SR micro loop calculation?
    bool is_sr_uloop_calculation = 7;
    // Is this SR micro loop calculation for link down?
    bool is_sr_uloop_link_down = 8;
}

// Node counts for the SPT calculation phase
message isis_sh_spf_log_spt_calc_node_counts {
    // Number of unreachable nodes in the database
    uint32 unreachable = 1;
    // Number of reachable nodes in the database
    uint32 reachable = 2;
    // Number of nodes added to the SPT
    uint32 added = 3;
    // Number of nodes deleted from the SPT
    uint32 deleted = 4;
    // Number of modified nodes (first hop and/or metric change)
    uint32 modified = 5;
    // Number of nodes touched whilst calculating the SPT
    uint32 touched = 6;
}

// Statistics for the SPT calculation phase
message isis_sh_spf_log_spt_calc {
    // Duration of the SPT calculation
    isis_timings_type duration = 1;
    // Node counts
    isis_sh_spf_log_spt_calc_node_counts node_counts = 2;
}

// Node counts for the route update phase
message isis_sh_spf_log_route_update_node_counts {
    // Per-priority count of nodes considered during route update
    isis_per_priority_counts per_priority_touched = 1;
    // Total number of nodes considered during route update
    uint32 total_touched = 2;
}

// Prefix item counts for the route update phase
message isis_sh_spf_log_route_update_prefix_counts {
    // Number of unreachable prefixes in the database
    isis_per_priority_counts unreachable = 1;
    // Number of reachable prefixes in the database
    isis_per_priority_counts reachable = 2;
    // Number of prefixes added during calculation
    isis_per_priority_counts added = 3;
    // Number of prefixes deleted during calculation
    isis_per_priority_counts deleted = 4;
    // Number of prefixes modified, i.e. a first hop and/or metric change
    isis_per_priority_counts modified = 5;
    // Number of prefixes considered whilst updating the routing table
    isis_per_priority_counts touched = 6;
}

// Breakdown of the time taken to perform the route update
message isis_sh_spf_log_route_update_timings_breakdown {
    // Time to update IS-IS's local RIB
    isis_per_priority_timings local_rib_update = 1;
    // Time to build the update to send to the global RIB
    isis_per_priority_timings global_rib_build = 2;
    // Time to send the update to the global RIB
    isis_per_priority_timings global_rib_send = 3;
}

// Statistics for the route update phase of the calculation
message isis_sh_spf_log_route_update {
    // Duration of the routing table update
    isis_timings_type duration = 1;
    // Breakdown of the time taken by the routing table update
    isis_sh_spf_log_route_update_timings_breakdown duration_breakdown = 2;
    // Node counts
    isis_sh_spf_log_route_update_node_counts node_counts = 3;
    // Prefix item counts
    isis_sh_spf_log_route_update_prefix_counts item_counts = 4;
    // Distinct prefix counts
    isis_sh_spf_log_route_update_prefix_counts route_counts = 5;
    // Number of RIB batches sent
    isis_per_priority_counts rib_batch_counts = 6;
}

// IS-IS route calculation log entry
message isis_sh_spf_log_ent {
    // Generic entry data.
    isis_sh_generic_log_ent generic_data = 1;
    // Type of calculation.
    string class = 2;
    // Trigger information
    isis_sh_spf_log_triggers triggers = 3;
    // Statistics for the SPT calculation phase
    isis_sh_spf_log_spt_calc spt_calculation_statistics = 4;
    // Statistics for the route update phase
    isis_sh_spf_log_route_update route_update_statistics = 5;
    // Time between the first trigger and the start of the route calculation, in milliseconds.
    uint32 wait_enforced = 6;
    // Minimum time from end of this route calculation until the start of the next, in milliseconds
    uint32 next_wait_interval = 7;
    // Number of LSPs which arrived during the route calculation
    uint32 updated_lsp_count = 8;
}

