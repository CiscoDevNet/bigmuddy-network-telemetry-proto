// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_clns_isis_oper.isis.instances.instance.protocol;

// Information about an IS-IS instance
message isis_sh_proto_KEYS {
    string instance_name = 1;
}

message isis_sh_proto {
    // Local system ID
    string nsap_system_id = 50;
    // Indicates if system ID valid
    bool valid_nsap_system_id = 51;
    // instance id
    uint32 instance_id = 52;
    // Levels running
    string running_levels = 53;
    // Manual area addresses
    repeated osi_area_address_type manual_area_addresses = 54;
    // Active area addresses
    repeated osi_area_address_type active_area_addresses = 55;
    // Configured NSF type
    string configured_nsf_flavor = 56;
    // NSF type of last restart
    string last_restart_nsf_flavor = 57;
    // Last restart status
    string last_restart_status = 58;
    // Time remaining until the next NSF restart may be attempted
    uint32 remaining_time_for_next_nsf_restart = 59;
    // Per-topology data
    repeated isis_sh_topo per_topo_data = 60;
    // Adj Forming count
    uint32 adj_form_count = 61;
    // Adj Full count
    uint32 adj_full_count = 62;
    // Adjacency Stagger Enabled
    bool adj_stagger_enabled = 63;
    // Adjacency Stagger Initiall Number of Forming Neighbors Allowed
    uint32 adj_stagger_init = 64;
    // Adjacency Stagger Max Number of Forming Neighbors Allowed
    uint32 adj_stagger_max = 65;
}

message isis_string_type {
    string value = 1;
}

// Identification of an IS-IS topology
message isis_topo_id_type {
    // AF name
    string af_name = 1;
    // Sub-AF name
    string saf_name = 2;
    // VRF Name
    string vrf_name = 3;
    // Topology Name
    string topology_name = 4;
}

message osi_area_address_type {
    string value = 1;
}

// Redistributed protocol information
message isis_sh_redist_entry_proto {
    string protocol = 1;
    // IS-IS instance identifier
    isis_string_type isis_instance_id = 2;
    // OSPF process identifier
    isis_string_type ospf_process_id = 3;
    // OSPFv3 process identifier
    isis_string_type osp_fv3_process_id = 4;
    // BGP Autonomous System number
    isis_string_type bgp_as_number = 5;
    // EIGRP Autonomous System number
    isis_string_type eigrp_as_number = 6;
    isis_string_type application_name = 7;
}

// Redistributed protocol entry
message isis_sh_redist_entry {
    // Next entry in list
    repeated isis_sh_redist_entry_item isis_sh_redist_entry = 1;
}

message isis_sh_redist_entry_item {
    // Relevant details of the redistributed protocol
    isis_sh_redist_entry_proto protocol_details = 1;
}

// Per-topology, per-area IS-IS protocol data
message isis_sh_topo_area {
    // The level this data refers to
    string level = 1;
    // Does this topology use the default link topology
    bool uses_default_link_topo_flag = 2;
    // Generate metric style
    string generated_metric_style = 3;
    // Accept metric style
    string accepted_metric_style = 4;
    // Metric
    uint32 metric = 5;
    // ISPF state
    string ispf_state = 6;
    // Indicates whether MPLS TE is enabled
    bool te_enabled = 7;
}

// Per-topology IS-IS instance data
message isis_sh_topo {
    // Topology ID
    isis_topo_id_type id = 1;
    // List of redistributed protocols
    isis_sh_redist_entry redist_protocols_list = 2;
    // Default administrative distance
    uint32 default_admin_distance = 3;
    // Advertise passive interface prefixes only
    bool advertise_passive_only = 4;
    // Per-area data
    repeated isis_sh_topo_area per_area_data = 5;
}

