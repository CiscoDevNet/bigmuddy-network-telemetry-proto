//                                 Apache License
//                           Version 2.0, January 2004
//                        http://www.apache.org/licenses/
//
//   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
//
//   1. Definitions.
//
//      "License" shall mean the terms and conditions for use, reproduction,
//      and distribution as defined by Sections 1 through 9 of this document.
//
//      "Licensor" shall mean the copyright owner or entity authorized by
//      the copyright owner that is granting the License.
//
//      "Legal Entity" shall mean the union of the acting entity and all
//      other entities that control, are controlled by, or are under common
//      control with that entity. For the purposes of this definition,
//      "control" means (i) the power, direct or indirect, to cause the
//      direction or management of such entity, whether by contract or
//      otherwise, or (ii) ownership of fifty percent (50%) or more of the
//      outstanding shares, or (iii) beneficial ownership of such entity.
//
//      "You" (or "Your") shall mean an individual or Legal Entity
//      exercising permissions granted by this License.
//
//      "Source" form shall mean the preferred form for making modifications,
//      including but not limited to software source code, documentation
//      source, and configuration files.
//
//      "Object" form shall mean any form resulting from mechanical
//      transformation or translation of a Source form, including but
//      not limited to compiled object code, generated documentation,
//      and conversions to other media types.
//
//      "Work" shall mean the work of authorship, whether in Source or
//      Object form, made available under the License, as indicated by a
//      copyright notice that is included in or attached to the work
//      (an example is provided in the Appendix below).
//
//      "Derivative Works" shall mean any work, whether in Source or Object
//      form, that is based on (or derived from) the Work and for which the
//      editorial revisions, annotations, elaborations, or other modifications
//      represent, as a whole, an original work of authorship. For the purposes
//      of this License, Derivative Works shall not include works that remain
//      separable from, or merely link (or bind by name) to the interfaces of,
//      the Work and Derivative Works thereof.
//
//      "Contribution" shall mean any work of authorship, including
//      the original version of the Work and any modifications or additions
//      to that Work or Derivative Works thereof, that is intentionally
//      submitted to Licensor for inclusion in the Work by the copyright owner
//      or by an individual or Legal Entity authorized to submit on behalf of
//      the copyright owner. For the purposes of this definition, "submitted"
//      means any form of electronic, verbal, or written communication sent
//      to the Licensor or its representatives, including but not limited to
//      communication on electronic mailing lists, source code control systems,
//      and issue tracking systems that are managed by, or on behalf of, the
//      Licensor for the purpose of discussing and improving the Work, but
//      excluding communication that is conspicuously marked or otherwise
//      designated in writing by the copyright owner as "Not a Contribution."
//
//      "Contributor" shall mean Licensor and any individual or Legal Entity
//      on behalf of whom a Contribution has been received by Licensor and
//      subsequently incorporated within the Work.
//
//   2. Grant of Copyright License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      copyright license to reproduce, prepare Derivative Works of,
//      publicly display, publicly perform, sublicense, and distribute the
//      Work and such Derivative Works in Source or Object form.
//
//   3. Grant of Patent License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      (except as stated in this section) patent license to make, have made,
//      use, offer to sell, sell, import, and otherwise transfer the Work,
//      where such license applies only to those patent claims licensable
//      by such Contributor that are necessarily infringed by their
//      Contribution(s) alone or by combination of their Contribution(s)
//      with the Work to which such Contribution(s) was submitted. If You
//      institute patent litigation against any entity (including a
//      cross-claim or counterclaim in a lawsuit) alleging that the Work
//      or a Contribution incorporated within the Work constitutes direct
//      or contributory patent infringement, then any patent licenses
//      granted to You under this License for that Work shall terminate
//      as of the date such litigation is filed.
//
//   4. Redistribution. You may reproduce and distribute copies of the
//      Work or Derivative Works thereof in any medium, with or without
//      modifications, and in Source or Object form, provided that You
//      meet the following conditions:
//
//      (a) You must give any other recipients of the Work or
//          Derivative Works a copy of this License; and
//
//      (b) You must cause any modified files to carry prominent notices
//          stating that You changed the files; and
//
//      (c) You must retain, in the Source form of any Derivative Works
//          that You distribute, all copyright, patent, trademark, and
//          attribution notices from the Source form of the Work,
//          excluding those notices that do not pertain to any part of
//          the Derivative Works; and
//
//      (d) If the Work includes a "NOTICE" text file as part of its
//          distribution, then any Derivative Works that You distribute must
//          include a readable copy of the attribution notices contained
//          within such NOTICE file, excluding those notices that do not
//          pertain to any part of the Derivative Works, in at least one
//          of the following places: within a NOTICE text file distributed
//          as part of the Derivative Works; within the Source form or
//          documentation, if provided along with the Derivative Works; or,
//          within a display generated by the Derivative Works, if and
//          wherever such third-party notices normally appear. The contents
//          of the NOTICE file are for informational purposes only and
//          do not modify the License. You may add Your own attribution
//          notices within Derivative Works that You distribute, alongside
//          or as an addendum to the NOTICE text from the Work, provided
//          that such additional attribution notices cannot be construed
//          as modifying the License.
//
//      You may add Your own copyright statement to Your modifications and
//      may provide additional or different license terms and conditions
//      for use, reproduction, or distribution of Your modifications, or
//      for any such Derivative Works as a whole, provided Your use,
//      reproduction, and distribution of the Work otherwise complies with
//      the conditions stated in this License.
//
//   5. Submission of Contributions. Unless You explicitly state otherwise,
//      any Contribution intentionally submitted for inclusion in the Work
//      by You to the Licensor shall be under the terms and conditions of
//      this License, without any additional terms or conditions.
//      Notwithstanding the above, nothing herein shall supersede or modify
//      the terms of any separate license agreement you may have executed
//      with Licensor regarding such Contributions.
//
//   6. Trademarks. This License does not grant permission to use the trade
//      names, trademarks, service marks, or product names of the Licensor,
//      except as required for reasonable and customary use in describing the
//      origin of the Work and reproducing the content of the NOTICE file.
//
//   7. Disclaimer of Warranty. Unless required by applicable law or
//      agreed to in writing, Licensor provides the Work (and each
//      Contributor provides its Contributions) on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
//      implied, including, without limitation, any warranties or conditions
//      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
//      PARTICULAR PURPOSE. You are solely responsible for determining the
//      appropriateness of using or redistributing the Work and assume any
//      risks associated with Your exercise of permissions under this License.
//
//   8. Limitation of Liability. In no event and under no legal theory,
//      whether in tort (including negligence), contract, or otherwise,
//      unless required by applicable law (such as deliberate and grossly
//      negligent acts) or agreed to in writing, shall any Contributor be
//      liable to You for damages, including any direct, indirect, special,
//      incidental, or consequential damages of any character arising as a
//      result of this License or out of the use or inability to use the
//      Work (including but not limited to damages for loss of goodwill,
//      work stoppage, computer failure or malfunction, or any and all
//      other commercial damages or losses), even if such Contributor
//      has been advised of the possibility of such damages.
//
//   9. Accepting Warranty or Additional Liability. While redistributing
//      the Work or Derivative Works thereof, You may choose to offer,
//      and charge a fee for, acceptance of support, warranty, indemnity,
//      or other liability obligations and/or rights consistent with this
//      License. However, in accepting such obligations, You may act only
//      on Your own behalf and on Your sole responsibility, not on behalf
//      of any other Contributor, and only if You agree to indemnify,
//      defend, and hold each Contributor harmless for any liability
//      incurred by, or claims asserted against, such Contributor by reason
//      of your accepting any such warranty or additional liability.
//
//   END OF TERMS AND CONDITIONS
//
//   APPENDIX: How to apply the Apache License to your work.
//
//      To apply the Apache License to your work, attach the following
//      boilerplate notice, with the fields enclosed by brackets "{}"
//      replaced with your own identifying information. (Don't include
//      the brackets!)  The text should be enclosed in the appropriate
//      comment syntax for the file format. We also recommend that a
//      file or class name and description of purpose be included on the
//      same "printed page" as the copyright notice for easier
//      identification within third-party archives.
//
//   Copyright (c) 2017 Cisco
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

//Path: Cisco-IOS-XR-clns-isis-oper:isis/instances/instance/interfaces/interface

package cisco_ios_xr_clns_isis_oper.isis.instances.instance.interfaces.interface;

// All the Information of an IS-IS interface
message isis_sh_if_KEYS {
    string instance_name = 1;
    string interface_name = 2;
}

message isis_sh_if {
    // Configured circuit type for the interface
    string configured_circuit_type = 50;
    // Configured interface status
    isis_sh_if_cfg_status configured_status = 51;
    // Interface mesh group
    uint32 mesh_group = 52;
    // IS-type of the router
    string is_type = 53;
    // Information about the interface status and its data
    isis_sh_if_status interface_status_and_data = 54;
    // ISIS NSR Interface
    bool nsr_intf = 55;
}

message isis_ipv6_address_type {
    string value = 1;
}

// IPv4 address and prefix length
message isis_ipv4_prefix_type {
    // prefix
    string prefix = 1;
    // prefix length
    uint32 prefix_length = 2;
}

// IPv4 address and prefix length
message isis_ipv6_prefix_type {
    // prefix
    string prefix = 1;
    // prefix length
    uint32 prefix_length = 2;
}

message isis_ip_addr_type {
    string af_name = 1;
    // IPV4 address type
    string ipv4 = 2;
    // IPV6 address type
    isis_ipv6_address_type ipv6 = 3;
}

message isis_ip_prefix_type {
    string af_name = 1;
    isis_ipv4_prefix_type ipv4 = 2;
    isis_ipv6_prefix_type ipv6 = 3;
}

// Identification of an IS-IS topology
message isis_topo_id_type {
    // AF name
    string af_name = 1;
    // Sub-AF name
    string saf_name = 2;
    // VRF Name
    string vrf_name = 3;
    // Topology Name
    string topology_name = 4;
}

// Interface Detail
message isis_sh_intf_det {
    // Local interface handle
    string interface_handle = 1;
    // Interface name
    string interface_name = 2;
}

// Disabled interface info
message isis_sh_if_disabled {
    // Reason why the interface is disabled
    string reason_code = 1;
}

// Interface info when adjacency formation is disabled
message isis_sh_if_adj_form_disabled {
    // Reason why the interface is not able to form adjacencies
    string reason_code = 1;
}

message isis_sh_if_adj_form_status {
    string status = 1;
    // Disabled info for the adjacency formation status
    isis_sh_if_adj_form_disabled disabled = 2;
}

// Interface info when prefix advertisement is disabled
message isis_sh_if_adv_prefix_disabled {
    // Reason why the interface is not able to advertise prefixes
    string reason_code = 1;
}

message isis_sh_if_adv_prefix_status {
    string status = 1;
    // Disabled info for the prefix advertisement status
    isis_sh_if_adv_prefix_disabled disabled = 2;
}

// Configured state of an interface
message isis_sh_if_cfg_status {
    // Configured adjacency formation status
    bool adjacency_form_status = 1;
    // Configured prefix advertisement status
    bool adv_prefix_status = 2;
}

// Interface info when CLNS is down
message isis_sh_if_clns_proto_down {
    // Reason why CLNS is down
    string reason_code = 1;
}

message isis_sh_if_clns_status {
    string status = 1;
    // State describing why CLNS is down
    isis_sh_if_clns_proto_down clns_down_info = 2;
}

// Interface info with invalid MTU
message isis_sh_if_clns_mtu_invalid {
    // Reason why the MTU is invalid
    string reason_code = 1;
}

message isis_sh_if_clns_mtu_status {
    string status = 1;
    // Information pertaining to the invalid CLNS MTU
    isis_sh_if_clns_mtu_invalid invalid = 2;
    // Valid MTU
    uint32 mtu = 3;
}

// Interface info with CLNS SNPA unknown
message isis_sh_if_clns_snpa_unknown {
    // Reason why the SNPA is unknown
    string reason_code = 1;
}

// CLNS SNPA info
message isis_sh_if_clns_snpa_known {
    // Valid SNPA
    string snpa = 1;
}

message isis_sh_if_clns_snpa_status {
    string status = 1;
    // Information pertaining to the unknown SNPA state
    isis_sh_if_clns_snpa_unknown unknown = 2;
    // Information pertaining to the known SNPA state
    isis_sh_if_clns_snpa_known known = 3;
}

// Invalid multicast info
message isis_sh_if_mcast_invalid {
    // Reason why the multicast status is invalid
    string reason_code = 1;
}

message isis_sh_if_mcast_status {
    string status = 1;
    // Information pertaining to the invalid multicast status
    isis_sh_if_mcast_invalid invalid = 2;
}

// Per interface per area CLNS state
message isis_sh_if_area_clns {
    // Level of the area
    string level = 1;
    // Multicast group membership status
    isis_sh_if_mcast_status multicast_status = 2;
}

// LAN specific CLNS state
message isis_sh_if_clns_lan {
    // Array of per area CLNS data
    repeated isis_sh_if_area_clns per_area_data = 1;
}

// Point-to-point over LAN specific CLNS state
message isis_sh_if_clns_p2p_over_lan {
    // Multicast group membership status
    isis_sh_if_mcast_status multicast_status = 1;
}

// Point-to-point CLNS state
message isis_sh_if_clns_p2p {
    // Point-to-point over LAN data
    isis_sh_if_clns_p2p_over_lan p2_p_over_lan_data = 1;
}

// Media Specific CLNS state
message isis_sh_if_clns_media_specific_status {
    string clns_media_type = 1;
    // LAN state
    isis_sh_if_clns_lan clns_lan_data = 2;
    // Point-to-point state
    isis_sh_if_clns_p2p clns_p2_p_data = 3;
}

// CLNS I/O data for an interface
message isis_sh_if_clns {
    // Is CLNS protcol up or if not, the reason why it is not up
    isis_sh_if_clns_status clns_status = 1;
    // A valid MTU or the reason for the MTU being invalid
    isis_sh_if_clns_mtu_status mtu_info = 2;
    // SNPA state
    isis_sh_if_clns_snpa_status snpa_state = 3;
    // Media Specific CLNS state
    isis_sh_if_clns_media_specific_status media_specific_state = 4;
    // Time until next LSP may be sent (ms)
    uint32 time_until_next_lsp = 5;
    // TRUE if an LSP transmission has been requested
    bool lsp_transmit_requested_flag = 6;
    // TRUE if an LSP transmission has been sent, indicates LastLSPLevelTransmitted and LastLSP_IDTransmitted valid
    bool lsp_transmitted_flag = 7;
    // Number of LSPs that can be sent back to back in the current window without exceeding the pacing limit
    uint32 lsp_txmitd_b2_b_limit = 8;
    // Time im msecs indicating the end of the window in which the 'back to back lsps to be sent' counter applies
    uint32 lsp_txmt_b2_b_msecs = 9;
    // Level of the Last LSP Transmitted
    string last_lsp_level_transmitted = 10;
    // Last LSP ID Transmitted
    string last_lsp_id_transmitted = 11;
}

// Per-interface, per-area data for active LAN interface
message isis_sh_if_area_active_lan {
    // Circuit LAN ID
    bytes circuit_lan_id = 1;
    // Time (ms) until next IIH
    uint32 time_until_next_iih = 2;
    // Interface's DIS-election priority
    uint32 interface_priority = 3;
    // Priority of current DIS on this LAN
    uint32 dis_priority = 4;
    // Flag indicating if this LAN circuit is the DIS
    bool are_we_dis = 5;
}

// Per-area data for an interface
message isis_sh_if_area_active {
    // Level of the area
    string level = 1;
    // Number of adjacencies
    uint32 adjacency_count = 2;
    // LSP pacing time period (ms)
    uint32 lsp_pacing_interval = 3;
    // No. of SNP entries queued to be transmitted
    uint32 psnp_transmit_queue_size = 4;
    // LAN data, NULL iff interface has non-LAN media type
    isis_sh_if_area_active_lan lan_data = 5;
    // Hello interval
    uint32 hello_interval = 6;
    // Hello Multiplier
    uint32 hello_multiplier = 7;
}

// Topology info when adjacency formation is disabled
message isis_sh_if_topo_adj_form_disabled {
    // Reason why the adjacency formation status of a topology is disabled
    string reason_code = 1;
}

message isis_sh_if_topo_adj_form_status {
    string status = 1;
    // Disabled state for the adjacency formation status of a topology
    isis_sh_if_topo_adj_form_disabled disabled = 2;
}

// Topology info when prefix advertisement is disabled
message isis_sh_if_topo_adv_prefix_disabled {
    // Reason why the prefix advertisement status of a topology is disabled
    string reason_code = 1;
}

message isis_sh_if_topo_adv_prefix_status {
    string status = 1;
    // Disabled state for the prefix advertisement status of a topology
    isis_sh_if_topo_adv_prefix_disabled disabled = 2;
}

// FRR Tie Breaker Structure
message isis_frr_tiebreaker_sorted {
    // Tie Breaker Type
    string tie_breaker = 1;
    // Tie Breaker Index
    uint32 index = 2;
}

// Per level FRR information
message isis_sh_if_frr_level {
    // FRR type configured per level for this interface
    string frr_type = 1;
    // Is FRR enabled per level on this interface
    bool is_frr = 2;
    // Is FRR Remote LFA enabled per level for this interface
    bool is_remote_lfa = 3;
    // Is FRR TI LFA enabled per level for this interface
    bool is_ti_lfa = 4;
    // TI LFA node-protecting Tie breaker index
    uint32 ti_lfa_node_tie_breaker_index = 5;
    // TI LFA srlg Tie breaker index
    uint32 ti_lfa_srlg_tie_breaker = 6;
    // Is Tiebreaker configured per level for this interface
    bool is_tie_breakers_configured = 7;
    // FRR TieBreakers array per level for this interface
    repeated isis_frr_tiebreaker_sorted frr_tie_breaker = 8;
}

// Manual Adjacency SID Interface Configuration and Operation
message isis_sh_madj_sid_if {
    // Manual Adjacency SID Label
    uint32 manual_adjacency_sid_label = 1;
    // Manual Adjacency SID Index (if configured as index)
    uint32 manual_adjacency_sid_index = 2;
    // Manual Adjacency SID Type (Absolute or Index)
    uint32 manual_adjacency_sid_type = 3;
    // SID configured as protected by backup path
    bool sid_protected = 4;
    // SID is in use
    bool sid_active = 5;
}

// Enabled topology info of an interface
message isis_sh_if_topo_enabled {
    // Adjacency formation status of a topology
    isis_sh_if_topo_adj_form_status adjacency_form_status = 1;
    // Prefix advertisement status of a topology
    isis_sh_if_topo_adv_prefix_status adv_prefix_status = 2;
    // L1 metric for this topology
    uint32 level1_metric = 3;
    // L2 metric for this topology
    uint32 level2_metric = 4;
    // L1 metric for this topology
    uint32 level1_weight = 5;
    // L2 metric for this topology
    uint32 level2_weight = 6;
    // MPLS maximum number of pri labels supported
    uint32 max_label_supported = 7;
    // MPLS maximum number of backup labels supported
    uint32 max_bkp_label_supported = 8;
    // MPLS maximum number of srte labels supported
    uint32 max_srte_label_supported = 9;
    // MPLS LDP sync enabled status for L1
    bool level1_ldp_sync_enabled = 10;
    // MPLS LDP sync enabled status for L2
    bool level2_ldp_sync_enabled = 11;
    // Status of MPLS LDP synchronization
    bool ldp_sync_status = 12;
    // Status of MPLS LDPv6 synchronization
    bool ld_pv6_sync_status = 13;
    // L1 metric-offset for this topology
    uint32 level1_offset_metric = 14;
    // L2 metric-offset for this topology
    uint32 level2_offset_metric = 15;
    // Link-Group configure status for L1
    bool level1_lkgp_configured = 16;
    // Link-Group configure status for L2
    bool level2_lkgp_configured = 17;
    // L1 PP-metric for this topology
    uint32 level1_pp_metric = 18;
    // L2 PP-metric for this topology
    uint32 level2_pp_metric = 19;
    // PP configure status for L1
    bool level1_pp_configured = 20;
    // PP configure status for L2
    bool level2_pp_configured = 21;
    // Level1 FRR information
    isis_sh_if_frr_level level1_frr = 22;
    // Level2 FRR information
    isis_sh_if_frr_level level2_frr = 23;
    // Array of Manual Adjacency SIDs
    repeated isis_sh_madj_sid_if manual_adj_sid = 24;
}

// Disabled topology info of an interface
message isis_sh_if_topo_disabled {
    // Reason why the topology is disabled
    string reason_code = 1;
}

message isis_sh_if_topo_status {
    string status = 1;
    // Disabled information of a topology
    isis_sh_if_topo_disabled disabled = 2;
    // Enabled information of a topology
    isis_sh_if_topo_enabled enabled = 3;
}

// Per topology info of an interface
message isis_sh_if_topo {
    // Topology identifier
    isis_topo_id_type topology_id = 1;
    // Status of the topology
    isis_sh_if_topo_status status = 2;
}

// Address prefix unknown info
message isis_sh_if_af_prefix_unknown {
    // Reason why the global prefix(es) is(are) unknown
    string reason_code = 1;
}

// Address prefix info
message isis_sh_if_af_prefix_data {
    // Array of global prefixes
    repeated isis_ip_prefix_type prefix = 1;
    // Is the interface unnumbered
    bool is_unnumbered = 2;
}

message isis_sh_if_af_prefix_status {
    string status = 1;
    // Unknown state for the global prefixes
    isis_sh_if_af_prefix_unknown unknown = 2;
    // Global prefix data for the Address Family
    isis_sh_if_af_prefix_data prefix_data = 3;
}

// Address-family forwarding address data
message isis_sh_if_af_fwd_addr_data {
    // Array of forwarding addresses
    repeated isis_ip_addr_type forwarding_address = 1;
    // If the interface is unnumbered, then its name, else NULL
    string unnumbered_interface_name = 2;
}

// Forwarding address unknown data
message isis_sh_if_af_fwd_addr_unknown {
    // Reason why the forwarding address(es) of an AF is(are) unknown
    string reason_code = 1;
}

message isis_sh_if_af_fwd_addr_status {
    string status = 1;
    // Unknown forwarding address data
    isis_sh_if_af_fwd_addr_unknown unknown = 2;
    // Known Forwarding address data
    isis_sh_if_af_fwd_addr_data forwarding_address_data = 3;
}

// Address family protocol down info
message isis_sh_if_af_proto_down {
    // Reason why the Address Family protocol status is down
    string reason_code = 1;
}

message isis_sh_if_af_proto_status {
    string status = 1;
    // Disabled state of the Address Family protocol
    isis_sh_if_af_proto_down disabled = 2;
}

// Address family disabled info
message isis_sh_if_af_disabled {
    // Reason why the Address Family is disabled
    string reason_code = 1;
}

// Enabled address-family info of an interface
message isis_sh_if_af_enabled {
    // Protocol status of the AF
    isis_sh_if_af_proto_status protocol_status = 1;
    // Forwarding status of the AF
    isis_sh_if_af_fwd_addr_status forwarding_address_status = 2;
    // Prefix status of the AF
    isis_sh_if_af_prefix_status prefix_status = 3;
}

message isis_sh_if_af_status {
    string status = 1;
    // Disabled info for the AF of an interface
    isis_sh_if_af_disabled disabled = 2;
    // Enabled data for the AF of an interface
    isis_sh_if_af_enabled af_data = 3;
}

// Per Address family info
message isis_sh_if_af {
    // Address Family Identifier of the interface
    string af_name = 1;
    // Address Family status of the interface
    isis_sh_if_af_status af_status = 2;
}

// Per-interface data
message isis_sh_if_active_p2p {
    // Time in ms before the next IIH can be sent
    uint32 time_until_next_iih = 1;
    // No. of LSPs queued to be retransmitted
    uint32 retransmit_lsp_queue_size = 2;
    // Time in ms until the next scheduled LSP is retransmitted
    uint32 retransmit_lsp_interval = 3;
    // Extended Circuit Number valid for a P2P interface
    uint32 extended_circuit_number = 4;
}

// Per-interface BFD data
message isis_sh_if_bfd_type {
    // IPv4 BFD enabled status
    bool enabled = 1;
    // IPv6 BFD enabled status
    bool ipv6_enabled = 2;
    // BFD hello minimum interval in milliseconds
    uint32 interval = 3;
    // BFD hello multiplier
    uint32 multiplier = 4;
}

// State of an enabled interface
message isis_sh_if_enabled {
    // Interface's Adjacency Formation status
    isis_sh_if_adj_form_status adjacency_form_status = 1;
    // Interface's Prefix Advertisement status
    isis_sh_if_adv_prefix_status adv_prefix_status = 2;
    // Media type of the interface
    string interface_media_type = 3;
    // Enabled Circuit type of the interface
    string enabled_circuit_type = 4;
    // Local Circuit Number of the interface
    uint32 local_circuit_number = 5;
    // Data for an active P2P interface, NULL if not active or P2P
    isis_sh_if_active_p2p p2_p_data = 6;
    // The BFD data for the given interface
    isis_sh_if_bfd_type bfd_data = 7;
    // Rsi Srlg Registered
    bool rsi_srlg_registered = 8;
    // Bandwidth of the interface
    uint32 bandwidth = 9;
    // Interface data specific to CLNS I/O services
    isis_sh_if_clns clns_data = 10;
    // Underlying interface list for bundle interfaces
    repeated isis_sh_intf_det underlying_interface_list = 11;
    // Array of area information for an active interface
    repeated isis_sh_if_area_active per_area_data = 12;
    // Array of topology information
    repeated isis_sh_if_topo per_topology_data = 13;
    // Array of address family information
    repeated isis_sh_if_af per_address_family_data = 14;
}

message isis_sh_if_status {
    string status = 1;
    // The interface state if disabled
    isis_sh_if_disabled disabled = 2;
    // The interface state if enabled
    isis_sh_if_enabled enabled = 3;
}

