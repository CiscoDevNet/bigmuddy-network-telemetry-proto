// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.standby.vrfs.vrf.afs.af.forwarding_summary;

// MPLS LDP fowarding summary
message ldp_fwd_summ_info_KEYS {
    string vrf_name = 1;
    string af_name = 2;
}

message ldp_fwd_summ_info {
    // VRF information
    ldp_vrf_info vrf = 50;
    // LDP is connected to LSD server
    bool is_lsd_bound = 51;
    // Forwarding state hold time registered with LSD
    uint32 fsht = 52;
    // MPLS forwarding enabled interface count
    uint32 intfs = 53;
    // Local label allocated count
    uint32 lbls = 54;
    // Forwarding rewrites summary
    ldp_fwd_rw_summ r_ws = 55;
}

// MPLS LDP VRF information
message ldp_vrf_info {
    // VRF Name
    string name = 1;
    // VRF Id
    uint32 id = 2;
}

// MPLS LDP fowarding rewrite nexthop/path summary
message ldp_fwd_rw_path_summ {
    // Total path count
    uint32 total_paths = 1;
    // Count of FRR protected paths
    uint32 protected_paths = 2;
    // Count of non-primary backup paths
    uint32 backup_paths = 3;
    // Count of non-primary remote backup paths
    uint32 remote_backup_paths = 4;
    // Count of all labeled paths
    uint32 labeled_paths = 5;
    // Count of labeled backup paths
    uint32 labeled_backup_paths = 6;
}

// MPLS LDP forwarding rewrite prefix nexthops labeled summary
message ldp_fwd_rw_pfx_lbl_summ {
    // Count of labeled prefixes with 1 or more paths labeled
    uint32 labeled_pfxs = 1;
    // Count of labeled prefixes with some (but not ALL) paths labeled
    uint32 labeled_pfxs_partial = 2;
    // Count of labeled prefixes with ALL paths unlabeled
    uint32 unlabeled_pfxs = 3;
}

// MPLS LDP fowarding rewrite prefix summary
message ldp_fwd_rw_pfx_summ {
    // Total Prefix count
    uint32 total_pfxs = 1;
    // Count of prefixes with ECMP
    uint32 ecmp_pfxs = 2;
    // Count of FRR protected prefixes
    uint32 protected_pfxs = 3;
    // Labeled prefix count for all paths
    ldp_fwd_rw_pfx_lbl_summ labeled_pfxs_aggr = 4;
    // Labeled prefix count related to primary paths only
    ldp_fwd_rw_pfx_lbl_summ labeled_pfxs_primary = 5;
    // Labeled prefix count related to backup paths only
    ldp_fwd_rw_pfx_lbl_summ labeled_pfxs_backup = 6;
}

// MPLS LDP fowarding rewrite summary
message ldp_fwd_rw_summ {
    // Forwarding rewrites prefix summary
    ldp_fwd_rw_pfx_summ pfxs = 1;
    // Forwarding rewrites nexthops (paths) summary
    ldp_fwd_rw_path_summ n_hs = 2;
}

