// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.standby.vrfs.vrf.afs.af.discovery.targeted_hellos.targeted_hello;

// MPLS LDP Targeted Hello Information
message ldp_targeted_hello_info_KEYS {
    string vrf_name = 1;
    string af_name = 2;
    string local_address = 3;
    string target_address = 4;
}

message ldp_targeted_hello_info {
    // DHCB local address
    ldp_ip_addr_t_union dhcb_local_address = 50;
    // DHCB target address
    ldp_ip_addr_t_union dhcb_target_address = 51;
    // Targeted hello state
    string state = 52;
    // Adjacency LDP Identifier
    string adjacency_ldp_identifier = 53;
    // Hello interval in sec
    uint32 interval = 54;
    // Next hello due time in msec
    uint32 next_hello = 55;
    // Targeted hello hold time
    uint32 hold_time = 56;
    // Local hold time
    uint32 local_hold_time = 57;
    // Neighbor hold time
    uint32 neighbor_hold_time = 58;
    // Discovery expiry time in msec
    uint32 disc_expiry = 59;
    // Quick-start disabled
    bool quick_start_disabled = 60;
    // Hello adjacency estabished time in nanosec
    uint64 established_time = 61;
    // Hello adjacency estabished age in nanosec
    uint64 established_age = 62;
    // Is session up for this adj
    bool session_up = 63;
    // session bringup failure reason
    string session_bringup_failure_reason = 64;
    // Last session down information
    repeated ldp_last_sess_info last_session_down_info = 65;
}

message ldp_in6_addr_t {
    string value = 1;
}

message ldp_ip_addr_t_union {
    string afi = 1;
    // No Address
    uint32 dummy = 2;
    // IPv4 address type
    string ipv4 = 3;
    // IPv6 address type
    ldp_in6_addr_t ipv6 = 4;
}

// LDP last down session information
message ldp_last_sess_info {
    // The reason of last socket failure
    string last_session_down_reason = 1;
    // Timestamp of when the last session went down
    uint64 last_session_down_time = 2;
    // The time duration the last session was up
    uint32 last_session_up_time = 3;
}

