// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.standby.default_vrf.afs.af.discovery.link_hellos.link_hello;

// MPLS LDP Discovery Link Information
message ldp_discovery_link_info_KEYS {
    string af_name = 1;
    string interface_name = 2;
}

message ldp_discovery_link_info {
    // LDP hello info
    repeated ldp_hello_info hello_information = 50;
    // LDP hello AF info
    repeated ldp_discovery_link_af_info discovery_link_af = 51;
    // Next hello due time in msec
    uint32 next_hello = 52;
    // Interface name
    string interface = 53;
    // Interface name
    string interface_name = 54;
    // VRF information
    ldp_vrf_info vrf = 55;
    // Quick-start disabled
    bool quick_start_disabled = 56;
}

message ldp_in6_addr_t {
    string value = 1;
}

message ldp_ip_addr_t_union {
    string afi = 1;
    // No Address
    uint32 dummy = 2;
    // IPv4 address type
    string ipv4 = 3;
    // IPv6 address type
    ldp_in6_addr_t ipv6 = 4;
}

// MPLS LDP VRF information
message ldp_vrf_info {
    // VRF Name
    string name = 1;
    // VRF Id
    uint32 id = 2;
}

// LDP last down session information
message ldp_last_sess_info {
    // The reason of last socket failure
    string last_session_down_reason = 1;
    // Timestamp of when the last session went down
    uint64 last_session_down_time = 2;
    // The time duration the last session was up
    uint32 last_session_up_time = 3;
}

// MPLS LDP Hello Information
message ldp_hello_info {
    // Neighbor source address
    ldp_ip_addr_t_union neighbor_src_address = 1;
    // Neighbor transport address
    ldp_ip_addr_t_union neighbor_transport_address = 2;
    // Neighbor LDP Identifier
    string neighbor_ldp_identifier = 3;
    // Is route valid
    bool is_no_route = 4;
    // Session hold time in seconds
    uint32 hold_time = 5;
    // Local hold time in seconds
    uint32 local_hold_time = 6;
    // Neighbor hold time in seconds
    uint32 neighbor_hold_time = 7;
    // Discovery expiry time in sec
    uint32 disc_expiry = 8;
    // Is session a targeted session
    bool is_targeted = 9;
    // Target address
    ldp_ip_addr_t_union target = 10;
    // Is session up for this adj
    bool session_up = 11;
    // Hello adjacency estabished time in nanosec
    uint64 established_time = 12;
    // Hello adjacency estabished age in nanosec
    uint64 established_age = 13;
    // session bringup failure reason
    string session_bringup_failure_reason = 14;
    // Last session down information
    repeated ldp_last_sess_info last_session_down_info = 15;
}

// MPLS LDP Discovery Link Address Family Information
message ldp_discovery_link_af_info {
    // Local source address
    ldp_ip_addr_t_union local_src_address = 1;
    // Local transport address
    ldp_ip_addr_t_union local_transport_address = 2;
    // Hello interval in sec
    uint32 interval = 3;
}

