// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.standby.default_vrf.afs.af.bindings.binding;

// MPLS LDP Binding Detail Information
message ldp_tib_entry_detail_KEYS {
    string af_name = 1;
    string prefix = 2;
}

message ldp_tib_entry_detail {
    // VRF information
    ldp_vrf_info vrf = 50;
    // IP Prefix
    ldp_ip_addr_t_union prefix = 51;
    // Prefix Length
    uint32 prefix_length = 52;
    // Local label
    uint32 local_label = 53;
    // Local Binding revision
    uint32 le_local_binding_revision = 54;
    // Local label state
    string le_local_label_state = 55;
    // No route
    bool is_no_route = 56;
    // Label space depletion OOR
    bool label_oor = 57;
    // Advertise Prerfix ACL
    string advertise_prefix_acl = 58;
    // Advertise TSR ACL
    string advertise_tsr_acl = 59;
    // Remote binding
    repeated ldp_tib_entry_remote remote_binding = 60;
    // Peers this entry is advertised to
    repeated ldp_ldpid_info peers_advertised_to = 61;
    // Peers that have ACKed this entry
    repeated ldp_ldpid_info peers_acked = 62;
    // Config/User enforced local label value
    bool config_enforced_local_label_value = 63;
    // Is the entry entropy label capable
    bool is_elc = 64;
}

message ldp_in6_addr_t {
    string value = 1;
}

message ldp_ip_addr_t_union {
    string afi = 1;
    // No Address
    uint32 dummy = 2;
    // IPv4 address type
    string ipv4 = 3;
    // IPv6 address type
    ldp_in6_addr_t ipv6 = 4;
}

// MPLS LDP Identifier Information
message ldp_ldpid_info {
    // LSR identifier
    string lsr_id = 1;
    // Label space identifier
    uint32 label_space_id = 2;
    // LDP identifier
    string ldp_id = 3;
}

// MPLS LDP VRF information
message ldp_vrf_info {
    // VRF Name
    string name = 1;
    // VRF Id
    uint32 id = 2;
}

// MPLS LDP Remote Binding Information
message ldp_tib_entry_remote {
    // Remote Label
    uint32 remote_label = 1;
    // Assigning peer
    ldp_ldpid_info assigning_peer_ldp_ident = 2;
    // Is the entry stale
    bool is_stale = 3;
    // Is the entry entropy label capable
    bool is_elc = 4;
}

