// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.active.vrfs.vrf.graceful_restart;

// MPLS LDP Graceful Restart Information
message ldp_gr_global_info_KEYS {
    string vrf_name = 1;
}

message ldp_gr_global_info {
    // VRF information
    ldp_vrf_info vrf = 50;
    // Is graceful restart forwarding state hold timer running
    bool is_forwarding_state_hold_timer_running = 51;
    // Forwarding state hold timer remaining time in seconds
    uint32 forwarding_state_hold_timer_remaining_seconds = 52;
    // Vector of graceful restart neighbor information
    repeated ldp_gr_nbr_info graceful_restartable_neighbors = 53;
}

message ldp_in6_addr_t {
    string value = 1;
}

message ldp_ip_addr_t_union {
    string afi = 1;
    // No Address
    uint32 dummy = 2;
    // IPv4 address type
    string ipv4 = 3;
    // IPv6 address type
    ldp_in6_addr_t ipv6 = 4;
}

// MPLS LDP Identifier Information
message ldp_ldpid_info {
    // LSR identifier
    string lsr_id = 1;
    // Label space identifier
    uint32 label_space_id = 2;
    // LDP identifier
    string ldp_id = 3;
}

// MPLS LDP VRF information
message ldp_vrf_info {
    // VRF Name
    string name = 1;
    // VRF Id
    uint32 id = 2;
}

// MPLS LDP GR DownNbr Interface Info
message ldp_gr_dnbr_intf_info {
    // Interface adj Address Family
    string address_family = 1;
    // Interfaces handle
    string interface_handle = 2;
}

// MPLS LDP Graceful Restart Neighbor Information
message ldp_gr_nbr_info {
    // GR peer LDP Id
    ldp_ldpid_info gr_peer = 1;
    // ConnectCount
    uint32 connect_count = 2;
    // Is neighbor up
    bool is_neighbor_up = 3;
    // Is liveness timer running
    bool is_liveness_timer_running = 4;
    // Remaining time from liveness timer
    uint32 liveness_timer_remaining_seconds = 5;
    // Is recovery timer running
    bool is_recovery_timer_running = 6;
    // Recovery timer remining time
    uint32 recovery_timer_remaining_seconds = 7;
    // Interfaces bound to GR down Nbr
    repeated ldp_gr_dnbr_intf_info down_nbr_interfaces = 8;
    // Addresses bound to GR down Nbr
    repeated ldp_ip_addr_t_union down_nbr_addresses = 9;
    // Count of back2back flaps
    uint32 down_nbr_flap_count = 10;
    // Flags
    uint32 down_nbr_flags = 11;
    // Session down reason code
    uint32 down_nbr_down_reason = 12;
}

