// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.default_vrf.parameters;

// MPLS LDP Global Parameters
message ldp_parameters_KEYS {
    string node_name = 1;
}

message ldp_parameters {
    // Is process role active or standby
    bool role_is_active = 50;
    // Global MD5 password enabled
    bool global_md5_password_enabled = 51;
    // Protocol version
    uint32 protocol_version = 52;
    // Router ID
    string router_id = 53;
    // Keepalive interval
    uint32 keepalive_interval = 54;
    // Hello hold time
    uint32 hello_hold_time = 55;
    // Hello interval
    uint32 hello_interval = 56;
    // Targeted hello hold time
    uint32 targeted_hello_hold_time = 57;
    // Targeted hello interval
    uint32 targeted_hello_interval = 58;
    // Session hold time
    uint32 session_hold_time = 59;
    // Housekeeping periodic timer interval
    uint32 housekeeping_timer_interval = 60;
    // LIB entry no route timeout
    uint32 le_no_route_timeout = 61;
    // LDP recovery timeout with LSD
    uint32 ldp_recovery_timeout = 62;
    // Delay (sec) in Binding Withdrawal for an Address Family
    uint32 af_binding_withdraw_delay = 63;
    // Maximum number of LDP enabled attached interfaces
    uint32 max_intf_attached = 64;
    // Maximum number of LDP enabled TE interfaces
    uint32 max_intf_te = 65;
    // Maximum number of LDP peers
    uint32 max_peer = 66;
    // LDP Out of memory state
    uint32 ldp_out_of_mem_state = 67;
    // Graceful restart information
    ldp_graceful_restart_info graceful_restart_information = 68;
    // TRUE if NSR is enabled
    bool nsr_enabled = 69;
    // TRUE if LDP is standby and is NSR Sync-ed with active
    bool nsr_synced = 70;
    // Interface IGP sync delay time in seconds
    uint32 igp_sync_delay_time_for_interface = 71;
    // IGP sync delay time on process restart in seconds
    uint32 igp_sync_delay_time_on_restart = 72;
    // Discovery quick-start globally disabled
    bool global_discovery_quick_start_disabled = 73;
    // Discovery quick-start disabled on some LDP-enabled interfaces
    bool discovery_quick_start_disabled_on_interfaces = 74;
    // Per AF parameters
    repeated ldp_parameters_af address_family_parameters = 75;
}

message ldp_in6_addr_t {
    string value = 1;
}

message ldp_ip_addr_t_union {
    string afi = 1;
    // No Address
    uint32 dummy = 2;
    // IPv4 address type
    string ipv4 = 3;
    // IPv6 address type
    ldp_in6_addr_t ipv6 = 4;
}

// MPLS LDP Global Graceful Restart Information
message ldp_graceful_restart_info {
    // Is graceful restart configured
    bool is_graceful_restart_configured = 1;
    // Reconnect timeout value
    uint32 graceful_restart_reconnect_timeout = 2;
    // Graceful restart forward state hold time
    uint32 graceful_restart_forwarding_state_hold_time = 3;
}

// MPLS LDP per AF Parameters Information
message ldp_parameters_af {
    // Address Family
    string address_family = 1;
    // Null label
    string null_label = 2;
    // ACL to override local label to use implicit-null
    string label_imp_null_override_acl = 3;
    // Accepting targeted Hellos
    bool is_accepting_targeted_hellos = 4;
    // Targeted Hello ACL
    string targeted_hello_acl = 5;
    // Discovery transport address
    ldp_ip_addr_t_union discovery_transport_address = 6;
}

