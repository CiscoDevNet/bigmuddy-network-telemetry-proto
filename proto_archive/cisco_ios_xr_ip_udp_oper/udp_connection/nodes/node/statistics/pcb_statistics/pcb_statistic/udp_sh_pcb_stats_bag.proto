// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_ip_udp_oper.udp_connection.nodes.node.statistics.pcb_statistics.pcb_statistic;

// UDP statistics
message udp_sh_pcb_stats_bag_KEYS {
    string node_name = 1;
    uint32 pcb_address = 2;
}

message udp_sh_pcb_stats_bag {
    // VRF ID
    uint32 vrf_id = 50;
    // UDP send statistics
    udp_pcb_send_stats_type send = 51;
    // UDP receive statistics
    udp_pcb_receive_stats_type receive = 52;
    // True if paw socket
    bool is_paw_socket = 53;
}

// UDP send statistics
message udp_pcb_send_stats_type {
    // Bytes received from application
    uint64 received_application_bytes = 1;
    // XIPC pulses received from application
    uint64 received_xipc_pulses = 2;
    // Packets sent to network (v4/v6 IO)
    uint64 sent_network_packets = 3;
    // Packets sent to network (NetIO)
    uint64 sent_net_io_packets = 4;
    // Packets failed getting queued to network (v4/v6 IO)
    uint32 failed_queued_network_packets = 5;
    // Packets failed getting queued to network (NetIO)
    uint32 failed_queued_net_io_packets = 6;
}

// UDP receive statistics
message udp_pcb_receive_stats_type {
    // Packets received from network
    uint64 received_network_packets = 1;
    // Packets failed queued to application
    uint32 failed_queued_application_packets = 2;
    // Packets queued to application
    uint64 queued_application_packets = 3;
    // Packet that couldn't be queued to application.on socket
    uint32 failed_queued_application_socket_packets = 4;
    // Packets queued to application on socket
    uint64 queued_application_socket_packets = 5;
}

