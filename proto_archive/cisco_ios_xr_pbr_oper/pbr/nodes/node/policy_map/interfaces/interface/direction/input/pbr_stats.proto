// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_pbr_oper.pbr.nodes.node.policy_map.interfaces.interface.direction.input;

// policy map statistics
message pbr_stats_KEYS {
    string node_name = 1;
    string interface_name = 2;
}

message pbr_stats {
    string node_name = 50;
    string policy_name = 51;
    string state = 52;
    string state_description = 53;
    // Array of classes contained in policy
    repeated class_stats class_stats = 54;
}

// Counters common to all features
message gen_stats_st {
    // Transmitted packets (packets/bytes)
    uint64 transmit_packets = 1;
    // Transmitted bytes (packets/bytes)
    uint64 transmit_bytes = 2;
    // Dropped packets (packets/bytes)
    uint64 total_drop_packets = 3;
    // Dropped bytes (packets/bytes)
    uint64 total_drop_bytes = 4;
    // Total drop rate (packets/bytes)
    uint32 total_drop_rate = 5;
    // Incoming matched data rate in kbps
    uint32 match_data_rate = 6;
    // Total transmit rate in kbps
    uint32 total_transmit_rate = 7;
    // Matched pkts before applying policy
    uint64 pre_policy_matched_packets = 8;
    // Matched bytes before applying policy
    uint64 pre_policy_matched_bytes = 9;
}

// HTTPR Stats
message httpr_stats_st {
    // TotalNum of pkts HTTP request received
    uint64 rqst_rcvd_packets = 1;
    // TotalNum of Bytes HTTP request received
    uint64 rqst_rcvd_bytes = 2;
    // Dropped  packets
    uint64 drop_packets = 3;
    // Dropped bytes
    uint64 drop_bytes = 4;
    // TotalNum of pkts HTTPR response sent
    uint64 resp_sent_packets = 5;
    // TotalNum of Bytes HTTPR response sent
    uint64 resp_sent_bytes = 6;
}

message class_stats {
    //  Bitmask to indicate which counter or counters are undetermined. Counters will be marked undetermined when one or more classes share queues with class-default because in such cases the value of counters for each class is invalid. Based on the flag(s) set, the following counters will be marked undetermined. For example, if value of this object returned is 0x00000101, counters TransmitPackets/TransmitBytes/TotalTransmitRate and DropPackets/DropBytes are undetermined.0x00000001 - Transmit (TransmitPackets/TransmitBytes/TotalTransmitRate), 0x00000002 - Drop (TotalDropPackets/TotalDropBytes/TotalDropRate), 0x00000004 - Httpr (HttprTransmitPackets/HttprTransmitBytes), 
    uint64 counter_validity_bitmask = 1;
    string class_name = 2;
    uint32 class_id = 3;
    gen_stats_st general_stats = 4;
    // HTTPR stats
    httpr_stats_st httpr_stats = 5;
}

