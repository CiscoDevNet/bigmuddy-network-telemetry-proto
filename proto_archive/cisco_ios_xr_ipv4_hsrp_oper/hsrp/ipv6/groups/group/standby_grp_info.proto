// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_ipv4_hsrp_oper.hsrp.ipv6.groups.group;

// Detailed group specfic information
message standby_grp_info_KEYS {
    string interface_name = 1;
    uint32 group_number = 2;
}

message standby_grp_info {
    // Authentication string
    string authentication_string = 50;
    // Virtual mac address
    string virtual_mac_address = 51;
    // HSRP Group number
    uint32 hsrp_group_number = 52;
    // Address family
    string address_family = 53;
    // HSRP Protocol Version
    uint32 version = 54;
    // Session Name
    string session_name = 55;
    // Number of slaves following state
    uint32 slaves = 56;
    // Group is a slave group
    bool is_slave = 57;
    // Followed Session Name
    string followed_session_name = 58;
    // Configured priority
    uint32 configured_priority = 59;
    // Preempt delay time in seconds
    uint32 preempt_delay = 60;
    // Preempt time remaining in seconds
    uint32 preempt_timer_secs = 61;
    // Hellotime in msecs
    uint32 hello_time = 62;
    // Holdtime in msecs
    uint32 hold_time = 63;
    // Learned hellotime in msecs
    uint32 learned_hello_time = 64;
    // Learned holdtime in msecs
    uint32 learned_hold_time = 65;
    // Minimum delay time in msecs
    uint32 min_delay_time = 66;
    // Reload delay time in msecs
    uint32 reload_delay_time = 67;
    // Configured Virtual IPv4 address
    string virtual_ip_address = 68;
    // Virtual linklocal IPv6 address
    string virtual_linklocal_ipv6_address = 69;
    // Active router's IP address
    string active_ip_address = 70;
    // Active router's IPv6 address
    string active_ipv6_address = 71;
    // Active router's interface MAC address
    string active_mac_address = 72;
    // Standby router's IP address
    string standby_ip_address = 73;
    // Standby router's IPv6 address
    string standby_ipv6_address = 74;
    // Standby router's interface MAC address
    string standby_mac_address = 75;
    // HSRP router state
    string hsrp_router_state = 76;
    // Secondary virtual IP addresses
    repeated bytes secondary_address_list = 77;
    // Global virtual IPv6 addresses
    repeated ipv6_bag_addr_ global_address_list = 78;
    // Interface Name
    string interface_name = 79;
    // IM Interface
    string interface = 80;
    // Priority of the router
    uint32 router_priority = 81;
    // Priority of the Active router
    uint32 active_priority = 82;
    // Active timer running flag
    bool active_timer_flag = 83;
    // Active timer running time secs
    uint32 active_timer_secs = 84;
    // Active timer running time msecs
    uint32 active_timer_msecs = 85;
    // Standby timer running flag
    bool standby_timer_flag = 86;
    // Standby timer running time secs
    uint32 standby_timer_secs = 87;
    // Standby timer running time msecs
    uint32 standby_timer_msecs = 88;
    // Hello timer running flag
    bool hello_timer_flag = 89;
    // Hello timer running time secs
    uint32 hello_timer_secs = 90;
    // Hello timer running time msecs
    uint32 hello_timer_msecs = 91;
    // Delay timer running flag
    bool delay_timer_flag = 92;
    // Delay timer running time secs
    uint32 delay_timer_secs = 93;
    // Delay timer running time msecs
    uint32 delay_timer_msecs = 94;
    // Time in current state secs
    uint32 current_state_timer_secs = 95;
    // Number of state changes
    uint32 state_change_count = 96;
    // Number of tracked interfaces
    uint32 tracked_interface_count = 97;
    // Number of tracked interfaces up
    uint32 tracked_interface_up_count = 98;
    // Preempt enabled
    bool preempt_enabled = 99;
    // Use configured timers
    bool use_configured_timers = 100;
    // Use configured virtual IP
    bool use_configured_virtual_ip = 101;
    // Use burnt in MAC address configured
    bool use_bia_configured = 102;
    // Non-default timers are configured
    bool configured_timers = 103;
    // MAC address configured
    bool configured_mac_address = 104;
    // HSRP redirects disabled
    bool redirects_disabled = 105;
    // HSRP BFD fast failover
    bool bfd_enabled = 106;
    // BFD Interface
    string bfd_interface = 107;
    // BFD Peer IP address
    string bfd_peer_ip_address = 108;
    // BFD Peer IPv6 address
    string bfd_peer_ipv6_address = 109;
    // BFD session state
    string bfd_session_state = 110;
    // BFD packet send interval
    uint32 bfd_interval = 111;
    // BFD multiplier
    uint32 bfd_multiplier = 112;
    // Time last resign was sent
    hsrp_bag_timestamp resign_sent_time = 113;
    // Time last resign was received
    hsrp_bag_timestamp resign_received_time = 114;
    // Time last coup was sent
    hsrp_bag_timestamp coup_sent_time = 115;
    // Time last coup was received
    hsrp_bag_timestamp coup_received_time = 116;
    // State change history
    repeated hsrp_state_change_info_type state_change_history = 117;
    // HSRP Group statistics
    hsrp_group_stats_type statistics = 118;
    // Virtual mac address state
    string virtual_mac_address_state = 119;
}

message ipv6_bag_addr_ {
    string ipv6_address = 1;
}

// Timestamp
message hsrp_bag_timestamp {
    // Seconds
    uint32 seconds = 1;
    // Nanoseconds
    uint32 nanoseconds = 2;
}

// State change info
message hsrp_state_change_info_type {
    // Old State
    string old_state = 1;
    // New State
    string new_state = 2;
    // Reason for state change
    string reason = 3;
    // Time of state change
    hsrp_bag_timestamp time = 4;
}

// HSRP Group Statistics
message hsrp_group_stats_type {
    // Number of transitions to Active State
    uint32 active_transitions = 1;
    // Number of transitions to Standby State
    uint32 standby_transitions = 2;
    // Number of transitions to Speak State
    uint32 speak_transitions = 3;
    // Number of transitions to Listen State
    uint32 listen_transitions = 4;
    // Number of transitions to Learn State
    uint32 learn_transitions = 5;
    // Number of transitions to Init State
    uint32 init_transitions = 6;
    // Number of Hello Packets sent (NB: Bundles only)
    uint32 hello_packets_sent = 7;
    // Number of Resign Packets sent
    uint32 resign_packets_sent = 8;
    // Number of Coup Packets sent
    uint32 coup_packets_sent = 9;
    // Number of Hello Packets received
    uint32 hello_packets_received = 10;
    // Number of Resign Packets received
    uint32 resign_packets_received = 11;
    // Number of Coup Packets received
    uint32 coup_packets_received = 12;
    // Number of Packets received that failed authentication
    uint32 auth_fail_received = 13;
    // Number of packets received with invalid Hello Time value
    uint32 invalid_timer_received = 14;
    // Number of packets received with mismatching virtual IP address
    uint32 mismatch_virtual_ip_address_received = 15;
}

