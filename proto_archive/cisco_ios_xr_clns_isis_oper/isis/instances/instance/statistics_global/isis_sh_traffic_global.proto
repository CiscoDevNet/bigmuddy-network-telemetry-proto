// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_clns_isis_oper.isis.instances.instance.statistics_global;

// IS-IS process traffic data
message isis_sh_traffic_global_KEYS {
    string instance_name = 1;
}

message isis_sh_traffic_global {
    // Statistics
    isis_traffic_global_type statistics = 50;
    // Per-area data
    repeated isis_sh_traffic_area per_area_data = 51;
}

// Identification of an IS-IS topology
message isis_topo_id_type {
    // AF name
    string af_name = 1;
    // Sub-AF name
    string saf_name = 2;
    // VRF Name
    string vrf_name = 3;
    // Topology Name
    string topology_name = 4;
}

// Timestamp for an event
message isis_sh_timestamp_type {
    // Timestamp value (seconds)
    uint32 seconds = 1;
    // Timestamp value (nanoseconds)
    uint32 nano_seconds = 2;
}

// Per-area, per-topology traffic statistics
message isis_area_topo_stats_type {
    // Number of full SPF calculations run
    uint32 spf_run_count = 1;
    // Number of ISPF calculations run
    uint32 ispf_run_count = 2;
    // Number of Next Hop Calculations run
    uint32 nhc_run_count = 3;
    // Number of PRCs run
    uint32 prc_run_count = 4;
    // Number of periodic SPF calculations run
    uint32 periodic_run_count = 5;
}

// Per-area, per-topology traffic data
message isis_sh_traffic_area_topo {
    // Topology ID
    isis_topo_id_type id = 1;
    // Statistics
    isis_area_topo_stats_type statistics = 2;
}

// Per-area traffic statistics
message isis_area_stats_type {
    // Number of times system LSP rebuilt
    uint32 system_lsp_build_count = 1;
    // Number of times system LSP refreshed
    uint32 system_lsp_refresh_count = 2;
}

// Per-area traffic data
message isis_sh_traffic_area {
    // Level this data applies to
    string level = 1;
    // Statistics
    isis_area_stats_type statistics = 2;
    // Per-topoogy statistics
    repeated isis_sh_traffic_area_topo per_topology_data = 3;
}

// IS-IS process traffic statistics
message isis_traffic_global_type {
    // Fast-PSNP cache lookups
    uint32 fast_psnp_lookup_count = 1;
    // Fast-PSNP cache hits
    uint32 fast_psnp_lookup_hit_count = 2;
    // Fast-CSNP cache lookups
    uint32 fast_csnp_lookup_count = 3;
    // Fast-CSNP cache hits
    uint32 fast_csnp_lookup_hit_count = 4;
    // Fast-CSNP cache updates
    uint32 fast_csnp_cache_update_count = 5;
    // LSPs received with holdtime 0
    uint32 zero_holdtime_lsp_count = 6;
    // LSPs received with invalid checksum
    uint32 invalid_checksum_lsp_count = 7;
    // IIHs dropped - Not Used
    uint32 iih_dropped_count = 8;
    // LSPs dropped
    uint32 lsp_dropped_count = 9;
    // SNPs dropped
    uint32 snp_dropped_count = 10;
    // Maximum IIH queue length - Not Used
    uint32 maximum_iih_queue_length = 11;
    // Maximum update PDU queue length
    uint32 maximum_pdu_queue_length = 12;
    // Average hello process time
    isis_sh_timestamp_type avg_hello_process_time = 13;
    // Average hello receive rate in packets per second
    uint32 avg_hello_recv_rate = 14;
    // Average CSNP process time
    isis_sh_timestamp_type avg_csnp_process_time = 15;
    // Average csnp receive rate in packets per second
    uint32 avg_csnp_recv_rate = 16;
    // Average PSNP process time
    isis_sh_timestamp_type avg_psnp_process_time = 17;
    // Average psnp receive rate in packets per second
    uint32 avg_psnp_recv_rate = 18;
    // Average LSP process time
    isis_sh_timestamp_type avg_lsp_process_time = 19;
    // Average LSP receive rate in packets per second
    uint32 avg_lsp_recv_rate = 20;
    // Average hello transmit time
    isis_sh_timestamp_type avg_hello_transmit_time = 21;
    // Average hello send rate in packets per second
    uint32 avg_hello_send_rate = 22;
    // Average CSNP transmit time
    isis_sh_timestamp_type avg_csnp_transmit_time = 23;
    // Average csnp send rate in packets per second
    uint32 avg_csnp_send_rate = 24;
    // Average PSNP transmit time
    isis_sh_timestamp_type avg_psnp_transmit_time = 25;
    // Average psnp send rate in packets per second
    uint32 avg_psnp_send_rate = 26;
    // Average LSP transmit time
    isis_sh_timestamp_type avg_lsp_transmit_time = 27;
    // Average LSP send rate in packets per second
    uint32 avg_lsp_send_rate = 28;
}

