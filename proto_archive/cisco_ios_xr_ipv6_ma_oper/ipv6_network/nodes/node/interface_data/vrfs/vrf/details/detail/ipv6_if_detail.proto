// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_ipv6_ma_oper.ipv6_network.nodes.node.interface_data.vrfs.vrf.details.detail;

// Detailed Info of IPv6 Interface
message ipv6_if_detail_KEYS {
    string node_name = 1;
    string vrf_name = 2;
    string interface_name = 3;
}

message ipv6_if_detail {
    // State of Interface Line
    string line_state = 50;
    // IPv6 Multicast Group
    repeated ipv6_mcast_group multicast_groups = 51;
    // IPv6 MTU
    uint32 mtu = 52;
    // IPv6 Operation State
    string operation_state = 53;
    // Address List
    repeated ipv6_addr_node address_list = 54;
    // Link Local Address
    ipv6_addr_node link_local_address = 55;
    // IPv6 Access Control List
    ipv6_acl_config access_control_list = 56;
    // Multi IPv6 Access Control List
    ipv6_multi_acl_config multi_access_control_list = 57;
    // ICMP unreach Enable
    bool is_icmp_unreach_enabled = 58;
    // RPF config on the interface
    rpf_config rpf = 59;
    // BGP PA config on the interface
    bgp_pa_config bgp_pa = 60;
    // Does ICCP RG ID exist on the interface?
    bool rg_id_exists = 61;
    // Is mLACP state Active (valid if RG ID exists)
    bool m_lacp_active = 62;
    // Is BGP Flow Tag Source is enable
    bool flow_tag_src = 63;
    // Is BGP Flow Tag Destination is enable
    bool flow_tag_dst = 64;
    // Address Publish Time
    timeval_entry utime = 65;
    // IDB Create Time
    timeval_entry idb_utime = 66;
    // CAPS Add Time
    timeval_entry caps_utime = 67;
    // FWD ENABLE Time
    timeval_entry fwd_en_utime = 68;
    // FWD DISABLE Time
    timeval_entry fwd_dis_utime = 69;
    // IPv6 Client Multicast Group
    repeated ipv6_mcast_group client_multicast_groups = 70;
}

message str {
    string value = 1;
}

// Creatation or Update Time
message timeval_entry {
}

// List of IPv6 Addresses 
message ipv6_addr_node {
    // IPv6 Address
    string address = 1;
    // Prefix Length of IPv6 Address
    uint32 prefix_length = 2;
    // State of Address
    string address_state = 3;
    // Anycast address
    bool is_anycast = 4;
    // Route-tag of the Address
    uint32 route_tag = 5;
}

message ipv6_acl_config {
    // ACL applied to incoming packets
    string in_bound = 1;
    // ACL applied to outgoing packets
    string out_bound = 2;
    // Common ACL applied to incoming packets
    string common_in_bound = 3;
    // Common ACL applied to outgoing packets
    string common_out_bound = 4;
}

message ipv6_multi_acl_config {
    // Inbound ACLs
    repeated str inbound = 1;
    // Outbound ACLs
    repeated str outbound = 2;
    // Common ACLs
    repeated str common = 3;
}

// MCast Group 
message ipv6_mcast_group {
    // IPv6 Address of Multicast Group
    string address = 1;
}

// RPF config information
message rpf_config {
    // Enable RPF config
    bool enable = 1;
    // Allow Default Route
    bool allow_default_route = 2;
    // Allow Self Ping
    bool allow_self_ping = 3;
    // RPF Mode (loose/strict)
    uint32 mode = 4;
}

// BGP PA config for ingress/egress direction
message bgp_pa_dir {
    // Enable BGP PA for ingress/egress
    uint32 enable = 1;
    // Enable source accouting
    bool source = 2;
    // Enable destination accouting
    bool destination = 3;
}

// BGP PA config information
message bgp_pa_config {
    // BGP PA input config
    bgp_pa_dir input = 1;
    // BGP PA output config
    bgp_pa_dir output = 2;
}

