//                                 Apache License
//                           Version 2.0, January 2004
//                        http://www.apache.org/licenses/
//
//   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
//
//   1. Definitions.
//
//      "License" shall mean the terms and conditions for use, reproduction,
//      and distribution as defined by Sections 1 through 9 of this document.
//
//      "Licensor" shall mean the copyright owner or entity authorized by
//      the copyright owner that is granting the License.
//
//      "Legal Entity" shall mean the union of the acting entity and all
//      other entities that control, are controlled by, or are under common
//      control with that entity. For the purposes of this definition,
//      "control" means (i) the power, direct or indirect, to cause the
//      direction or management of such entity, whether by contract or
//      otherwise, or (ii) ownership of fifty percent (50%) or more of the
//      outstanding shares, or (iii) beneficial ownership of such entity.
//
//      "You" (or "Your") shall mean an individual or Legal Entity
//      exercising permissions granted by this License.
//
//      "Source" form shall mean the preferred form for making modifications,
//      including but not limited to software source code, documentation
//      source, and configuration files.
//
//      "Object" form shall mean any form resulting from mechanical
//      transformation or translation of a Source form, including but
//      not limited to compiled object code, generated documentation,
//      and conversions to other media types.
//
//      "Work" shall mean the work of authorship, whether in Source or
//      Object form, made available under the License, as indicated by a
//      copyright notice that is included in or attached to the work
//      (an example is provided in the Appendix below).
//
//      "Derivative Works" shall mean any work, whether in Source or Object
//      form, that is based on (or derived from) the Work and for which the
//      editorial revisions, annotations, elaborations, or other modifications
//      represent, as a whole, an original work of authorship. For the purposes
//      of this License, Derivative Works shall not include works that remain
//      separable from, or merely link (or bind by name) to the interfaces of,
//      the Work and Derivative Works thereof.
//
//      "Contribution" shall mean any work of authorship, including
//      the original version of the Work and any modifications or additions
//      to that Work or Derivative Works thereof, that is intentionally
//      submitted to Licensor for inclusion in the Work by the copyright owner
//      or by an individual or Legal Entity authorized to submit on behalf of
//      the copyright owner. For the purposes of this definition, "submitted"
//      means any form of electronic, verbal, or written communication sent
//      to the Licensor or its representatives, including but not limited to
//      communication on electronic mailing lists, source code control systems,
//      and issue tracking systems that are managed by, or on behalf of, the
//      Licensor for the purpose of discussing and improving the Work, but
//      excluding communication that is conspicuously marked or otherwise
//      designated in writing by the copyright owner as "Not a Contribution."
//
//      "Contributor" shall mean Licensor and any individual or Legal Entity
//      on behalf of whom a Contribution has been received by Licensor and
//      subsequently incorporated within the Work.
//
//   2. Grant of Copyright License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      copyright license to reproduce, prepare Derivative Works of,
//      publicly display, publicly perform, sublicense, and distribute the
//      Work and such Derivative Works in Source or Object form.
//
//   3. Grant of Patent License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      (except as stated in this section) patent license to make, have made,
//      use, offer to sell, sell, import, and otherwise transfer the Work,
//      where such license applies only to those patent claims licensable
//      by such Contributor that are necessarily infringed by their
//      Contribution(s) alone or by combination of their Contribution(s)
//      with the Work to which such Contribution(s) was submitted. If You
//      institute patent litigation against any entity (including a
//      cross-claim or counterclaim in a lawsuit) alleging that the Work
//      or a Contribution incorporated within the Work constitutes direct
//      or contributory patent infringement, then any patent licenses
//      granted to You under this License for that Work shall terminate
//      as of the date such litigation is filed.
//
//   4. Redistribution. You may reproduce and distribute copies of the
//      Work or Derivative Works thereof in any medium, with or without
//      modifications, and in Source or Object form, provided that You
//      meet the following conditions:
//
//      (a) You must give any other recipients of the Work or
//          Derivative Works a copy of this License; and
//
//      (b) You must cause any modified files to carry prominent notices
//          stating that You changed the files; and
//
//      (c) You must retain, in the Source form of any Derivative Works
//          that You distribute, all copyright, patent, trademark, and
//          attribution notices from the Source form of the Work,
//          excluding those notices that do not pertain to any part of
//          the Derivative Works; and
//
//      (d) If the Work includes a "NOTICE" text file as part of its
//          distribution, then any Derivative Works that You distribute must
//          include a readable copy of the attribution notices contained
//          within such NOTICE file, excluding those notices that do not
//          pertain to any part of the Derivative Works, in at least one
//          of the following places: within a NOTICE text file distributed
//          as part of the Derivative Works; within the Source form or
//          documentation, if provided along with the Derivative Works; or,
//          within a display generated by the Derivative Works, if and
//          wherever such third-party notices normally appear. The contents
//          of the NOTICE file are for informational purposes only and
//          do not modify the License. You may add Your own attribution
//          notices within Derivative Works that You distribute, alongside
//          or as an addendum to the NOTICE text from the Work, provided
//          that such additional attribution notices cannot be construed
//          as modifying the License.
//
//      You may add Your own copyright statement to Your modifications and
//      may provide additional or different license terms and conditions
//      for use, reproduction, or distribution of Your modifications, or
//      for any such Derivative Works as a whole, provided Your use,
//      reproduction, and distribution of the Work otherwise complies with
//      the conditions stated in this License.
//
//   5. Submission of Contributions. Unless You explicitly state otherwise,
//      any Contribution intentionally submitted for inclusion in the Work
//      by You to the Licensor shall be under the terms and conditions of
//      this License, without any additional terms or conditions.
//      Notwithstanding the above, nothing herein shall supersede or modify
//      the terms of any separate license agreement you may have executed
//      with Licensor regarding such Contributions.
//
//   6. Trademarks. This License does not grant permission to use the trade
//      names, trademarks, service marks, or product names of the Licensor,
//      except as required for reasonable and customary use in describing the
//      origin of the Work and reproducing the content of the NOTICE file.
//
//   7. Disclaimer of Warranty. Unless required by applicable law or
//      agreed to in writing, Licensor provides the Work (and each
//      Contributor provides its Contributions) on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
//      implied, including, without limitation, any warranties or conditions
//      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
//      PARTICULAR PURPOSE. You are solely responsible for determining the
//      appropriateness of using or redistributing the Work and assume any
//      risks associated with Your exercise of permissions under this License.
//
//   8. Limitation of Liability. In no event and under no legal theory,
//      whether in tort (including negligence), contract, or otherwise,
//      unless required by applicable law (such as deliberate and grossly
//      negligent acts) or agreed to in writing, shall any Contributor be
//      liable to You for damages, including any direct, indirect, special,
//      incidental, or consequential damages of any character arising as a
//      result of this License or out of the use or inability to use the
//      Work (including but not limited to damages for loss of goodwill,
//      work stoppage, computer failure or malfunction, or any and all
//      other commercial damages or losses), even if such Contributor
//      has been advised of the possibility of such damages.
//
//   9. Accepting Warranty or Additional Liability. While redistributing
//      the Work or Derivative Works thereof, You may choose to offer,
//      and charge a fee for, acceptance of support, warranty, indemnity,
//      or other liability obligations and/or rights consistent with this
//      License. However, in accepting such obligations, You may act only
//      on Your own behalf and on Your sole responsibility, not on behalf
//      of any other Contributor, and only if You agree to indemnify,
//      defend, and hold each Contributor harmless for any liability
//      incurred by, or claims asserted against, such Contributor by reason
//      of your accepting any such warranty or additional liability.
//
//   END OF TERMS AND CONDITIONS
//
//   APPENDIX: How to apply the Apache License to your work.
//
//      To apply the Apache License to your work, attach the following
//      boilerplate notice, with the fields enclosed by brackets "{}"
//      replaced with your own identifying information. (Don't include
//      the brackets!)  The text should be enclosed in the appropriate
//      comment syntax for the file format. We also recommend that a
//      file or class name and description of purpose be included on the
//      same "printed page" as the copyright notice for easier
//      identification within third-party archives.
//
//   Copyright (c) 2017 Cisco
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

//Path: Cisco-IOS-XR-mpls-te-oper:mpls-te/attribute-sets/attribute-set

package cisco_ios_xr_mpls_te_oper.mpls_te.attribute_sets.attribute_set;

// TE Attribute Set
message mpls_te_attribute_set_KEYS {
    string attribute_set_type = 1;
    string attribute_set_name = 2;
}

message mpls_te_attribute_set {
    // Attribute Set Name
    string tunnel_attribute_set_name = 50;
    // Attribute Set name CRC32 value
    uint32 tunnel_attribute_set_name_crc32 = 51;
    // Union of Attribute Sets
    mpls_te_attribute_set_union attribute_set_union = 52;
}

// C-type-specific LSP FEC data
message te_lsp_fec_ctype_data_t {
    string fec_c_type = 1;
    // P2P LSP destination
    string p2_p_lsp_destination = 2;
    // P2MP ID
    uint32 fec_destination_p2_mp_id = 3;
}

// A LSP FEC
message te_lsp_fec_t {
    // LSP ID
    uint32 fec_lsp_id = 1;
    // Tunnel ID
    uint32 fec_tunnel_id = 2;
    // Extended tunnel ID
    string fec_extended_tunnel_id = 3;
    // Tunnel source address
    string fec_source = 4;
    // Destination or P2MP ID
    te_lsp_fec_ctype_data_t fec_destination_info = 5;
    // VRF; currently only for GMPLS tunnels
    string fec_vrf = 6;
}

// Affinity name constraints
message affinity_name_bag {
    // Constraint type
    uint32 constraint_type = 1;
    // Deprecated
    uint32 constraint_value = 2;
    // Deprecated
    uint32 forward_ref_value = 3;
    // Constraint value
    repeated uint32 constraint_extended_value = 4;
    // Reference bits for undefined affinity names
    repeated uint32 extended_forward_ref_value = 5;
}

// MPLS TE tunnel Affinity information
message mpls_te_tunnels_affinity_info {
    // The affinity bits (colors)
    uint32 affinity_bits = 1;
    // The affinity mask (colors)
    uint32 affinity_mask = 2;
    // Array of name based constratints currently applied to the tunnel
    repeated affinity_name_bag named_affinities = 3;
}

// XRO IPv4 sub-object
message te_xro_subobj_ipv4 {
    // IPv4 address
    string address = 1;
    // Prefix length
    uint32 prefix_len = 2;
    // Attribute
    string attribute = 3;
    // Exclusion Type
    string exclusion_type = 4;
}

// XRO IPv6 sub-object
message te_xro_subobj_ipv6 {
    // IPv6 address
    string address = 1;
    // Prefix length
    uint32 prefix_len = 2;
    // Attribute
    string attribute = 3;
    // Exclusion Type
    string exclusion_type = 4;
}

// XRO unnumbered sub-object
message te_xro_subobj_unnum {
    // TE router-id
    string te_router_id = 1;
    // Interface ID
    uint32 interface_id = 2;
    // Attribute
    string attribute = 3;
    // Exclusion Type
    string exclusion_type = 4;
}

// XRO AS sub-object
message te_xro_subobj_as {
    // Autonomous System number
    uint32 as_number = 1;
}

// XRO SRLG sub-object
message te_xro_subobj_srlg {
    // SRLG ID
    uint32 srlg_id = 1;
    // Exclusion Type
    string exclusion_type = 2;
}

// XRO point-to-point LSP sub-object
message te_xro_subobj_p2p_lsp {
    // LSP FEC
    te_lsp_fec_t fec = 1;
    // Flag to indicate whether or not the lsp-id in the FEC is to be ignored
    bool ignore_lsp_id = 2;
    // Processing-node exception flag
    bool processing_node_exception = 3;
    // Penultimate-node exception flag
    bool penultimate_node_exception = 4;
    // Destination-node exception flag
    bool destination_node_exception = 5;
    // Exclusion Type
    string exclusion_type = 6;
}

// XRO sub-object union
message te_xro_subobj {
    string type = 1;
    // IPv4 sub-object
    te_xro_subobj_ipv4 ipv4_subobject = 2;
    // IPv6 sub-object
    te_xro_subobj_ipv6 ipv6_subobject = 3;
    // Unnumbered sub-object
    te_xro_subobj_unnum unnumbered_subobject = 4;
    // AS sub-object
    te_xro_subobj_as as_subobject = 5;
    // SRLG sub-object
    te_xro_subobj_srlg srlg_subobject = 6;
    // P2P LSP sub-object
    te_xro_subobj_p2p_lsp lsp_subobject = 7;
}

// XRO object
message te_xro {
    // List of XRO sub-objects
    repeated te_xro_subobj xro_subobjects = 1;
    // Mutual Diversity Flag
    bool mutual_diversity_flag = 2;
}

// Revert Schedule protection attribute set
message te_revert_sch_t {
    // Schedule name identifier
    bytes schedulename = 1;
    // Schedule time for reversion
    uint32 schedule_date = 2;
    // Schedule frequency for reversion
    string schedule_frequency = 3;
    // Duration for scheduled reversion
    uint32 duration = 4;
    // Max tries for scheduled reversion
    uint32 max_tries = 5;
}

// TE Logging Attributes
message mpls_te_logging_attributes {
    // LSP State logging: TRUE - enabled, FALSE - disabled
    bool lsp_state = 1;
    // S2L State logging: TRUE - enabled, FALSE - disabled
    bool s2_l_state = 2;
    // LSP re-route logging: TRUE - enabled, FALSE - disabled
    bool lsp_re_route = 3;
    // LSP re-optimization logging: TRUE - enabled, FALSE - disabled
    bool lsp_re_opt = 4;
    // LSP insufficient bandwidth logging: TRUE - enabled, FALSE - disabled
    bool lsp_insufficient_bw = 5;
    // LSP bandwidth change logging: TRUE - enabled, FALSE - disabled
    bool lsp_bandwidth_change = 6;
    // LSP pcalc failure logging: TRUE - enabled, FALSE - disabled
    bool lsp_pcalc_failure_logging_enabled = 7;
    // All logging option: TRUE - enabled, FALSE - disabled
    bool all_logging_enabled = 8;
}

// TE Auto-mesh Attribute Set
message mpls_te_attribute_set_auto_mesh {
    // Bandwidth value in kbps
    uint32 configured_bandwidth = 1;
    // DSTE Class
    uint32 dste_class_type = 2;
    // Is bandwidth configured
    bool is_bandwidth_configured = 3;
    // Setup priority
    uint32 setup_priority = 4;
    // Hold priority
    uint32 hold_priority = 5;
    // Is priority configured
    bool is_priority_configured = 6;
    // deprecated
    uint32 policy_class = 7;
    // PBTS policy classes
    repeated uint32 policy_classes = 8;
    // Is policy class configured
    bool is_policyclass_configured = 9;
    // Forward class
    uint32 forward_class = 10;
    // Affinity
    mpls_te_tunnels_affinity_info affinity = 11;
    // Is affinity configured
    bool is_affinity_configured = 12;
    // Fast reroute
    bool fast_reroute = 13;
    // FRR Node protection
    bool frr_node_protection = 14;
    // FRR bandwidth protection
    bool frr_bandwidth_protection = 15;
    // Record route
    bool record_route = 16;
    // Auto bandwidth collect only
    bool auto_bandwidth_collect = 17;
    // Announce auto route to IGP
    bool auto_route_announce = 18;
    // Soft preemption is configured
    bool soft_preemption_configured = 19;
    // Logging attributes
    mpls_te_logging_attributes logging = 20;
    // IM bandwidth
    uint32 bandwidth = 21;
    // Load-Share
    uint32 load_share = 22;
    // Is Interface BW configured
    bool is_interface_bw_configured = 23;
    // Meshgroup ID
    repeated uint32 mesh_group_id = 24;
    // Tunnel ID
    repeated uint32 tunnel_id = 25;
}

// TE Protected Interface Name String
message mpls_te_protected_if_name_str {
    // Protected Interface Name
    string protected_interface = 1;
}

// Attribute set signalled name
message mpls_te_attribute_set_sig_name {
    // Signalled name
    string name = 1;
    // Source address or name
    string source_type = 2;
    // Protected interface address or name
    string protected_interface_type = 3;
    // MP address appended
    bool is_mp_addresses = 4;
}

// TE Auto-backup Attribute Set
message mpls_te_attribute_set_auto_backup {
    // Is signalled name configured
    bool is_signalled_name_configured = 1;
    // Signalled name
    mpls_te_attribute_set_sig_name signalled_name = 2;
    // Setup priority
    uint32 setup_priority = 3;
    // Hold priority
    uint32 hold_priority = 4;
    // Is priority configured
    bool is_priority_configured = 5;
    // deprecated
    uint32 policy_class = 6;
    // PBTS policy classes
    repeated uint32 policy_classes = 7;
    // Is policy class configured
    bool is_policyclass_configured = 8;
    // Affinity
    mpls_te_tunnels_affinity_info affinity = 9;
    // Is affinity configured
    bool is_affinity_configured = 10;
    // Record route
    bool record_route = 11;
    // Logging attributes
    mpls_te_logging_attributes logging = 12;
    // Array of Protected Interface Names
    repeated mpls_te_protected_if_name_str protected_interfaces = 13;
    // Tunnel ID
    repeated uint32 tunnel_id = 14;
}

// TE attribute set versioning info
message mpls_te_attribute_set_version {
    // Attribute Type
    string attribute_type = 1;
    // Generation
    uint32 generation = 2;
    // Is default
    bool is_default = 3;
}

// TE segment routing path list
message mpls_te_attribute_set_bfd_rev_path {
    // BFD reverse path type
    string path_type = 1;
    // BFD reverse path binding label
    uint32 binding_label = 2;
}

// TE Path Option Attribute Set
message mpls_te_attribute_set_path_option {
    // Bandwidth value in kbps
    uint32 configured_bandwidth = 1;
    // Cost limit on the tunnel path
    uint32 cost_limit = 2;
    // DSTE Class
    uint32 dste_class_type = 3;
    // The bandwidth type
    string bandwidth_type = 4;
    // Is bandwidth configured
    bool is_bandwidth_configured = 5;
    // Is Cost Limit configured
    bool is_cost_limit_configured = 6;
    // Affinity
    mpls_te_tunnels_affinity_info affinity = 7;
    // Is affinity configured
    bool is_affinity_configured = 8;
    // Tunnel ID
    repeated uint32 tunnel_id = 9;
    // Generation
    uint32 generation = 10;
    // Version Info
    repeated mpls_te_attribute_set_version version_info = 11;
    // Path invalidation interval on the tunnel path
    uint32 path_invalidation_timeout = 12;
    // Path invalidation action
    uint32 path_invalidation_action = 13;
    // Is path invalidation timeout configured
    bool is_path_invalidation_timeout_configured = 14;
    // Is path invalidation action configured
    bool is_path_invalidation_action_configured = 15;
    // Exclude list name
    string exclude_list_name = 16;
    // Is exclude list name configured
    bool is_exclude_list_name_configured = 17;
    // Is PCE Configured
    bool is_pce_configured = 18;
    // Is PCE Disjoint Path Source Configured
    bool is_pce_disj_source_configured = 19;
    // Is PCE Disjoint Path Type Configured
    bool is_pce_disj_type_configured = 20;
    // Is PCE Disjoint Path Group ID Configured
    bool is_pce_disj_group_id_configured = 21;
    // PCE Disjoint Path Source Address
    uint32 pcedp_source_address = 22;
    // PCE Disjoint Path Type
    string pcedp_type = 23;
    // PCE Disjoint Path Group ID
    uint32 pcedp_group_id = 24;
    // Is PCE Bidirectional Source Configured
    bool is_pceb_dj_source_configured = 25;
    // Is PCE Bidirectional Group ID Configured
    bool is_pcebd_group_id_configured = 26;
    // PCE Bidirectional Source Address
    uint32 pcebd_source_address = 27;
    // PCE Bidirectional Group ID
    uint32 pcebd_group_id = 28;
    // BFD reverse path
    mpls_te_attribute_set_bfd_rev_path bfd_reverse_path = 29;
    // Is BFD reverse path configured
    bool is_bfd_reverse_pat_configured = 30;
}

// TE XRO attribute set
message mpls_te_attribute_set_xro {
    // The XRO specified by this attribute-set
    te_xro xro = 1;
}

// TE P2MP-TE Attribute Set
message mpls_te_attribute_set_p2mp_te {
    // Fast reroute
    bool fast_reroute = 1;
    // FRR bandwidth protection
    bool frr_bandwidth_protection = 2;
    // Setup priority
    uint32 setup_priority = 3;
    // Hold priority
    uint32 hold_priority = 4;
    // Is priority configured
    bool is_priority_configured = 5;
    // Bandwidth value in kbps
    uint32 configured_bandwidth = 6;
    // DSTE Class
    uint32 dste_class_type = 7;
    // Is bandwidth configured
    bool is_bandwidth_configured = 8;
    // Tunnel ID
    repeated uint32 tunnel_id = 9;
    // Affinity
    mpls_te_tunnels_affinity_info affinity = 10;
    // Is affinity configured
    bool is_affinity_configured = 11;
}

// TE OTN path protection attribute set
message mpls_te_attribute_set_aps_pp {
    // Sub-network Connection Mode
    string snc_mode = 1;
    // Sub-network Connection Monitoring Mode
    uint32 tcm_id = 2;
    // Protection Type
    string protection_type = 3;
    // Protection Restoration Mode
    string protection_mode = 4;
    // Wait to restore time
    uint32 wait_to_restore_time = 5;
    // Hold-off time
    uint32 hold_off_time = 6;
    // Revert Schedule
    te_revert_sch_t revert_schedule = 7;
    // Path Protection Profile Type
    string path_prot_profile_type = 8;
    // Restoration Style
    string restoration_style = 9;
}

// TE segment routing prepend entry
message mpls_te_attribute_set_sr_prepend_entry {
    // Prepend Type
    string type = 1;
    // Prepend index
    uint32 index = 2;
    // Prepend next label
    uint32 next_label = 3;
}

// TE segment routing prepend list
message mpls_te_attribute_set_sr_prepend_list {
    // List of prepend entries
    repeated mpls_te_attribute_set_sr_prepend_entry prepend_entries = 1;
}

// TE P2P-TE Attribute Set
message mpls_te_attribute_set_p2p_te {
    // Tunnel ID
    repeated uint32 tunnel_id = 1;
    // Affinity
    mpls_te_tunnels_affinity_info affinity = 2;
    // Is affinity configured
    bool is_affinity_configured = 3;
    // Path selection segment-routing type
    string path_selection_segment_routing_adjacency_protection = 4;
    // Is path selection segment routing configured
    bool is_path_selection_segment_routing_adjacency_protection_configured = 5;
    // Path invalidation timeout on the tunnel path
    uint32 path_invalidation_timeout = 6;
    // Path invalidation action
    string path_selection_invalidation_action = 7;
    // Is Path Invalidation timeout configured
    bool is_path_invalidation_timeout_configured = 8;
    // Is Path Invalidation action configured
    bool is_path_invalidation_action_configured = 9;
    // Path selection metric type
    string path_selection_metric = 10;
    // Is path selection metric configured
    bool is_path_selection_metric_configured = 11;
    // Path selection margin
    uint32 path_selection_segment_routing_margin = 12;
    // Path selection margin is_relative
    bool is_path_selection_segment_routing_margin_relative = 13;
    // Is path selection margin configured
    bool is_path_selection_segment_routing_margin_configured = 14;
    // Is path selection segment limit configured
    uint32 path_selection_segment_routing_segment_limit = 15;
    // Is path selection segment limit configured
    bool is_path_selection_segment_routing_segment_limit_configured = 16;
    // Is any of the path selection parameters configured
    bool is_path_select_configured = 17;
    // Logging attributes
    mpls_te_logging_attributes logging = 18;
    // SR prepend list
    mpls_te_attribute_set_sr_prepend_list prepend_list = 19;
    // Is SR prepend list configured
    bool is_prepend_list_configured = 20;
    // Is PCE Configured
    bool is_pce_configured = 21;
    // Is PCE Disjoint Path Source Configured
    bool is_pce_disj_source_configured = 22;
    // Is PCE Disjoint Path Type Configured
    bool is_pce_disj_type_configured = 23;
    // Is PCE Disjoint Path Group ID Configured
    bool is_pce_disj_group_id_configured = 24;
    // PCE Disjoint Path Source Address
    uint32 pcedp_source_address = 25;
    // PCE Disjoint Path Type
    string pcedp_type = 26;
    // PCE Disjoint Path Group ID
    uint32 pcedp_group_id = 27;
    // Is PCE Bidirectional Source Configured
    bool is_pceb_dj_source_configured = 28;
    // Is PCE Bidirectional Group ID Configured
    bool is_pcebd_group_id_configured = 29;
    // PCE Bidirectional Source Address
    uint32 pcebd_source_address = 30;
    // PCE Bidirectional Group ID
    uint32 pcebd_group_id = 31;
}

// TE Attribute Set Union
message mpls_te_attribute_set_union {
    string tunnel_attribute_set_type = 1;
    // MPLS TE Path Option Attribute Set
    mpls_te_attribute_set_path_option attribute_set_path_option = 2;
    // MPLS TE Auto-backup Attribute Set
    mpls_te_attribute_set_auto_backup attribute_set_autobackup = 3;
    // MPLS TE Auto-mesh Attribute Set
    mpls_te_attribute_set_auto_mesh attribute_set_automesh = 4;
    // Attribute Set XRO
    mpls_te_attribute_set_xro attribute_set_xro = 5;
    // MPLS TE P2MP-TE Attribute Set
    mpls_te_attribute_set_p2mp_te attribute_set_p2_mpte = 6;
    // Attribute Set OTN APS Path Protection
    mpls_te_attribute_set_aps_pp attribute_set_aps_pp = 7;
    // MPLS TE P2P-TE Attribute Set
    mpls_te_attribute_set_p2p_te attribute_set_p2_p_te = 8;
}

