// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_te_oper.mpls_te.soft_preemption.statistics;

// Soft preemption stats 
message mpls_te_soft_preemption_stats_KEYS {
}

message mpls_te_soft_preemption_stats {
    // The timestamp when these stats are cleared relative to Jan 1, 1970
    uint32 last_cleared_timestamp = 50;
    // The number of soft preemption events triggered
    uint32 soft_preemption_events = 51;
    // The number of LSPs that have been soft preempted at this node
    uint32 soft_preempted_ls_ps = 52;
    // The number of LSPs that have been soft preempted and timed out at this node
    uint32 timed_out_soft_preempted_lsp_ss = 53;
    // The number of LSPs that have been soft preempted at this node and torn down before timing out
    uint32 torn_down_soft_preempted_ls_ps = 54;
    // The number of LSPs that have been soft preempted and then fast rerouted at this node
    uint32 frr_triggered_soft_preempted_lsp_ss = 55;
    // The minimum number of seconds an LSP remained in the soft preempted state
    uint32 minimum_time_in_soft_preempted_state = 56;
    // The maximum number of seconds an LSP remained in the soft preempted state without being hard preempted
    uint32 time_in_soft_preempted_state_max = 57;
    // The average number of seconds an LSP remained in the soft preempted state. This excludes the timed out LSPs
    uint32 time_in_soft_preempted_state_avg = 58;
    // Number of soft preempted LSPs at the headend. This is relevant to the headend
    uint32 soft_preempted_head_ls_ps = 59;
    // Number of soft preemption LSPs that are reoptimized. This is relevant to the headend
    uint32 reoptimized_soft_preempted_ls_ps = 60;
    // Number of soft preemption LSPs that are torn down instead of being reoptimized. This is relevant to the headend.
    // uint32 torndown_soft_preempted_ls_ps = 61;
    // Number of soft preemption LSPs that are replaced with the path protection LSP. This is relevant to the headend
    uint32 path_protected_switchover_soft_preempted_ls_ps = 62;
}

