// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_te_oper.mpls_te.segment_routing.sr_prefix_infos.sr_prefix_info;

// MPLS TE Segment-Routing Prefix information
message te_sr_prefix_KEYS {
    string protocol = 1;
    string igp_instance = 2;
    uint32 area = 3;
    string prefix = 4;
    uint32 prefix_length = 5;
}

message te_sr_prefix {
    // Prefix
    string prefix = 50;
    // Length of the prefix
    uint32 prefix_length = 51;
    // Segment-Routing prefix SID
    uint32 prefix_sid = 52;
    // Segment-Routing prefix Strict SID
    uint32 prefix_strict_sid = 53;
    // Segment-Routing paths to prefix
    repeated te_sr_path sr_paths = 54;
    // An IGP area where the prefix belongs to
    te_sr_igp_area igp_area = 55;
    // Advertizing nodes
    repeated node_id advertizing_nodes = 56;
    // Advertizing nodes for Strict SPF
    repeated node_id strict_advertizing_nodes = 57;
    // Prefix-SID subTLV R-flag
    bool flag_r = 58;
    // Prefix-SID subTLV N-flag
    bool flag_n = 59;
    // Prefix-SID subTLV P-flag
    bool flag_p = 60;
    // Prefix-SID subTLV E-flag
    bool flag_e = 61;
    // Prefix-SID subTLV V-flag
    bool flag_v = 62;
    // Prefix-SID subTLV L-flag
    bool flag_l = 63;
    // Prefix-SID subTLV P-flag for strict SID
    bool strict_flag_p = 64;
    // Prefix-SID subTLV E-flag for strict SID
    bool strict_flag_e = 65;
    // Prefix-SID subTLV V-flag for strict SID
    bool strict_flag_v = 66;
    // Prefix-SID subTLV L-flag for strict SID
    bool strict_flag_l = 67;
}

// A IGP area information for Segment-Routing
message te_sr_igp_area {
    // True if the Segment-Routing is enabled in this area
    bool segment_routing_enabled = 1;
    // True if the strict SPF is enabled in this area
    bool strict_spf_enabled = 2;
    // IGP type
    string igp_type = 3;
    // IGP Instance name
    string igp_instance = 4;
    // IGP Area ID
    uint32 igp_area = 5;
    // IGP-area format
    string igp_area_format = 6;
}

// Segment-Routing primary path
message te_sr_primary_path {
    // Outgoing Interface Name
    string outgoing_interface = 1;
    // Outgoing Label
    uint32 outgoing_label = 2;
    // Outgoing Label for Strict SPF
    uint32 outgoing_strict_label = 3;
    // Next hop
    string next_hop = 4;
    // Path Identifier
    uint32 path_id = 5;
    // Backup Path Identifier
    uint32 backup_path_id = 6;
}

// Segment-Routing backup path
message te_sr_backup_path {
    // Outgoing Interface Name
    string outgoing_interface = 1;
    // Outgoing Labels Stack
    repeated uint32 outgoing_labels_stack = 2;
    // Outgoing Labels Stack for Strict SPF
    repeated uint32 outgoing_strict_labels_stack = 3;
    // Next hop
    string next_hop = 4;
}

// Segment-Routing path
message te_sr_path {
    // Primary Segment-Routing Path
    te_sr_primary_path primary_path = 1;
    // Backup Segment-Routing Path
    te_sr_backup_path backup_path = 2;
    // Backup Path is available
    bool has_backup_path = 3;
}

message node_id {
    // Node Identifier
    string node_id = 1;
}

