// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_te_oper.mpls_te.segment_routing.sr_node_infos.sr_node_info;

// MPLS TE Segment-Routing Node topology information
message te_sr_node_KEYS {
    string protocol = 1;
    string igp_instance = 2;
    uint32 area = 3;
    string igp_node_id = 4;
}

message te_sr_node {
    // The local node's IGP id formatted as string
    string local_node_igp_id = 50;
    // IGP area which this node belongs to
    te_sr_igp_area igp_area = 51;
    // TRUE if this is a router node; FALSE if it's a network node
    bool topology_node_is_router = 52;
    // The local node's TE router-id
    string local_node_te_router_id = 53;
    // Flag to indicate whether this node is overloaded
    bool topology_node_overloaded = 54;
    // Segment-Routing Node information
    te_sr_node_info sr_node_info = 55;
    // This node's link information
    repeated te_sr_link_info node_links = 56;
}

// Information about the Shared Risk Link Group
message mpls_srlg_info {
    // SRLG number
    uint32 shared_risk_group = 1;
    // SRLG name
    string srlg_name = 2;
}

// A IGP area information for Segment-Routing
message te_sr_igp_area {
    // True if the Segment-Routing is enabled in this area
    bool segment_routing_enabled = 1;
    // True if the strict SPF is enabled in this area
    bool strict_spf_enabled = 2;
    // IGP type
    string igp_type = 3;
    // IGP Instance name
    string igp_instance = 4;
    // IGP Area ID
    uint32 igp_area = 5;
    // IGP-area format
    string igp_area_format = 6;
}

// A link's Segment-Routing Adjacency information
message te_sr_adj_sid {
    // The adjacency SID assigned for the topology node
    uint32 adjacency_sid = 1;
    // Link Type
    string link_type = 2;
    // Local Address
    string local_addr = 3;
    // Remote Address
    string remote_addr = 4;
    // The neighbor node's IGP ID
    string nbr_node_igpid = 5;
    // The neigbor node's TE router-id
    string nbr_node_te_router_id = 6;
    // IGP Flag F
    bool flag_f = 7;
    // IGP Flag B
    bool flag_b = 8;
    // IGP Flag V
    bool flag_v = 9;
    // IGP Flag L
    bool flag_l = 10;
    // IGP Flag S
    bool flag_s = 11;
}

// MPLS TE Node's Segment-Routing Information
message te_sr_node_info {
    // Segment-Routing Node-SID
    uint32 segment_id = 1;
    // Node-SID local absolute value
    uint32 segment_id_local_absolute_value = 2;
    // Segment-Routring global block start value
    uint32 srgb_start = 3;
    // Segment-Routing global block size
    uint32 srgb_size = 4;
}

// A link belonging to a node
message te_sr_link_info {
    // Link type
    string topology_link_type = 1;
    // Link's local interface address
    string topology_link_interface_address = 2;
    // Link's local interface ID
    uint32 topology_link_interface_id = 3;
    // Link's neighbor interface address
    string topology_link_neighbor_address = 4;
    // Link's neighbor interface ID
    uint32 topology_link_neighbor_id = 5;
    // System id of neighbor
    string topology_link_neighbor_system_id = 6;
    // Node id of neighbor
    uint32 topology_link_neighbor_node_id = 7;
    // Neighbor's link version counter
    uint32 topology_link_neighbor_generation = 8;
    // Neighbor's link version counter
    uint32 topology_link_fragment_id = 9;
    // The link's TE metric
    uint32 topology_link_te_metric = 10;
    // The link's IGP metric
    uint32 topology_link_igp_metric = 11;
    // The link's affinity bits (colors)
    repeated uint32 topology_link_extended_affinity_bits = 12;
    // The link's shared risk link groups
    repeated mpls_srlg_info shared_risk_link_groups = 13;
    // Adjacency SIDs assigned for adjacency nodes
    repeated te_sr_adj_sid adjacency_sids = 14;
}

