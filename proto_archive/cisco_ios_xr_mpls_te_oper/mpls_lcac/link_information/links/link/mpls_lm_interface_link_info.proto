//                                 Apache License
//                           Version 2.0, January 2004
//                        http://www.apache.org/licenses/
//
//   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
//
//   1. Definitions.
//
//      "License" shall mean the terms and conditions for use, reproduction,
//      and distribution as defined by Sections 1 through 9 of this document.
//
//      "Licensor" shall mean the copyright owner or entity authorized by
//      the copyright owner that is granting the License.
//
//      "Legal Entity" shall mean the union of the acting entity and all
//      other entities that control, are controlled by, or are under common
//      control with that entity. For the purposes of this definition,
//      "control" means (i) the power, direct or indirect, to cause the
//      direction or management of such entity, whether by contract or
//      otherwise, or (ii) ownership of fifty percent (50%) or more of the
//      outstanding shares, or (iii) beneficial ownership of such entity.
//
//      "You" (or "Your") shall mean an individual or Legal Entity
//      exercising permissions granted by this License.
//
//      "Source" form shall mean the preferred form for making modifications,
//      including but not limited to software source code, documentation
//      source, and configuration files.
//
//      "Object" form shall mean any form resulting from mechanical
//      transformation or translation of a Source form, including but
//      not limited to compiled object code, generated documentation,
//      and conversions to other media types.
//
//      "Work" shall mean the work of authorship, whether in Source or
//      Object form, made available under the License, as indicated by a
//      copyright notice that is included in or attached to the work
//      (an example is provided in the Appendix below).
//
//      "Derivative Works" shall mean any work, whether in Source or Object
//      form, that is based on (or derived from) the Work and for which the
//      editorial revisions, annotations, elaborations, or other modifications
//      represent, as a whole, an original work of authorship. For the purposes
//      of this License, Derivative Works shall not include works that remain
//      separable from, or merely link (or bind by name) to the interfaces of,
//      the Work and Derivative Works thereof.
//
//      "Contribution" shall mean any work of authorship, including
//      the original version of the Work and any modifications or additions
//      to that Work or Derivative Works thereof, that is intentionally
//      submitted to Licensor for inclusion in the Work by the copyright owner
//      or by an individual or Legal Entity authorized to submit on behalf of
//      the copyright owner. For the purposes of this definition, "submitted"
//      means any form of electronic, verbal, or written communication sent
//      to the Licensor or its representatives, including but not limited to
//      communication on electronic mailing lists, source code control systems,
//      and issue tracking systems that are managed by, or on behalf of, the
//      Licensor for the purpose of discussing and improving the Work, but
//      excluding communication that is conspicuously marked or otherwise
//      designated in writing by the copyright owner as "Not a Contribution."
//
//      "Contributor" shall mean Licensor and any individual or Legal Entity
//      on behalf of whom a Contribution has been received by Licensor and
//      subsequently incorporated within the Work.
//
//   2. Grant of Copyright License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      copyright license to reproduce, prepare Derivative Works of,
//      publicly display, publicly perform, sublicense, and distribute the
//      Work and such Derivative Works in Source or Object form.
//
//   3. Grant of Patent License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      (except as stated in this section) patent license to make, have made,
//      use, offer to sell, sell, import, and otherwise transfer the Work,
//      where such license applies only to those patent claims licensable
//      by such Contributor that are necessarily infringed by their
//      Contribution(s) alone or by combination of their Contribution(s)
//      with the Work to which such Contribution(s) was submitted. If You
//      institute patent litigation against any entity (including a
//      cross-claim or counterclaim in a lawsuit) alleging that the Work
//      or a Contribution incorporated within the Work constitutes direct
//      or contributory patent infringement, then any patent licenses
//      granted to You under this License for that Work shall terminate
//      as of the date such litigation is filed.
//
//   4. Redistribution. You may reproduce and distribute copies of the
//      Work or Derivative Works thereof in any medium, with or without
//      modifications, and in Source or Object form, provided that You
//      meet the following conditions:
//
//      (a) You must give any other recipients of the Work or
//          Derivative Works a copy of this License; and
//
//      (b) You must cause any modified files to carry prominent notices
//          stating that You changed the files; and
//
//      (c) You must retain, in the Source form of any Derivative Works
//          that You distribute, all copyright, patent, trademark, and
//          attribution notices from the Source form of the Work,
//          excluding those notices that do not pertain to any part of
//          the Derivative Works; and
//
//      (d) If the Work includes a "NOTICE" text file as part of its
//          distribution, then any Derivative Works that You distribute must
//          include a readable copy of the attribution notices contained
//          within such NOTICE file, excluding those notices that do not
//          pertain to any part of the Derivative Works, in at least one
//          of the following places: within a NOTICE text file distributed
//          as part of the Derivative Works; within the Source form or
//          documentation, if provided along with the Derivative Works; or,
//          within a display generated by the Derivative Works, if and
//          wherever such third-party notices normally appear. The contents
//          of the NOTICE file are for informational purposes only and
//          do not modify the License. You may add Your own attribution
//          notices within Derivative Works that You distribute, alongside
//          or as an addendum to the NOTICE text from the Work, provided
//          that such additional attribution notices cannot be construed
//          as modifying the License.
//
//      You may add Your own copyright statement to Your modifications and
//      may provide additional or different license terms and conditions
//      for use, reproduction, or distribution of Your modifications, or
//      for any such Derivative Works as a whole, provided Your use,
//      reproduction, and distribution of the Work otherwise complies with
//      the conditions stated in this License.
//
//   5. Submission of Contributions. Unless You explicitly state otherwise,
//      any Contribution intentionally submitted for inclusion in the Work
//      by You to the Licensor shall be under the terms and conditions of
//      this License, without any additional terms or conditions.
//      Notwithstanding the above, nothing herein shall supersede or modify
//      the terms of any separate license agreement you may have executed
//      with Licensor regarding such Contributions.
//
//   6. Trademarks. This License does not grant permission to use the trade
//      names, trademarks, service marks, or product names of the Licensor,
//      except as required for reasonable and customary use in describing the
//      origin of the Work and reproducing the content of the NOTICE file.
//
//   7. Disclaimer of Warranty. Unless required by applicable law or
//      agreed to in writing, Licensor provides the Work (and each
//      Contributor provides its Contributions) on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
//      implied, including, without limitation, any warranties or conditions
//      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
//      PARTICULAR PURPOSE. You are solely responsible for determining the
//      appropriateness of using or redistributing the Work and assume any
//      risks associated with Your exercise of permissions under this License.
//
//   8. Limitation of Liability. In no event and under no legal theory,
//      whether in tort (including negligence), contract, or otherwise,
//      unless required by applicable law (such as deliberate and grossly
//      negligent acts) or agreed to in writing, shall any Contributor be
//      liable to You for damages, including any direct, indirect, special,
//      incidental, or consequential damages of any character arising as a
//      result of this License or out of the use or inability to use the
//      Work (including but not limited to damages for loss of goodwill,
//      work stoppage, computer failure or malfunction, or any and all
//      other commercial damages or losses), even if such Contributor
//      has been advised of the possibility of such damages.
//
//   9. Accepting Warranty or Additional Liability. While redistributing
//      the Work or Derivative Works thereof, You may choose to offer,
//      and charge a fee for, acceptance of support, warranty, indemnity,
//      or other liability obligations and/or rights consistent with this
//      License. However, in accepting such obligations, You may act only
//      on Your own behalf and on Your sole responsibility, not on behalf
//      of any other Contributor, and only if You agree to indemnify,
//      defend, and hold each Contributor harmless for any liability
//      incurred by, or claims asserted against, such Contributor by reason
//      of your accepting any such warranty or additional liability.
//
//   END OF TERMS AND CONDITIONS
//
//   APPENDIX: How to apply the Apache License to your work.
//
//      To apply the Apache License to your work, attach the following
//      boilerplate notice, with the fields enclosed by brackets "{}"
//      replaced with your own identifying information. (Don't include
//      the brackets!)  The text should be enclosed in the appropriate
//      comment syntax for the file format. We also recommend that a
//      file or class name and description of purpose be included on the
//      same "printed page" as the copyright notice for easier
//      identification within third-party archives.
//
//   Copyright (c) 2017 Cisco
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

//Path: Cisco-IOS-XR-mpls-te-oper:mpls-lcac/link-information/links/link

package cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link;

// IGP and area information of a link
message mpls_lm_interface_link_info_KEYS {
    string interface_name = 1;
}

message mpls_lm_interface_link_info {
    // The link's common info
    mpls_lm_common_link_info link_common = 50;
    // Reason why link is not flooded (area-independent)
    string reason_not_flooded = 51;
    // The link's maximum reservable BW in RDM
    uint64 maximum_reservation_bandwidth_rdm = 52;
    // The link's reservable pool0 BW in RDM
    uint64 reservable_pool0_bandwidth_rdm = 53;
    // The link's reservable pool1 BW in RDM
    uint64 reservable_pool1_bandwidth_rdm = 54;
    // The link's maximum reservable BW in MAM
    uint64 maximum_reservation_bandwidth_mam = 55;
    // The link's reservable pool0 BW in MAM
    uint64 reservable_pool0_bandwidth_mam = 56;
    // The link's reservable pool1 BW in MAM
    uint64 reservable_pool1_bandwidth_mam = 57;
    // Bandwidth Account info
    mpls_lm_darkbw_link_info bandwidth_account = 58;
    // Deprecated
    uint32 link_attributes = 59;
    // The link's extended attribute bit map
    repeated uint32 link_extended_attributes = 60;
    // Reference bits for undefined affinity names
    repeated uint32 link_forwad_ref_value = 61;
    // Affinity map array
    repeated mpls_te_affinity_map_info affinity_map = 62;
    // TRUE if one or more affinity definition(s) is/are unknown
    bool is_attribute_incomplete = 63;
    // TRUE, if name based attribute style is in effect
    bool is_name_based_attribute = 64;
    // The link's TE metric
    uint32 te_metric = 65;
    // Flag to indicate whether the link's TE metric is a valid value
    bool is_te_metric_valid = 66;
    // Per-area data
    repeated mpls_lm_interface_link_area_info areas = 67;
    // Flex LSP Lockout info
    repeated mpls_lm_interface_lockout_info lockout = 68;
    // The link's NPU OOR info. This field is NULL for platforms that do not support HW-OOR notifications
    mpls_lm_interface_hw_oor_info hw_oor = 69;
}

// HASI ID Event
message hasi_id_event {
    // LocalID
    uint64 local_id = 1;
    // RemoteID
    uint64 remore_id = 2;
    // Time
    uint32 time = 3;
    // Count
    uint64 count = 4;
}

// HASI Slave Object ID events
message hasi_s_obj_id_events {
    // Create
    hasi_id_event create = 1;
    // Updates
    hasi_id_event updates = 2;
    // ApplicationSyncs
    hasi_id_event application_syncs = 3;
    // ApplicationNaks
    hasi_id_event application_naks = 4;
    // SummaryReplaySyncs
    hasi_id_event summary_replay_syncs = 5;
    // SummaryReplayNaks
    hasi_id_event summary_replay_naks = 6;
    // CacheNakRetries
    hasi_id_event cache_nak_retries = 7;
}

// HASI Slave Object Context
message hasi_s_object_ctx {
    // ObjectSyncID
    uint64 object_sync_id = 1;
    // ObjectType
    uint32 object_type = 2;
    // ObjectIdEvents
    hasi_s_obj_id_events object_id_events = 3;
}

// HASI Master Slave ID Events
message hasi_m_id_events {
    // ApplicationSyncs
    hasi_id_event application_syncs = 1;
    // ImplicitDeletes
    hasi_id_event implicit_deletes = 2;
    // ApplicationNaks
    hasi_id_event application_naks = 3;
    // SummaryReplaySyncs
    hasi_id_event summary_replay_syncs = 4;
    // SummaryReplayNaks
    hasi_id_event summary_replay_naks = 5;
}

// HASI Master Object Client Info
message hasi_m_object_slave_info {
    // SlaveId
    uint32 slave_id = 1;
    // IdEvents
    hasi_m_id_events id_events = 2;
}

// HASI Master Object Context
message hasi_m_object_ctx {
    // ObjectSyncID
    uint64 object_sync_id = 1;
    // ObjectType
    uint32 object_type = 2;
    // Queue
    uint32 queue = 3;
    // CreateID
    uint64 create_id = 4;
    // CreateTime
    uint32 create_time = 5;
    // UpdateTime
    uint32 update_time = 6;
    // DeleteTime
    uint32 delete_time = 7;
    // DeleteContextLength
    uint32 delete_ctx_lenght = 8;
    // SlaveInformation
    repeated hasi_m_object_slave_info slave_information = 9;
    // HasHistory
    bool has_history = 10;
    // PreActiveHistory
    hasi_s_obj_id_events pre_active_history = 11;
}

// Affinity Map
message mpls_te_affinity_map_info {
    // Affinity name
    string affinity_name = 1;
    // Affinity value
    uint32 affinity_value = 2;
    // EAG value
    repeated uint32 affinity_extended_value = 3;
    // Affinity bit position
    uint32 affinity_bit_position = 4;
    // Affinity table id
    string affinity_table_id = 5;
}

// Information about the Shared Risk Link Group
message mpls_srlg_info {
    // SRLG number
    uint32 shared_risk_group = 1;
    // SRLG name
    string srlg_name = 2;
}

// HW OOR statistics
message te_hw_oor_stats {
    // The HW-OOR state that these statistics belong to
    string hw_oor_state = 1;
    // Number of transitions to this state
    uint32 transitions = 2;
    // Number of times this OOR state disabled node protection assignment
    uint32 node_protection_disable_number = 3;
    // Number of LSPs that were rejected in this state
    uint32 rejected_ls_ps_number = 4;
    // Number of LSPs that were accepted in this state
    uint32 accepted_ls_ps_number = 5;
    // Number of Reoptimize LSPs that were accepted in this state
    uint32 accepted_reopt_ls_ps_number = 6;
    // Number of Reoptimize LSPs that were rejected in this state
    uint32 rejected_reopt_ls_ps_number = 7;
}

// Information about the Interface Switching Capability Descriptor (IXCD)
message mpls_lm_intf_switching_cap_info {
    // The switching capability descriptor key
    uint32 key = 1;
    // The switching capability
    uint32 switching_capability = 2;
    // The link encoding type
    uint32 encoding = 3;
}

// Link properties
message mpls_lm_link_flags {
    // Deprecated - TRUE if the link is a TE-Link
    bool is_mpls_te_on = 1;
    // Deprecated - Signaling agent
    string signaling_agent = 2;
    // TRUE if the link is admin up
    bool is_admin_up = 3;
}

// Information for the flooded area
message mpls_lm_flooded_area {
    // The flooded area information
    string flooded_area = 1;
}

// Information about a single RSVP-TE bandwidth accounting sample
message mpls_te_darkbw_sample_rsvp {
    // Timestamp in seconds of this sample
    uint32 timestamp = 1;
    // Total traffic rate measured in Kilobits per second in this sample
    uint64 total_rate = 2;
    // RSVP-TE traffic rate measured in Kilobits per second in this sample
    uint64 rsvp_te_rate = 3;
    // Non-RSVP-TE traffic rate measured in Kilobits per second in this sample
    uint64 non_rsvp_te_rate = 4;
}

// Information about a single Segment Routing bandwidth accounting sample
message mpls_te_darkbw_sample_sr {
    // Timestamp in seconds of this sample
    uint32 timestamp = 1;
    // Segment Routing traffic rate measured in Kilobits per second in this sample
    uint64 sr_rate = 2;
}

// RSVP-TE Bandwidth accounting history
message mpls_te_darkbw_history_rsvp {
    // RSVP-TE samples in the current application interval
    repeated mpls_te_darkbw_sample_rsvp rsvp_te_active_interval_samples = 1;
    // RSVP-TE samples in the previous application interval
    repeated mpls_te_darkbw_sample_rsvp rsvp_te_previous_interval_samples = 2;
}

// Segment Routing Bandwidth accounting history
message mpls_te_darkbw_history_sr {
    // Segment Routing samples in the current application interval
    repeated mpls_te_darkbw_sample_sr sr_active_interval_samples = 1;
    // Segment Routing samples in the previous application interval
    repeated mpls_te_darkbw_sample_sr sr_previous_interval_samples = 2;
}

// Information about RSVP-TE bandwidth utilization in bandwidth accounting
message mpls_te_darkbw_bw_util_rsvp {
    // Total bandwidth utilization measured in kilobits per second
    uint64 total_link_bandwidth_utilization = 1;
    // RSVP-TE bandwidth utilization measured in kilobits per second
    uint64 rsvp_te_bandwidth_utilization = 2;
    // Non-RSVP-TE bandwidth utilization measured in kilobits per second
    uint64 non_rsvp_te_bandwidth_utilization = 3;
    // Adjusted RSVP-TE bandwidth utilization measured in kilobits per second
    uint64 rsvp_te_adjusted_bandwidth_utilization = 4;
    // Enforced RSVP-TE bandwidth utilization measured in kilobits per second
    uint64 rsvp_te_enforced_bandwidth_utilization = 5;
}

// Information about Segment Routing bandwidth utilization in bandwidth accounting
message mpls_te_darkbw_bw_util_sr {
    // Segment Routing bandwidth utilization measured in kilobits per second
    uint64 sr_bandwidth_utilization = 1;
    // Adjusted Segment Routing bandwidth utilization measured in kilobits per second
    uint64 sr_adjusted_bandwidth_utilization = 2;
    // Enforced Segment Routing bandwidth utilization measured in kilobits per second
    uint64 sr_enforced_bandwidth_utilization = 3;
}

// Information for bandwidth accounting per link
message mpls_lm_darkbw_link_common_info {
    // TRUE if bandwidth accounting is enabled
    bool is_bandwidth_account_enabled = 1;
    // TRUE if bandwidth accounting application is enforced
    bool application_enforced = 2;
    // The type of traffic collected for bandwidth accounting
    string collection_type = 3;
    // Sampling interval in seconds for bandwidth accounting stats
    uint32 sample_interval = 4;
    // This value indicates the number of seconds until the next sampling
    uint32 sample_time_remaining = 5;
    // Timestamp for the last sample collection
    uint32 last_sample_collection_timestamp = 6;
    // Timestamp for the next sample collection
    uint32 next_sample_collection = 7;
    // Application interval in seconds for bandwidth accounting stats
    uint32 application_interval = 8;
    // This value indicates the number of seconds until the next application
    uint32 application_time_remaining = 9;
    // Timestamp for the last application
    uint32 last_application_timestamp = 10;
    // RSVP-TE Bandwidth utilization information
    mpls_te_darkbw_bw_util_rsvp rsvp_te_bandwidth_utilization = 11;
    // Segment Routing Bandwidth utilization information
    mpls_te_darkbw_bw_util_sr sr_bandwidth_utilization = 12;
    // Timestamp for the next application
    uint32 next_application = 13;
    // This value indicates the adjustment factor applied to measured non RSVP-TE bandwidth
    uint32 adjustment_factor = 14;
    // TRUE if the maximum reservable bandwidth flooding thresholds are default
    bool max_reservable_bandwidth_threshold_are_default = 15;
    // The up threshold for flooding the maximum reservable bandwidth
    uint32 up_threshold_max_reservable_bandwidth = 16;
    // The down threshold for flooding the maximum reservable bandwidth
    uint32 down_threshold_max_reservable_bandwidth = 17;
}

// Detail information for bandwidth accounting per link
message mpls_lm_darkbw_link_info {
    // Common info for bandwidth accounting
    mpls_lm_darkbw_link_common_info bandwidth_account_common_info = 1;
    // RSVP-TE Bandwidth samples history
    mpls_te_darkbw_history_rsvp rsvp_te_bandwidth_sample_history = 2;
    // Segment Routing Bandwidth samples history
    mpls_te_darkbw_history_sr sr_bandwidth_sample_history = 3;
}

// Link information
message mpls_lm_common_link_info {
    // The link's id
    string link_id = 1;
    // The link's ip address
    string link_address = 2;
    // TRUE if the link is unnumbered
    bool is_unnumbered = 3;
    // TRUE if the link is protected
    bool has_protection = 4;
    // The link's protection capability
    uint32 capability = 5;
    // The link's working priority
    uint32 working_priority = 6;
    // The link's shared risk link groups
    repeated mpls_srlg_info shared_risk_link_groups = 7;
    // The link's switching capability descriptor
    repeated mpls_lm_intf_switching_cap_info interface_switching_capability_descriptor = 8;
    // The link's resource provider
    string resource_provider = 9;
    // TRUE if the resource provider is installed
    bool is_resource_provider_installed = 10;
    // The bandwidth units
    string bandwidth_units = 11;
    // The link's physical bandwidth
    uint64 physical_bandwidth = 12;
    // Bandwidth Constraints Model ID
    uint32 bcm_id = 13;
    // The link's maximum reservable BW
    uint64 maximum_reservable_bandwidth = 14;
    // Last flooded max reservable bandwidth effective
    uint64 last_flooded_effective_maximum_reservable_bandwidth = 15;
    // Incoming reserved BW in %
    uint32 incoming_reservable_bandwidth_percentage = 16;
    // Outgoing reserved BW in %
    uint32 outgoing_reservable_bandwidth_percentage = 17;
    // The link's maximum reservable pool0 BW
    uint64 maximum_reservable_pool0_bandwidth = 18;
    // Incoming reserved pool0 BW in %
    uint32 incoming_reservable_pool0_bandwidth_percentage = 19;
    // Outgoing reserved pool0 BW in %
    uint32 outgoing_reservable_pool0_bandwidth_percentage = 20;
    // The link's maximum reservable pool1 BW
    uint64 maximum_reservable_pool1_bandwidth = 21;
    // Incoming reserved pool1 BW in %
    uint32 incoming_reservable_pool1_bandwidth_percentage = 22;
    // Outgoing reserved pool1 BW in %
    uint32 outgoing_reservable_pool1_bandwidth_percentage = 23;
    // The link's flags
    mpls_lm_link_flags link_flags = 24;
    // Deprecated
    string inbound_admission_method = 25;
    // Deprecated
    string outbound_admission_method = 26;
    // The link's neighbor count
    uint32 igp_neighbors = 27;
    // List of areas into which the link is flooded
    repeated mpls_lm_flooded_area flooded_areas = 28;
}

// Information about an area to which the link belongs
message mpls_lm_interface_link_area_info {
    // Area id
    string area_id = 1;
    // The interface neighbor id
    string neighbor_id = 2;
    // The interface's neighbor's ip address
    string neighbor_address = 3;
    // TRUE if the neighbor is up
    bool is_neighbor_up = 4;
    // The link's IGP metric
    uint32 igp_metric = 5;
}

// Information about flex LSP lockout info for the link
message mpls_lm_interface_lockout_info {
    // True if link is locked out
    bool is_lockout = 1;
    // Timestamp when the lockout is set
    uint32 lockout_on_timestamp = 2;
    // Timestamp when the lockout is cleared
    uint32 lockout_off_timestamp = 3;
}

// Information about NPU Resources state for the link
message mpls_lm_interface_hw_oor_info {
    // The NPU (Network Processor Unit) HW resource state
    string hw_oor_state = 1;
    // Timestamp when the OOR state last changed
    uint32 hw_oor_timestamp = 2;
    // Time Remaining in Green Recovery State (seconds)
    uint32 hw_oor_green_recovery_time = 3;
    // HW OOR statistics for the link
    repeated te_hw_oor_stats hw_oor_link_statistics = 4;
}

