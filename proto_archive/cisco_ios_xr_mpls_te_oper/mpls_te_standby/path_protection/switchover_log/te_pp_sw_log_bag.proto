// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_te_oper.mpls_te_standby.path_protection.switchover_log;

// The full log of the path protection switchover events
message te_pp_sw_log_bag_KEYS {
}

message te_pp_sw_log_bag {
    // Total number of path protection switchover events. This could be more than the entries in the array
    uint32 path_protection_switchovers = 50;
    // The maximum delay for a switchover in milliseconds
    uint32 maximum_switchover_millisec = 51;
    // The average delay for a switchover in milliseconds
    uint32 average_switchover_millisec = 52;
    // The array of path protection switchover entries
    repeated te_pp_sw_log_entry_bag path_protection_switchover_entries = 53;
}

// HASI ID Event
message hasi_id_event {
    // LocalID
    uint64 local_id = 1;
    // RemoteID
    uint64 remore_id = 2;
    // Time
    uint32 time = 3;
    // Count
    uint64 count = 4;
}

// HASI Slave Object ID events
message hasi_s_obj_id_events {
    // Create
    hasi_id_event create = 1;
    // Updates
    hasi_id_event updates = 2;
    // ApplicationSyncs
    hasi_id_event application_syncs = 3;
    // ApplicationNaks
    hasi_id_event application_naks = 4;
    // SummaryReplaySyncs
    hasi_id_event summary_replay_syncs = 5;
    // SummaryReplayNaks
    hasi_id_event summary_replay_naks = 6;
    // CacheNakRetries
    hasi_id_event cache_nak_retries = 7;
}

// HASI Slave Object Context
message hasi_s_object_ctx {
    // ObjectSyncID
    uint64 object_sync_id = 1;
    // ObjectType
    uint32 object_type = 2;
    // ObjectIdEvents
    hasi_s_obj_id_events object_id_events = 3;
}

// HASI Master Slave ID Events
message hasi_m_id_events {
    // ApplicationSyncs
    hasi_id_event application_syncs = 1;
    // ImplicitDeletes
    hasi_id_event implicit_deletes = 2;
    // ApplicationNaks
    hasi_id_event application_naks = 3;
    // SummaryReplaySyncs
    hasi_id_event summary_replay_syncs = 4;
    // SummaryReplayNaks
    hasi_id_event summary_replay_naks = 5;
}

// HASI Master Object Client Info
message hasi_m_object_slave_info {
    // SlaveId
    uint32 slave_id = 1;
    // IdEvents
    hasi_m_id_events id_events = 2;
}

// HASI Master Object Context
message hasi_m_object_ctx {
    // ObjectSyncID
    uint64 object_sync_id = 1;
    // ObjectType
    uint32 object_type = 2;
    // Queue
    uint32 queue = 3;
    // CreateID
    uint64 create_id = 4;
    // CreateTime
    uint32 create_time = 5;
    // UpdateTime
    uint32 update_time = 6;
    // DeleteTime
    uint32 delete_time = 7;
    // DeleteContextLength
    uint32 delete_ctx_lenght = 8;
    // SlaveInformation
    repeated hasi_m_object_slave_info slave_information = 9;
    // HasHistory
    bool has_history = 10;
    // PreActiveHistory
    hasi_s_obj_id_events pre_active_history = 11;
}

// Path protection log entry
message te_pp_sw_log_entry_bag {
    // The index number of the path protection switch over event
    uint32 path_protection_switchover_event_index = 1;
    // The ID of the tunnel that experienced switchover
    uint32 path_protection_tunnel_id = 2;
    // The LSP ID from which the traffic was switched over
    uint32 from_lsp_id = 3;
    // The LSP ID to which the traffic was switched over
    uint32 to_lsp_id = 4;
    // The date when the error that caused the switchover was detected. This date is the number of seconds since Jan 1st 1970
    uint32 date_of_error_detection = 5;
    // The milliseconds offset of the date when the error that caused  the switchover was detected.
    uint32 date_of_error_detection_millisec = 6;
    // The time in milliseconds between the detection of the error and switching the traffic
    uint32 switchover_duration_millisec = 7;
    // The reason that caused the path protection switchover
    string path_protection_switchover_reason = 8;
}

