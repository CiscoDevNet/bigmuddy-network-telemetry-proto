// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_te_oper.mpls_te_standby.igp_area_briefs.igp_area_brief;

// An IGP instance
message te_sh_igp_KEYS {
    string protocol = 1;
    string process_tag = 2;
}

message te_sh_igp {
    // IGP type
    string igp_type = 50;
    //  The IGP instance name
    string instance_name = 51;
    //  The IGP instance's system/router-id; interpret appropriately depending on IGP type
    string igp_system_id = 52;
    // Configured TE router-id
    string configured_te_router_id = 53;
    // Global router-id
    string global_router_id = 54;
    // Secondary router-ids
    repeated bytes secondary_router_id = 55;
    // Global router-id for GMPLS (optical TE)
    string globall_router_id_optical = 56;
    // TE router-id in use
    string in_use_te_router_id = 57;
    // Flag to indicate whether the IGP connection is open or not
    bool is_connection_up = 58;
    // Number of times IGP connection has gone up
    uint32 connection_up_count = 59;
    // Number of times IGP connection has gone down
    uint32 connection_down_count = 60;
    // IGP area information
    repeated te_sh_igp_area area_list = 61;
}

// Statistics for an IGP-area
message te_sh_igp_area_stats {
    // Number of adjacency request messages sent
    uint32 area_adjacency_request_messages = 1;
    // Number of adjacency announcement messages received
    uint32 area_adjacency_announce_messages = 2;
    // Number of local LSA floods sent
    uint32 area_flood_messages = 3;
    // Number of LSA announcement messages received
    uint32 area_lsa_announce_messages = 4;
    // Number of LSA fragment announcement messages received
    uint32 area_lsa_fragment_announce_messages = 5;
    // Number of LSA delete messages received
    uint32 area_lsa_delete_messages = 6;
    // Number of LSA fragment delete messages received
    uint32 area_lsa_fragment_delete_messages = 7;
    // Number of tunnel announcement messages sent
    uint32 area_tunnel_announce_messages = 8;
}

// Data relating to an active IGP area
message te_sh_igp_area_active {
    // Number of interfaces running over this area
    uint32 interfaces_count = 1;
    // Flag to indicate IDT for link adjacencies was received
    bool link_idt_received = 2;
    // Flag to indicate IDT topology was received
    bool topology_idt_received = 3;
    // Flag to indicate if the area is SR strict
    bool sr_strict = 4;
    // Number of p2p tunnel heads whose path was calculated over this area
    uint32 p2_p_heads_count = 5;
    // Number of p2p tunnel heads which have been autoroute-announced into this area
    uint32 p2_p_autoroute_announced_count = 6;
    // Number of p2p tunnel heads which have been announced as forwarding adjacencies in this area
    uint32 p2_p_forwarding_adjacency_count = 7;
    // Number of P2MP destinations whose path was calculated over this area
    uint32 p2_mp_destination_count = 8;
    // Number of tunnels with a loose hop ERO expanded in this area
    uint32 tunnel_loose_hops = 9;
    // Area communication statistics
    te_sh_igp_area_stats area_statistics = 10;
}

// An IGP area
message te_sh_igp_area {
    // Internal area index
    uint32 area_index = 1;
    // Area number
    uint32 area_number = 2;
    // IGP Area Format
    string area_format = 3;
    // Indicates whether or not the area is correctly configured under the IGP submode to run TE
    bool is_config_ready = 4;
    // Data which applies only to an active area
    te_sh_igp_area_active active_data = 5;
}

