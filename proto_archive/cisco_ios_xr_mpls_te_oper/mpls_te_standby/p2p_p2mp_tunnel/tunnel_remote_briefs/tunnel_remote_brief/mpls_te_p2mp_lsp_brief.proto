// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_te_oper.mpls_te_standby.p2p_p2mp_tunnel.tunnel_remote_briefs.tunnel_remote_brief;

// A P2MP LSP
message mpls_te_p2mp_lsp_brief_KEYS {
    uint32 lsp_id = 1;
    uint32 tunnel_id = 2;
    string extended_tunnel_id = 3;
    string source_address = 4;
    string c_type = 5;
    string destination_address = 6;
    uint32 p2_mp_id = 7;
}

message mpls_te_p2mp_lsp_brief {
    // Signaled Name
    string signaled_name = 50;
    // FEC for the LSP
    te_lsp_fec_t lsp_fec = 51;
    // array of S2L structures
    repeated mpls_te_p2mp_s2l_brief s2_l_list = 52;
    // Time in seconds since the LSP was up
    uint32 uptime = 53;
}

// A sub-LSP FEC
message te_s2l_fec_t {
    // sub-LSP subgroup ID
    uint32 s2_l_fec_subgroup_id = 1;
    // LSP ID
    uint32 s2_l_fec_lsp_id = 2;
    // Tunnel ID
    uint32 s2_l_fec_tunnel_id = 3;
    // Extended tunnel ID
    string s2_l_fec_extended_tunnel_id = 4;
    // LSP source address
    string s2_l_fec_source = 5;
    // sub-LSP destination address
    string s2_l_fec_dest = 6;
    // P2MP ID
    uint32 s2_l_fec_p2_mp_id = 7;
    // Subgroup Originator
    string s2_l_fec_subgroup_originator = 8;
    // Session identifier (ctype)
    string s2_l_fec_c_type = 9;
    // VRF; currently only for GMPLS tunnels
    string s2_l_fec_vrf = 10;
}

// C-type-specific LSP FEC data
message te_lsp_fec_ctype_data_t {
    string fec_c_type = 1;
    // P2P LSP destination
    string p2_p_lsp_destination = 2;
    // P2MP ID
    uint32 fec_destination_p2_mp_id = 3;
}

// A LSP FEC
message te_lsp_fec_t {
    // LSP ID
    uint32 fec_lsp_id = 1;
    // Tunnel ID
    uint32 fec_tunnel_id = 2;
    // Extended tunnel ID
    string fec_extended_tunnel_id = 3;
    // Tunnel source address
    string fec_source = 4;
    // Destination or P2MP ID
    te_lsp_fec_ctype_data_t fec_destination_info = 5;
    // VRF; currently only for GMPLS tunnels
    string fec_vrf = 6;
}

// A P2MP S2L
message mpls_te_p2mp_s2l_brief {
    // FEC for the S2L
    te_s2l_fec_t s2_l_fec = 1;
    // Time in seconds since the S2L was up
    uint32 uptime = 2;
    // Egress Interface
    string egress_interface = 3;
    // Ingress Interface
    string ingress_interface = 4;
    // Role of S2L
    string role = 5;
    // Oper state of S2L
    bool oper_state = 6;
}

