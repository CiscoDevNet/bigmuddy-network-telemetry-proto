// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_te_oper.mpls_te_standby.p2mp.tunnel_rewrites.tunnel_rewrite;

// LMRIB S2L Tunnel rewrite
message mpls_te_s2l_tun_rw_bag_KEYS {
    uint32 tunnel_id = 1;
    uint32 lsp_id = 2;
    string c_type = 3;
}

message mpls_te_s2l_tun_rw_bag {
    // Tunnel interface name
    string tunnel_interface = 50;
    // Tunnel signaled-name
    string tunnel_signal_name = 51;
    // Successful rewrite details
    te_s2l_tun_rw_fields_bag successful_rewrite = 52;
    // Failed rewrite details
    te_s2l_tun_rw_fields_bag failed_rewrite = 53;
    // Pending rewrite details
    te_s2l_tun_rw_fields_bag pending_rewrite = 54;
    // TRUE if the s2l path is Segment-Routing
    bool is_segment_routing = 55;
}

// Output rewrite tunnel information
message te_s2l_output_rw_output_info_bag {
    // Physical interface associated with the entry
    string physica_interface_name = 1;
    // Interface handle of the associated tunnel
    string tunnel_interface_name = 2;
    // Interface name of the parent intf
    string parent_interface_name = 3;
    // Next hop address associated with the entry
    string next_hop_address = 4;
    // Output label associated with the entry
    uint32 out_label = 5;
    // Segment-Routing labels stack
    repeated uint32 sr_label_stack = 6;
}

// LSD Tunnel rewrite fields
message te_s2l_tun_rw_fields_p2p_bag {
    // Local label of the tunnel rewrite
    uint32 local_label = 1;
    // Tunnel ID for this rewrite data
    uint32 tunnel_id = 2;
    // source address of the tunnel
    string source_pe = 3;
    // Destination
    string destination_address = 4;
    // Extended Tunnel ID
    string extended_tunnel_id = 5;
    // Properties of the primary S2L of tunnel rewrite
    te_s2l_output_rw_output_info_bag primary_s2_l = 6;
    // Properties of the S2L's backup for tunnel rewrite
    te_s2l_output_rw_output_info_bag backup_tunnel_rewrite = 7;
    // FRR is active on the backup tunnel
    bool backup_active = 8;
    // Input interface of the S2Ls
    string original_input_interface = 9;
    // Previous hop
    string previous_hop_address = 10;
    // The output interface of the S2Ls
    string output_interface_name = 11;
    // Backup tunnel name
    string backup_tunnel_name = 12;
}

// LMRIB Tunnel rewrite fields
message te_s2l_tun_rw_fields_p2mp_bag {
    // Local Label
    uint32 local_label = 1;
}

// C-type-specific LSP FEC data
message te_s2l_tun_rw_field_ctype_bag {
    string fec_c_type = 1;
    // Tunnel rewrite data specific to P2P
    te_s2l_tun_rw_fields_p2p_bag p2_p_tunnel_rewrite = 2;
    // Tunnel rewrite data specific to P2MP
    te_s2l_tun_rw_fields_p2mp_bag p2_mp_tunnel_rewrite = 3;
}

// LMRIB S2L Tunnel rewrite fields
message te_s2l_tun_rw_fields_bag {
    // Time stamp of the entry
    uint32 timestamp = 1;
    // Union of p2p and p2mp tun rewrite data
    te_s2l_tun_rw_field_ctype_bag tunnel_rewrite = 2;
}

