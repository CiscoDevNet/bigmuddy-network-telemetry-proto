// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_te_oper.mpls_te_standby.auto_tunnel.backup.summary;

// Autotunnel backup summary information
message mpls_te_autotun_backup_summary_info_KEYS {
}

message mpls_te_autotun_backup_summary_info {
    // Total number of autobackup tunnels
    uint32 autobackups = 50;
    // Total number of autobackup tunnels that are up
    uint32 up_autobackups = 51;
    // Total number of autobackup tunnels that are down
    uint32 down_autobackups = 52;
    // Total number of autobackup tunnels that are unused
    uint32 unused_autobackups = 53;
    // Total number of autobackup tunnels that are NHOP
    uint32 next_hop_autobackups = 54;
    // Total number of autobackup tunnels that are NNHOP
    uint32 next_next_hop_autobackups = 55;
    // Total number of autobackup tunnels that are using SRLG strict
    uint32 srlg_strict_autobackups = 56;
    // Total number of autobackup tunnels that are using SRLG preferred
    uint32 srlg_preferred_autobackups = 57;
    // Total number of autobackup tunnels that are using weighted SRLG
    uint32 srlg_weighted_autobackups = 58;
    // Total number of autobackup protected LSPs with NHOP and no SRLG
    uint32 next_hop_autobackup_protected_ls_ps = 59;
    // Total number of autobackup protected LSPs with NNHOP and no SRLG
    uint32 next_next_hop_autobackup_protected_ls_ps = 60;
    // Total number of autobackup protected LSPs with NHOP and SRLG
    uint32 next_hop_srlg_autobackup_protected_ls_ps = 61;
    // Total number of autobackup protected LSPs with NNHOP and SRLG
    uint32 next_next_hop_srlg_autobackup_protected_ls_ps = 62;
    // Total number of autobackup protected S2L Families with NHOP and no SRLG
    uint32 next_hop_autobackup_protected_s2_l_families = 63;
    // Total number of autobackup protected S2L Families with NNHOP and no SRLG
    uint32 next_next_hop_autobackup_protected_s2_l_families = 64;
    // Total number of autobackup protected S2L Families with NHOP and SRLG
    uint32 next_hop_srlg_autobackup_protected_s2_l_families = 65;
    // Total number of autobackup protected S2L Families with NNHOP and SRLG
    uint32 next_next_hop_srlg_autobackup_protected_s2_l_families = 66;
    // Total number of autobackup protected S2Ls with NHOP and no SRLG
    uint32 next_hop_autobackup_protected_s2_ls = 67;
    // Total number of autobackup protected S2Ls with NNHOP and no SRLG
    uint32 next_next_hop_autobackup_protected_s2_ls = 68;
    // Total number of autobackup protected S2Ls with NHOP and SRLG
    uint32 next_hop_srlg_autobackup_protected_s2_ls = 69;
    // Total number of autobackup protected S2Ls with NNHOP and SRLG
    uint32 next_next_hop_srlg_autobackup_protected_s2_ls = 70;
}

