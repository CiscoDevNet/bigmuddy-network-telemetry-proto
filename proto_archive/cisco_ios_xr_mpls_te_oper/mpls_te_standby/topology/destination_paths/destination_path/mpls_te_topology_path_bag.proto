// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology.destination_paths.destination_path;

// MPLS TE Topology Path Information
message mpls_te_topology_path_bag_KEYS {
    string destination_address = 1;
    uint32 affinity_bits = 2;
    uint32 affinity_mask = 3;
    uint32 setup_priority = 4;
    uint32 hold_priority = 5;
    uint32 bandwidth = 6;
    string igp_type = 7;
    string igp_instance = 8;
    uint32 igp_area = 9;
    uint32 hop_limit = 10;
    string exclude_srlgip_address = 11;
    string path_type = 12;
    uint32 path_id = 13;
    string path_name = 14;
    uint32 cost_limit = 15;
}

message mpls_te_topology_path_bag {
    // The tunnel ID to which this path belong
    uint32 tunnel_id = 50;
    // The path's destination
    string destination_address = 51;
    // TRUE if path is partial
    bool is_partial_path = 52;
    // TRUE if path is full
    bool is_full_path = 53;
    // TRUE if checking the topology is enabled
    bool is_topology_checked = 54;
    // TRUE if checking the Segment-Routing DB is enabled
    bool is_segment_routing_db_checked = 55;
    // The path's requested bandwidth
    uint64 requested_bandwidth = 56;
    // The path's bandwidth type
    uint64 bandwidth_type = 57;
    // The path's minimum bandwidth
    uint64 mininum_bandwidth = 58;
    // The path's accumulated admin weight
    uint64 accumulated_admin_weight = 59;
    // The path's setup priority
    uint32 setup_priority = 60;
    // The path's hold priority
    uint32 hold_priority = 61;
    // Path hop count
    uint32 node_hop_count = 62;
    // Affinity
    mpls_te_tunnels_affinity_info affinity = 63;
    // The Exclude SRLG IP Addr
    string exclude_srlg_address = 64;
    // The path's excluded srlg groups
    repeated mpls_srlg_info shared_risk_link_groups = 65;
    // The path's array of hops
    repeated bytes hop_list = 66;
    // The path's array of Segment-Routing segments
    repeated te_s2l_sr_path_hop sr_segment_list = 67;
}

// Affinity name constraints
message affinity_name_bag {
    // Constraint type
    uint32 constraint_type = 1;
    // Deprecated
    uint32 constraint_value = 2;
    // Deprecated
    uint32 forward_ref_value = 3;
    // Constraint value
    repeated uint32 constraint_extended_value = 4;
    // Reference bits for undefined affinity names
    repeated uint32 extended_forward_ref_value = 5;
}

// MPLS TE tunnel Affinity information
message mpls_te_tunnels_affinity_info {
    // The affinity bits (colors)
    uint32 affinity_bits = 1;
    // The affinity mask (colors)
    uint32 affinity_mask = 2;
    // Array of name based constratints currently applied to the tunnel
    repeated affinity_name_bag named_affinities = 3;
}

// Information about the Shared Risk Link Group
message mpls_srlg_info {
    // SRLG number
    uint32 shared_risk_group = 1;
    // SRLG name
    string srlg_name = 2;
}

// TE Segment-Routing S2L path hop
message te_s2l_sr_path_hop {
    // Type of the SID
    string sid_type = 1;
    // Node has IP addresses specified
    bool has_ip_addresses = 2;
    // Local IP address of adjacency or Node ID
    string local_addr = 3;
    // Remote IP address of adjacency
    string remote_addr = 4;
    // Hop has MPLS label specified
    bool has_mpls_label = 5;
    // The MPLS label value
    uint32 mpls_label_value = 6;
    // Hop has EL specified
    bool has_entropy_label = 7;
}

