// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_te_oper.mpls_te_standby.signalling_counters.head_signalling_counters.head_signalling_counter;

// MPLS TE VIF Statistics
message te_stats_bag_vif_t_KEYS {
    string c_type = 1;
    uint32 tunnel_id = 2;
}

message te_stats_bag_vif_t {
    // Tunnel Name
    string tunnel_name = 50;
    // Tunnel Signalled-Name
    string tunnel_sig_name = 51;
    // LSP ID
    uint32 lsp_id = 52;
    // VIF stats
    te_stats_sig_t statistics = 53;
    // List of Destination Stats
    repeated te_stats_bag_dest_t destination_statistics = 54;
}

// Send-Recv count for TE Signaling
message te_stats_sig_t {
    // Unknown TX events
    uint32 tx_event_unknown = 1;
    // TX Path Create event
    uint32 tx_path_create_event = 2;
    // TX Path Change event
    uint32 tx_path_change_event = 3;
    // TX Path Delete event
    uint32 tx_path_delete_event = 4;
    // TX Path Error event
    uint32 tx_path_error_event = 5;
    // TX Resv Create event
    uint32 tx_resv_create_event = 6;
    // TX Resv Change event
    uint32 tx_resv_change_event = 7;
    // TX Resv Delete event
    uint32 tx_resv_delete_event = 8;
    // TX Resv Error event
    uint32 tx_resv_error_event = 9;
    // TX Path Reeval Query event
    uint32 tx_path_reeval_query_event = 10;
    // RX Unknown events
    uint32 rx_event_unknown = 11;
    // RX Path Create event
    uint32 rx_path_create_event = 12;
    // RX Path Change event
    uint32 rx_path_change_event = 13;
    // RX Path Delete event
    uint32 rx_path_delete_event = 14;
    // RX Path Error event
    uint32 rx_path_error_event = 15;
    // RX Resv Create event
    uint32 rx_resv_create_event = 16;
    // RX Resv Change event
    uint32 rx_resv_change_event = 17;
    // RX Resv Delete event
    uint32 rx_resv_delete_event = 18;
    // RX Resv Error event
    uint32 rx_resv_error_event = 19;
    // RX Path Reeval Query event
    uint32 rx_path_reeval_query_event = 20;
    // Backup Assign event
    uint32 tx_backup_assign_event = 21;
    // Error on Backup Assign event
    uint32 rx_backup_assign_err_event = 22;
    // Total TE Signalling event count
    uint32 events_total_count = 23;
    // TE Signaling event count
    uint32 events_count = 24;
}

// MPLS TE S2L Statistics
message te_stats_bag_s2l_t {
    // Subgroup Originator
    string sub_group_originator = 1;
    // subgroup ID
    uint32 sub_group_id = 2;
    // Destination address
    string destination_address = 3;
    // S2L stats
    te_stats_sig_t statistics = 4;
}

// MPLS TE Destination Statistics
message te_stats_bag_dest_t {
    // Destination address
    string destination_address = 1;
    // Destination stats
    te_stats_sig_t statistics = 2;
    // List of S2L Stats
    repeated te_stats_bag_s2l_t s2_l_statistics = 3;
}

