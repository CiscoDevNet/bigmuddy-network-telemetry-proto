// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_mpls_te_oper.mpls_te_standby.fast_reroute.protected_interfaces.protected_interface;

// MPLS TE Fast Reroute Information
message mpls_te_fastreroute_bag_KEYS {
    string interface_name = 1;
    string backup_tunnel_name = 2;
}

message mpls_te_fastreroute_bag {
    // Backup tunnel ID
    uint32 backup_tunnel_id = 50;
    // Backup tunnel name
    string backup_tunnel_name = 51;
    // Backup state
    string backup_status = 52;
    // Backup type
    string backup_type = 53;
    // Backup usage
    string backup_usage = 54;
    // Protected interface Autobackup config
    string prot_interface_autobackup_config = 55;
    // Protected interface SRLG config
    string prot_interface_srlg_config = 56;
    // Attribute Set Name
    string tunnel_attribute_set_name = 57;
    // TRUE if the auto-backup has an attribute set defined
    bool has_attribute_set = 58;
    // Flag to indicate the existence of attribute set found in database
    bool is_attribute_set_in_db = 59;
    // Indicates if the recreate timer is running
    bool recreate_timer_is_running = 60;
    // Time Remaining in Recreate Timer (seconds)
    uint32 recreate_remaining_time = 61;
    // Backup's source
    string source_address = 62;
    // Backup's destination
    string destination_address = 63;
    // Backup's general status
    string general_status = 64;
    // Backup's connection's status
    string connection_status = 65;
    // The output intf of the tunnel
    string output_interface_name = 66;
    // Bandwidth pool type
    string bandwidth_pool_type = 67;
    // Bandwidth limit type
    string bandwidth_limit_type = 68;
    // Bandwidth (kbps)
    uint32 bandwidth = 69;
    // Tunnel instance
    uint32 tunnel_instance = 70;
    // Bandwidth currently in use (kbps)
    uint32 in_use_bandwidth = 71;
    // Bandwidth soft preempted and rerouted over the backup(kbps)
    uint32 soft_preempted_in_use_bandwidth = 72;
    // Number of LSPs
    uint32 ls_ps = 73;
    // Number of S2L Families
    uint32 s2_l_families = 74;
    // Number of P2MP S2Ls
    uint32 s2_ls = 75;
    // Number of LSPs in FRR active state
    uint32 frr_active_ls_ps = 76;
    // Number of soft preempted LSPs routed over backup
    uint32 frr_active_soft_preempted_ls_ps = 77;
}

// Statistics - count and timestamp on an item
message mpls_te_stat_item_t {
    // Number of occurence
    uint32 count = 1;
    // Timestamp, when occured last
    uint32 last_time_it_occured = 2;
}

// Statistics of all types of item operations and timestamps
message mpls_te_stats_item_t {
    // Statistics on all types of operation on an item
    repeated mpls_te_stat_item_t item_statistics = 1;
}

