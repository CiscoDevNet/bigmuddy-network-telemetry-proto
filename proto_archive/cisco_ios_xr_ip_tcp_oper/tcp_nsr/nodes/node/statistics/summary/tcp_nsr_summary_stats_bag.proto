//                                 Apache License
//                           Version 2.0, January 2004
//                        http://www.apache.org/licenses/
//
//   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
//
//   1. Definitions.
//
//      "License" shall mean the terms and conditions for use, reproduction,
//      and distribution as defined by Sections 1 through 9 of this document.
//
//      "Licensor" shall mean the copyright owner or entity authorized by
//      the copyright owner that is granting the License.
//
//      "Legal Entity" shall mean the union of the acting entity and all
//      other entities that control, are controlled by, or are under common
//      control with that entity. For the purposes of this definition,
//      "control" means (i) the power, direct or indirect, to cause the
//      direction or management of such entity, whether by contract or
//      otherwise, or (ii) ownership of fifty percent (50%) or more of the
//      outstanding shares, or (iii) beneficial ownership of such entity.
//
//      "You" (or "Your") shall mean an individual or Legal Entity
//      exercising permissions granted by this License.
//
//      "Source" form shall mean the preferred form for making modifications,
//      including but not limited to software source code, documentation
//      source, and configuration files.
//
//      "Object" form shall mean any form resulting from mechanical
//      transformation or translation of a Source form, including but
//      not limited to compiled object code, generated documentation,
//      and conversions to other media types.
//
//      "Work" shall mean the work of authorship, whether in Source or
//      Object form, made available under the License, as indicated by a
//      copyright notice that is included in or attached to the work
//      (an example is provided in the Appendix below).
//
//      "Derivative Works" shall mean any work, whether in Source or Object
//      form, that is based on (or derived from) the Work and for which the
//      editorial revisions, annotations, elaborations, or other modifications
//      represent, as a whole, an original work of authorship. For the purposes
//      of this License, Derivative Works shall not include works that remain
//      separable from, or merely link (or bind by name) to the interfaces of,
//      the Work and Derivative Works thereof.
//
//      "Contribution" shall mean any work of authorship, including
//      the original version of the Work and any modifications or additions
//      to that Work or Derivative Works thereof, that is intentionally
//      submitted to Licensor for inclusion in the Work by the copyright owner
//      or by an individual or Legal Entity authorized to submit on behalf of
//      the copyright owner. For the purposes of this definition, "submitted"
//      means any form of electronic, verbal, or written communication sent
//      to the Licensor or its representatives, including but not limited to
//      communication on electronic mailing lists, source code control systems,
//      and issue tracking systems that are managed by, or on behalf of, the
//      Licensor for the purpose of discussing and improving the Work, but
//      excluding communication that is conspicuously marked or otherwise
//      designated in writing by the copyright owner as "Not a Contribution."
//
//      "Contributor" shall mean Licensor and any individual or Legal Entity
//      on behalf of whom a Contribution has been received by Licensor and
//      subsequently incorporated within the Work.
//
//   2. Grant of Copyright License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      copyright license to reproduce, prepare Derivative Works of,
//      publicly display, publicly perform, sublicense, and distribute the
//      Work and such Derivative Works in Source or Object form.
//
//   3. Grant of Patent License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      (except as stated in this section) patent license to make, have made,
//      use, offer to sell, sell, import, and otherwise transfer the Work,
//      where such license applies only to those patent claims licensable
//      by such Contributor that are necessarily infringed by their
//      Contribution(s) alone or by combination of their Contribution(s)
//      with the Work to which such Contribution(s) was submitted. If You
//      institute patent litigation against any entity (including a
//      cross-claim or counterclaim in a lawsuit) alleging that the Work
//      or a Contribution incorporated within the Work constitutes direct
//      or contributory patent infringement, then any patent licenses
//      granted to You under this License for that Work shall terminate
//      as of the date such litigation is filed.
//
//   4. Redistribution. You may reproduce and distribute copies of the
//      Work or Derivative Works thereof in any medium, with or without
//      modifications, and in Source or Object form, provided that You
//      meet the following conditions:
//
//      (a) You must give any other recipients of the Work or
//          Derivative Works a copy of this License; and
//
//      (b) You must cause any modified files to carry prominent notices
//          stating that You changed the files; and
//
//      (c) You must retain, in the Source form of any Derivative Works
//          that You distribute, all copyright, patent, trademark, and
//          attribution notices from the Source form of the Work,
//          excluding those notices that do not pertain to any part of
//          the Derivative Works; and
//
//      (d) If the Work includes a "NOTICE" text file as part of its
//          distribution, then any Derivative Works that You distribute must
//          include a readable copy of the attribution notices contained
//          within such NOTICE file, excluding those notices that do not
//          pertain to any part of the Derivative Works, in at least one
//          of the following places: within a NOTICE text file distributed
//          as part of the Derivative Works; within the Source form or
//          documentation, if provided along with the Derivative Works; or,
//          within a display generated by the Derivative Works, if and
//          wherever such third-party notices normally appear. The contents
//          of the NOTICE file are for informational purposes only and
//          do not modify the License. You may add Your own attribution
//          notices within Derivative Works that You distribute, alongside
//          or as an addendum to the NOTICE text from the Work, provided
//          that such additional attribution notices cannot be construed
//          as modifying the License.
//
//      You may add Your own copyright statement to Your modifications and
//      may provide additional or different license terms and conditions
//      for use, reproduction, or distribution of Your modifications, or
//      for any such Derivative Works as a whole, provided Your use,
//      reproduction, and distribution of the Work otherwise complies with
//      the conditions stated in this License.
//
//   5. Submission of Contributions. Unless You explicitly state otherwise,
//      any Contribution intentionally submitted for inclusion in the Work
//      by You to the Licensor shall be under the terms and conditions of
//      this License, without any additional terms or conditions.
//      Notwithstanding the above, nothing herein shall supersede or modify
//      the terms of any separate license agreement you may have executed
//      with Licensor regarding such Contributions.
//
//   6. Trademarks. This License does not grant permission to use the trade
//      names, trademarks, service marks, or product names of the Licensor,
//      except as required for reasonable and customary use in describing the
//      origin of the Work and reproducing the content of the NOTICE file.
//
//   7. Disclaimer of Warranty. Unless required by applicable law or
//      agreed to in writing, Licensor provides the Work (and each
//      Contributor provides its Contributions) on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
//      implied, including, without limitation, any warranties or conditions
//      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
//      PARTICULAR PURPOSE. You are solely responsible for determining the
//      appropriateness of using or redistributing the Work and assume any
//      risks associated with Your exercise of permissions under this License.
//
//   8. Limitation of Liability. In no event and under no legal theory,
//      whether in tort (including negligence), contract, or otherwise,
//      unless required by applicable law (such as deliberate and grossly
//      negligent acts) or agreed to in writing, shall any Contributor be
//      liable to You for damages, including any direct, indirect, special,
//      incidental, or consequential damages of any character arising as a
//      result of this License or out of the use or inability to use the
//      Work (including but not limited to damages for loss of goodwill,
//      work stoppage, computer failure or malfunction, or any and all
//      other commercial damages or losses), even if such Contributor
//      has been advised of the possibility of such damages.
//
//   9. Accepting Warranty or Additional Liability. While redistributing
//      the Work or Derivative Works thereof, You may choose to offer,
//      and charge a fee for, acceptance of support, warranty, indemnity,
//      or other liability obligations and/or rights consistent with this
//      License. However, in accepting such obligations, You may act only
//      on Your own behalf and on Your sole responsibility, not on behalf
//      of any other Contributor, and only if You agree to indemnify,
//      defend, and hold each Contributor harmless for any liability
//      incurred by, or claims asserted against, such Contributor by reason
//      of your accepting any such warranty or additional liability.
//
//   END OF TERMS AND CONDITIONS
//
//   APPENDIX: How to apply the Apache License to your work.
//
//      To apply the Apache License to your work, attach the following
//      boilerplate notice, with the fields enclosed by brackets "{}"
//      replaced with your own identifying information. (Don't include
//      the brackets!)  The text should be enclosed in the appropriate
//      comment syntax for the file format. We also recommend that a
//      file or class name and description of purpose be included on the
//      same "printed page" as the copyright notice for easier
//      identification within third-party archives.
//
//   Copyright (c) 2017 Cisco
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

//Path: Cisco-IOS-XR-ip-tcp-oper:tcp-nsr/nodes/node/statistics/summary

package cisco_ios_xr_ip_tcp_oper.tcp_nsr.nodes.node.statistics.summary;

// Summary SSO/NSR statistics
message tcp_nsr_summary_stats_bag_KEYS {
    string id = 1;
}

message tcp_nsr_summary_stats_bag {
    // Time of last clear (in seconds since 1st Jan 1970 00:00:00)
    uint32 last_cleared_time = 50;
    // Various types of notification stats
    repeated tss_notif_stats notification_statistics = 51;
    // Number of disconnected clients
    uint32 number_of_connected_clients = 52;
    // Number of disconnected clients
    uint32 number_of_disconnected_clients = 53;
    // Number of current  clients
    uint32 number_of_current_clients = 54;
    // Number of created session sets
    uint32 number_of_created_session_sets = 55;
    // Number of destroyed session sets
    uint32 number_of_destroyed_session_sets = 56;
    // Number of current session sets
    uint32 number_of_current_session_sets = 57;
    // Number of added sessions
    uint32 number_of_added_sessions = 58;
    // Number of deleted sessions
    uint32 number_of_deleted_sessions = 59;
    // Number of current sessions
    uint32 number_of_current_sessions = 60;
    //  Number of Parner Nodes
    uint32 number_of_partner_node = 61;
    // no. of initial-sync attempts
    uint32 number_of_attempted_init_sync = 62;
    // no. of initial-sync successes
    uint32 number_of_succeeded_init_sync = 63;
    // no. of initial-sync fails
    uint32 number_of_failed_init_sync = 64;
    // Number of Packets held by Active TCP
    uint32 number_of_held_packets = 65;
    // Number of held packets dropped by Active TCP
    uint32 number_of_held_but_dropped_packets = 66;
    // Number of Internal Acks held by Active TCP
    uint32 number_of_held_internal_acks = 67;
    // Number of held Internal Acks dropped by Active TCP
    uint32 number_of_held_but_dropped_internal_acks = 68;
    // Number of Internal Acks sent to Active TCP by Standby TCP
    uint32 number_of_sent_internal_acks = 69;
    // Number of Internal Acks received by Active TCP
    uint32 number_of_received_internal_acks = 70;
    // Number of dropped messages from partner TCP stack(s)
    uint32 number_of_qad_receive_messages_drops = 71;
    // Number of unknown messages from partner TCP stack(s)
    uint32 number_of_qad_receive_messages_unknowns = 72;
    // Number of messages accepted from partner TCP stack(s)
    uint32 number_of_qad_receive_messages_accepts = 73;
    // Number of dropped messages from partner TCP stack(s) because they were out-of-order
    uint32 number_of_qad_stale_receive_messages_drops = 74;
    // Number of messages sent to partner TCP stack(s)
    uint32 number_of_qad_transfer_message_sent = 75;
    // Number of messages failed to be sent to partner TCP stack(s)
    uint32 number_of_qad_transfer_message_drops = 76;
    // Number of iACKs dropped because there is no PCB
    uint32 number_of_internal_ack_drops_no_pcb = 77;
    // Number of iACKs dropped because there is no datapath SCB
    uint32 number_of_internal_ack_drops_no_scbdp = 78;
    // Number of iACKs dropped because session is not replicated
    uint32 internal_ack_drops_not_replicated = 79;
    // Number of iACKs dropped because init-sync is in 1st phase
    uint32 internal_ack_drops_initsync_first_phase = 80;
    // Number of stale iACKs dropped
    uint32 internal_ack_drops_stale = 81;
    // Number of iACKs not held because of an immediate match
    uint32 internal_ack_drops_immediate_match = 82;
    // Number of held packets dropped because of errors
    uint32 held_packet_drops = 83;
    // Aggregate Send path counters
    tcp_nsr_snd_counters_aggr_node snd_counters = 84;
    // Aggregate Audit counters
    tcp_nsr_audit_counters_aggr_node audit_counters = 85;
}

// notif stats structure used in ccb stats bag
message tss_notif_stats {
    // how many were queued
    uint32 queued_count = 1;
    // Errors while queuing the notifs
    uint32 failed_count = 2;
    // How many were picked up by app?
    uint32 delivered_count = 3;
    // How many were dropped because of timeout
    uint32 dropped_count = 4;
}

// Send path counters
message tcp_nsr_snd_counters_node {
    // Number of successful DATA transfers
    uint32 data_xfer_send = 1;
    // Amount of data transferred
    uint64 data_xfer_send_total = 2;
    // Number of failed DATA transfers
    uint32 data_xfer_send_drop = 3;
    // Number of data transfer msgs., that required new IOV's to be allocated
    uint32 data_xfer_send_iov_alloc = 4;
    // Number of received DATA transfers
    uint32 data_xfer_rcv = 5;
    // Number of successfully received DATA transfers
    uint32 data_xfer_rcv_success = 6;
    // Number of received DATA transfers that had buffer trim failures
    uint32 data_xfer_rcv_fail_buffer_trim = 7;
    // Number of received DATA transfers that had failures because the send path was out of sync
    uint32 data_xfer_rcv_fail_snd_una_out_of_sync = 8;
    // Number of successful Segmentation instruction messages
    uint32 seg_instr_send = 9;
    // Number of segement units transferred via the successful Segmentation instruction messages
    uint32 seg_instr_send_units = 10;
    // Number of failed Segmentation instruction messages
    uint32 seg_instr_send_drop = 11;
    // Number of received Segmentation instruction messages
    uint32 seg_instr_rcv = 12;
    // Number of successfully received Segmentation instruction messages
    uint32 seg_instr_rcv_success = 13;
    // Number of received Segmentation instructions that had buffer trim failures
    uint32 seg_instr_rcv_fail_buffer_trim = 14;
    // Number of received Segmentation instructions that had failures during TCP processing
    uint32 seg_instr_rcv_fail_tcp_process = 15;
    // Number of successful NACK messages
    uint32 nack_send = 16;
    // Number of failed NACK messages
    uint32 nack_send_drop = 17;
    // Number of received NACK messages
    uint32 nack_rcv = 18;
    // Number of successfully received NACK messages
    uint32 nack_rcv_success = 19;
    // Number of received NACK messages that had failures when sending data in response to the NACK
    uint32 nack_rcv_fail_data_send = 20;
    // Number of successful Cleanup messages
    uint32 cleanup_send = 21;
    // Number of failed Cleanup messages
    uint32 cleanup_send_drop = 22;
    // Number of received Cleanup messages
    uint32 cleanup_rcv = 23;
    // Number of successfully received Cleanup messages
    uint32 cleanup_rcv_success = 24;
    // Number of Cleanup messages that had trim failures
    uint32 cleanup_rcv_fail_buffer_trim = 25;
}

// Send path aggregate only counters
message tcp_nsr_snd_counters_aggr_only_node {
    // Number of Data transfer messages dropped because PCB wasn't found
    uint32 data_xfer_rcv_drop_no_pcb = 1;
    // Number of Data transfer messages dropped because SCB DP wasn't found
    uint32 data_xfer_rcv_drop_no_scb_dp = 2;
    // Number of Segmentation instruction messages dropped because PCB wasn't found
    uint32 seg_instr_rcv_drop_no_pcb = 3;
    // Number of Segmentation instruction messages dropped because SCB DP wasn't found
    uint32 seg_instr_rcv_drop_no_scb_dp = 4;
    // Number of NACK messages dropped because PCB wasn't found
    uint32 nack_rcv_drop_no_pcb = 5;
    // Number of NACK messages dropped because SCB DP wasn't found
    uint32 nack_rcv_drop_no_scb_dp = 6;
    // Number of Cleanup messages dropped because PCB wasn't found
    uint32 cleanup_rcv_drop_no_pcb = 7;
    // Number of Cleanup messages dropped because SCB DP wasn't found
    uint32 cleanup_rcv_drop_no_scb_dp = 8;
}

// Send path aggregate counters
message tcp_nsr_snd_counters_aggr_node {
    // Common send path counters
    tcp_nsr_snd_counters_node common = 1;
    // Aggregate only send path counters
    tcp_nsr_snd_counters_aggr_only_node aggr_only = 2;
}

// Audit counters
message tcp_nsr_audit_counters_node {
    // Number of successful session-set Mark's sent by active
    uint32 mark_session_set_send = 1;
    // Number of failed session-set Mark's
    uint32 mark_session_set_send_drop = 2;
    // Number of successful session-set Mark's received by standby
    uint32 mark_session_set_rcv = 3;
    // Number of session-set Mark's dropped by standby
    uint32 mark_session_set_rcv_drop = 4;
    // Number of successful session audits sent by active
    uint32 session_send = 5;
    // Number of session audits that couldn't be sent by active
    uint32 session_send_drop = 6;
    // Number of session audits received by standby
    uint32 session_rcv = 7;
    // Number of session audits dropped by standby
    uint32 session_rcv_drop = 8;
    // Number of successful session-set Sweep's sent by active
    uint32 sweep_session_set_send = 9;
    // Number of failed session-set Sweep's
    uint32 sweep_session_set_send_drop = 10;
    // Number of successful session-set Sweep's received by standby
    uint32 sweep_session_set_rcv = 11;
    // Number of session-set Sweep's dropped by standby
    uint32 sweep_session_set_rcv_drop = 12;
    // Number of successful audit responses sent by standby
    uint32 session_set_response_send = 13;
    // Number of audit responses that couldn't be sent by standby
    uint32 session_set_response_send_drop = 14;
    // Number of audit responses received by active
    uint32 session_set_response_rcv = 15;
    // Number of audit responses dropped by active
    uint32 session_set_response_rcv_drop = 16;
    // Number of successful audit mark acks sent by standby
    uint32 mark_session_set_ack_send = 17;
    // Number of audit mark acks that couldn't be sent by standby
    uint32 mark_session_set_ack_send_drop = 18;
    // Number of audit mark acks received by active
    uint32 mark_session_set_ack_rcv = 19;
    // Number of audit mark acks dropped by active
    uint32 mark_session_set_ack_rcv_drop = 20;
    // Number of successful audit mark nacks sent by standby
    uint32 mark_session_set_nack_send = 21;
    // Number of audit mark nacks that couldn't be sent by standby
    uint32 mark_session_set_nack_send_drop = 22;
    // Number of audit mark nacks received by active
    uint32 mark_session_set_nack_rcv = 23;
    // Number of audit mark nacks dropped by active
    uint32 mark_session_set_nack_rcv_drop = 24;
    // Number of times the active aborted an audit session
    uint32 abort = 25;
}

// Aggregate-only counters for NSR audit
message tcp_nsr_audit_counters_aggr_only_node {
    // Number of session-set Mark messages dropped by standby
    uint32 mark_session_set_rcv_drop_aggr = 1;
    // Number of session audit messages dropped by standby
    uint32 session_rcv_drop_aggr = 2;
    // Number of session-set Sweep messages dropped by standby
    uint32 sweep_session_set_rcv_drop_aggr = 3;
    // Number of session-set response messages dropped by active
    uint32 session_set_response_rcv_drop_aggr = 4;
    // Number of session-set mark ack messages dropped by active
    uint32 mark_session_set_ack_rcv_drop_aggr = 5;
    // Number of session-set mark nack messages dropped by active
    uint32 mark_session_set_nack_rcv_drop_aggr = 6;
}

// Aggregate counters for NSR audit
message tcp_nsr_audit_counters_aggr_node {
    // Common audit counters
    tcp_nsr_audit_counters_node common = 1;
    // Aggregate only audit counters
    tcp_nsr_audit_counters_aggr_only_node aggr_only = 2;
}

