// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_ipv6_new_dhcpv6d_oper.dhcpv6.nodes.node.proxy.binding.clients.client;

// DHCPv6 proxy binding entry
message ipv6_dhcpv6d_proxy_binding_KEYS {
    string node_name = 1;
    string client_id = 2;
}

message ipv6_dhcpv6d_proxy_binding {
    // Client DUID
    string duid = 50;
    // DHCPV6 client flag
    uint32 client_flag = 51;
    // DHCPV6 subscriber label
    uint32 subscriber_label = 52;
    // DHCPVV6 client/subscriber VRF name
    string vrf_name = 53;
    // Client MAC address
    string mac_address = 54;
    // Number of ia_id/pd
    uint32 ia_id_p_ds = 55;
    // List of DHCPv6 IA_ID/PDs
    bag_dhcpv6d_ia_id_pd_info ia_id_pd = 56;
    // DHCPV6 access interface to client
    string interface_name = 57;
    // DHCPV6 access VRF name to client
    string access_vrf_name = 58;
    // DHCPV6 VLAN tag count
    uint32 proxy_binding_tags = 59;
    // DHCPV6 VLAN Outer VLAN
    uint32 proxy_binding_outer_tag = 60;
    // DHCPV6 VLAN Inner VLAN
    uint32 proxy_binding_inner_tag = 61;
    // DHCPV6 class name
    string class_name = 62;
    // DHCPV6 pool name
    string pool_name = 63;
    // DHCPV6 received Remote ID
    string rx_remote_id = 64;
    // DHCPV6 transmitted Remote ID
    string tx_remote_id = 65;
    // DHCPV6 received Interface ID
    string rx_interface_id = 66;
    // DHCPV6 transmitted Interface ID
    string tx_interface_id = 67;
    // DHCPV6 server IPv6 address
    string server_ipv6_address = 68;
    // DHCPV6 profile name
    string profile_name = 69;
    // DHCPV6 framed ipv6 addess used by ND
    string framed_ipv6_prefix = 70;
    // DHCPV6 framed ipv6 prefix length used by ND
    uint32 framed_prefix_length = 71;
    // Is true if DHCP next renew from client will be NAK'd
    bool is_nak_next_renew = 72;
    // DHCPV6 SRG state
    uint32 srg_state = 73;
    // DHCPV6 SRG Intf Role
    uint32 srg_intf_role = 74;
    // SRG P2P Status
    bool srgp2_p = 75;
    // DHCPV6 SRG VRF NAME
    string srg_vrf_name = 76;
}

// IPV6 Address type
message IPV6AddressType {
    string value = 1;
}

// Time in diffrent formats
message time_bag {
    // DHCPV6 client lease in seconds
    uint32 seconds = 1;
    // Time in format HH:MM:SS
    string time = 2;
}

message bag_dhcpv6d_addr_attrb {
    // Next address attribute information
    repeated bag_dhcpv6d_addr_attrb_item bag_dhcpv6d_addr_attrb = 1;
}

message bag_dhcpv6d_addr_attrb_item {
    // IPv6 prefix
    string prefix = 1;
    // Prefix length
    uint32 prefix_length = 2;
    // Lease time in seconds
    uint32 lease_time = 3;
    // Remaining lease time in seconds
    uint32 remaining_lease_time = 4;
}

message bag_dhcpv6d_ia_id_pd_info {
    // Next ia_id_pd information
    repeated bag_dhcpv6d_ia_id_pd_info_item bag_dhcpv6d_ia_id_pd_info = 1;
}

message bag_dhcpv6d_ia_id_pd_info_item {
    // IA type
    string ia_type = 1;
    // IA_ID of this IA
    uint32 ia_id = 2;
    // FSM Flag for this IA
    uint32 flags = 3;
    // Total address in this IA
    uint32 total_address = 4;
    // State
    string state = 5;
    // List of addresses in this IA
    bag_dhcpv6d_addr_attrb addresses = 6;
}

