// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_main_interfaces.l2fib_main_interface.l2fib_main_interface_instances.l2fib_main_interface_instance.l2fib_main_interface_instance_bridge_port_details.l2fib_main_interface_instance_bridge_port_detail;

// L2VPN main interface instance bridge port info detail
message l2fib_main_interface_instance_bport_detail_info_KEYS {
    string node_id = 1;
    string interface_name = 2;
    uint32 instance = 3;
    string bridge_port = 4;
}

message l2fib_main_interface_instance_bport_detail_info {
    // Bridge Port ID
    string bridge_port_id = 50;
    // Bridge ID
    uint32 bridge_id = 51;
    // Instance state
    string state = 52;
    // Main interface ID
    string main_interface = 53;
    // Bridge Port Type
    uint32 bp_type = 54;
    // Operational information
    l2fib_oper_bridge_port_info oper = 55;
}

message l2fib_base_info {
}

// L2FIB event item
message l2fib_evt_entry {
    // The real timestamp of the event
    bytes event_time = 1;
    // Event type
    uint32 event_type = 2;
    // Multiple event instance flag
    bool event_many = 3;
    // Unwrittable flag
    bool event_sticky = 4;
    // base flag object
    uint32 event_flags = 5;
}

// L2FIB event history
message l2fib_evt_history {
    // number of item in the array
    uint32 event_neighbor_entry = 1;
    repeated l2fib_evt_entry event_entry = 2;
}

// L2VPN feature profile information
message l2fib_profile_info {
    // Feature profile name
    string profile_name = 1;
}

message l2fib_feature_un {
    string feature_type = 1;
    l2fib_profile_info dhcp = 2;
    l2fib_profile_info igmp = 3;
    l2fib_profile_info mld = 4;
}

// L2VPN common operational information
message l2fib_oper_info {
    // MTU
    uint32 mtu = 1;
    // MAC aging time in minutes
    uint32 mac_aging_time = 2;
    // MAC limit
    uint32 mac_limit = 3;
    uint32 number_of_macs = 4;
    // Is administratively disabled
    bool admin_disabled = 5;
    // Is flooding disabled
    bool flooding_disabled = 6;
    // Is flooding unknown unicast disabled
    bool flood_unknown_unicast_enabled = 7;
    // MAC limit action
    string mac_limit_action = 8;
    // Is MAC learning disabled
    bool mac_learning_disabled = 9;
    // Is MAC port down flush disabled
    bool mac_port_down_flush_disabled = 10;
    // MAC limit notification
    string mac_limit_notification_type = 11;
    // Is MAC Secure Enabled
    bool is_mac_secure_enabled = 12;
    // Is MAC Secure Logging Enabled
    bool is_mac_secure_logging_enabled = 13;
    // MAC secure action
    string mac_secure_action = 14;
    // Is MAC secure accept shutdown (BP only)
    bool is_mac_secure_accept_shutdown = 15;
    // MAC aging type
    bool mac_aging_type = 16;
    // Is unicast storm control enabled
    bool storm_control_unicast_enabled = 17;
    // Is broadcast storm control enabled
    bool storm_control_broadcast_enabled = 18;
    // Is multicast storm control enabled
    bool storm_control_multicast_enabled = 19;
    // Storm control unicast rate unit
    string storm_control_unicast_rate_unit = 20;
    // Storm control broadcast rate unit
    string storm_control_broadcast_rate_unit = 21;
    // Storm control multicast rate unit
    string storm_control_multicast_rate_unit = 22;
    // Is DHCP snooping enabled
    bool dhcp_enabled = 23;
    // Is DHCP trusted
    bool dhcp_trusted = 24;
    // Is Dynamic ARP Inspection Enabled
    bool is_dai_enabled = 25;
    // Is DAI IPv4 Address Validation Enabled
    bool is_dai_addr_validation_ipv4_enabled = 26;
    // Is DAI Source MAC Address Validation Enabled
    bool is_dai_addr_validation_source_mac_enabled = 27;
    // Is DAI Destination MAC Validation enabled
    bool is_dai_addr_validation_destination_mac_enabled = 28;
    // Is DAI Logging Enabled
    bool is_dai_logging_enabled = 29;
    // Is IP Source Guard Enabled
    bool is_ipsg_enabled = 30;
    // Is IP Source Guard Logging Enabled
    bool is_ipsg_logging_enabled = 31;
    // Is MMRP  Flood Optimization Enabled
    bool is_vpls_flood_optimization_enabled = 32;
    // Is IGMP snooping enabled
    bool igmp_snoop_enabled = 33;
    // Is IGMP snooping profile enabled
    bool igmp_snoop_profile_enabled = 34;
    // Is IGMP flood forwarding enabled
    bool igmp_flood_forward_enabled = 35;
    // Is mrouter port
    bool igmp_mroute_port_enabled = 36;
    // Is router gurad enabled
    bool igmp_route_guard_enabled = 37;
    // Is MLD snooping enabled
    bool mld_snoop_enabled = 38;
    // Is MLD snooping profile enabled
    bool mld_snoop_profile_enabled = 39;
    // Is MLD flood forwarding enabled
    bool mld_flood_forward_enabled = 40;
    // Is mrouter port
    bool mld_mroute_port_enabled = 41;
    // Is router gurad enabled
    bool mld_route_guard_enabled = 42;
    // Is Spanning Tree Protocol participating
    bool stp_participating = 43;
    // Is BVI Interface configured
    bool bvi_configured = 44;
    // Is BVI state UP
    bool is_bvi_up = 45;
    // Is VNI enabled
    bool is_vni_enabled = 46;
    // Is EVPN enabled
    bool is_evpn_enabled = 47;
    // Unknown Unicast Flooding is disabled
    bool unknown_unicast_flooding_disabled = 48;
    // Host Routing enabled on this BD
    bool host_routing_enabled = 49;
    // Is PBBEVPN enabled
    bool is_pbbevpn_enabled = 50;
    // Is SW MAC learning enabled
    bool is_swmac_learning = 51;
    // Is EVPN Flow Label enabled
    bool is_evpn_flow_label = 52;
    // Is EVPN CW disabled
    bool is_evpn_cw_disable = 53;
    // Multi-spanning tree instance
    uint32 msti = 54;
    // Is P2MP PW enabled
    bool is_p2_mp_pw_enabled = 55;
    // Is IGMP Snooping admin enabled
    bool is_igmp_snoop_enabled = 56;
    // nV Satellite Offload IPv4 Multicast Disabled
    bool n_v_satellite_offload_ipv4_multicast_disabled = 57;
    // Feature information
    repeated l2fib_feature_un feature = 58;
}

// L2VPN bridge port operational information
message l2fib_oper_bridge_port_info {
    // L2 operational information
    l2fib_oper_info operational_information = 1;
    // Unicast storm control pps
    uint64 unicast_storm_control_pps = 2;
    // Unicast storm control kbps
    uint64 unicast_storm_control_kb_ps = 3;
    // Broadcast storm control pps
    uint64 broadcast_storm_control_pps = 4;
    // Broadcast storm control kbps
    uint64 broadcast_storm_control_kb_ps = 5;
    // Multicast storm control pps
    uint64 multicast_storm_control_pps = 6;
    // Multicast storm control kbps
    uint64 multicast_storm_control_kb_ps = 7;
}

