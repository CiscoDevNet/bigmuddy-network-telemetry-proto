// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_l2vpn_oper.l2vpnv2.nodes.node.xconnect_summary;

message l2vpn_xc_summary_KEYS {
    string node_id = 1;
}

message l2vpn_xc_summary {
    // Number of groups
    uint32 number_groups = 50;
    // Number of xconnects
    uint32 number_x_connects = 51;
    // Numxber of xconnects whose state is up
    uint32 number_x_connects_up = 52;
    // Number of xconnects whose state is down
    uint32 number_x_connects_down = 53;
    // Number of xconnects whose state is unresolved
    uint32 number_x_connects_unresolved = 54;
    // Number of xconnects with segments in admin down state
    uint32 number_x_connects_administratively_down = 55;
    // Number of xconnects of type attachment circuit to pseudowire
    uint32 number_x_connects_type_attachment_circuit_to_pseudo_wire = 56;
    // Number of xconnects of type monitor session to pseudowire
    uint32 number_x_connects_type_monitor_session_to_pseudo_wire = 57;
    // Number of locally switched xconnects
    uint32 number_x_connects_locally_switched = 58;
    // Number of XCs configured with backup PW
    uint32 number_x_connects_with_backup_pw = 59;
    // Number of XCs currently using backup PW (UP state)
    uint32 number_x_connects_currently_using_backup = 60;
    // Number of XCs with backup PW in down state
    uint32 down_backup_x_connects = 61;
    // Number of XCs with backup PW in admin down state
    uint32 admin_down_backup_x_connects = 62;
    // Number of XCs with backup PW in unresolved state
    uint32 unresolved_backup_x_connects = 63;
    // Number of XCs with backup PW in standby state
    uint32 standby_backup_x_connects = 64;
    // Number of XCs with backup PW in standby ready state
    uint32 standby_ready_backup_x_connects = 65;
    // L2VPN Out of memory state
    uint32 out_of_memory_state = 66;
    // Number of xconnects of type PseudoWire To PseudoWire
    uint32 number_x_connects_type_pseudo_wire_to_pseudo_wire = 67;
    // Number of mp2mp xconnects
    uint32 number_mp2_mp_xconnects = 68;
    // Number of Mp2mp XCs that have been admined up
    uint32 number_mp2_mp_xconnects_up = 69;
    // Number of Mp2mp XCs that have ben admined down
    uint32 number_mp2_mp_xconnects_down = 70;
    // Number of Mp2mp XCs that have been advertized
    uint32 number_mp2_mp_xconnects_advertised = 71;
    // Number of Mp2mp XCs that have not been advertized
    uint32 number_mp2_mp_xconnectss_not_advertised = 72;
    // Number of Ce2Ce connections
    uint32 number_ce2_ceconnections = 73;
    // Number of CE2CE connections that have been advertized
    uint32 number_ce2_ce_advertized = 74;
    // Number of CE2CE connections that have not been advertized
    uint32 number_ce2_ce_not_advertized = 75;
    // Number of cross-connects partially programmed
    uint32 partially_programmed_xconnects = 76;
    // Number of XCs configured with backup interface
    uint32 number_x_connects_with_backup_interface = 77;
    // Number of XCs currently using backup interface (UP state)
    uint32 number_x_connects_currently_using_backup_interface = 78;
    // Number of XCs with backup interface in down state
    uint32 down_backup_interface_x_connects = 79;
    // Number of XCs with backup interface in admin down state
    uint32 admin_down_backup_interface_x_connects = 80;
    // Number of XCs with backup interface in unresolved state
    uint32 unresolved_backup_interface_x_connects = 81;
    // Number of XCs with backup interface in standby state
    uint32 standby_backup_interface_x_connects = 82;
}

