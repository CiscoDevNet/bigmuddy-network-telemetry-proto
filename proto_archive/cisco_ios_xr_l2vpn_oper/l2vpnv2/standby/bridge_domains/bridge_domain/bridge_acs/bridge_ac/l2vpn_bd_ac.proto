//                                 Apache License
//                           Version 2.0, January 2004
//                        http://www.apache.org/licenses/
//
//   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
//
//   1. Definitions.
//
//      "License" shall mean the terms and conditions for use, reproduction,
//      and distribution as defined by Sections 1 through 9 of this document.
//
//      "Licensor" shall mean the copyright owner or entity authorized by
//      the copyright owner that is granting the License.
//
//      "Legal Entity" shall mean the union of the acting entity and all
//      other entities that control, are controlled by, or are under common
//      control with that entity. For the purposes of this definition,
//      "control" means (i) the power, direct or indirect, to cause the
//      direction or management of such entity, whether by contract or
//      otherwise, or (ii) ownership of fifty percent (50%) or more of the
//      outstanding shares, or (iii) beneficial ownership of such entity.
//
//      "You" (or "Your") shall mean an individual or Legal Entity
//      exercising permissions granted by this License.
//
//      "Source" form shall mean the preferred form for making modifications,
//      including but not limited to software source code, documentation
//      source, and configuration files.
//
//      "Object" form shall mean any form resulting from mechanical
//      transformation or translation of a Source form, including but
//      not limited to compiled object code, generated documentation,
//      and conversions to other media types.
//
//      "Work" shall mean the work of authorship, whether in Source or
//      Object form, made available under the License, as indicated by a
//      copyright notice that is included in or attached to the work
//      (an example is provided in the Appendix below).
//
//      "Derivative Works" shall mean any work, whether in Source or Object
//      form, that is based on (or derived from) the Work and for which the
//      editorial revisions, annotations, elaborations, or other modifications
//      represent, as a whole, an original work of authorship. For the purposes
//      of this License, Derivative Works shall not include works that remain
//      separable from, or merely link (or bind by name) to the interfaces of,
//      the Work and Derivative Works thereof.
//
//      "Contribution" shall mean any work of authorship, including
//      the original version of the Work and any modifications or additions
//      to that Work or Derivative Works thereof, that is intentionally
//      submitted to Licensor for inclusion in the Work by the copyright owner
//      or by an individual or Legal Entity authorized to submit on behalf of
//      the copyright owner. For the purposes of this definition, "submitted"
//      means any form of electronic, verbal, or written communication sent
//      to the Licensor or its representatives, including but not limited to
//      communication on electronic mailing lists, source code control systems,
//      and issue tracking systems that are managed by, or on behalf of, the
//      Licensor for the purpose of discussing and improving the Work, but
//      excluding communication that is conspicuously marked or otherwise
//      designated in writing by the copyright owner as "Not a Contribution."
//
//      "Contributor" shall mean Licensor and any individual or Legal Entity
//      on behalf of whom a Contribution has been received by Licensor and
//      subsequently incorporated within the Work.
//
//   2. Grant of Copyright License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      copyright license to reproduce, prepare Derivative Works of,
//      publicly display, publicly perform, sublicense, and distribute the
//      Work and such Derivative Works in Source or Object form.
//
//   3. Grant of Patent License. Subject to the terms and conditions of
//      this License, each Contributor hereby grants to You a perpetual,
//      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
//      (except as stated in this section) patent license to make, have made,
//      use, offer to sell, sell, import, and otherwise transfer the Work,
//      where such license applies only to those patent claims licensable
//      by such Contributor that are necessarily infringed by their
//      Contribution(s) alone or by combination of their Contribution(s)
//      with the Work to which such Contribution(s) was submitted. If You
//      institute patent litigation against any entity (including a
//      cross-claim or counterclaim in a lawsuit) alleging that the Work
//      or a Contribution incorporated within the Work constitutes direct
//      or contributory patent infringement, then any patent licenses
//      granted to You under this License for that Work shall terminate
//      as of the date such litigation is filed.
//
//   4. Redistribution. You may reproduce and distribute copies of the
//      Work or Derivative Works thereof in any medium, with or without
//      modifications, and in Source or Object form, provided that You
//      meet the following conditions:
//
//      (a) You must give any other recipients of the Work or
//          Derivative Works a copy of this License; and
//
//      (b) You must cause any modified files to carry prominent notices
//          stating that You changed the files; and
//
//      (c) You must retain, in the Source form of any Derivative Works
//          that You distribute, all copyright, patent, trademark, and
//          attribution notices from the Source form of the Work,
//          excluding those notices that do not pertain to any part of
//          the Derivative Works; and
//
//      (d) If the Work includes a "NOTICE" text file as part of its
//          distribution, then any Derivative Works that You distribute must
//          include a readable copy of the attribution notices contained
//          within such NOTICE file, excluding those notices that do not
//          pertain to any part of the Derivative Works, in at least one
//          of the following places: within a NOTICE text file distributed
//          as part of the Derivative Works; within the Source form or
//          documentation, if provided along with the Derivative Works; or,
//          within a display generated by the Derivative Works, if and
//          wherever such third-party notices normally appear. The contents
//          of the NOTICE file are for informational purposes only and
//          do not modify the License. You may add Your own attribution
//          notices within Derivative Works that You distribute, alongside
//          or as an addendum to the NOTICE text from the Work, provided
//          that such additional attribution notices cannot be construed
//          as modifying the License.
//
//      You may add Your own copyright statement to Your modifications and
//      may provide additional or different license terms and conditions
//      for use, reproduction, or distribution of Your modifications, or
//      for any such Derivative Works as a whole, provided Your use,
//      reproduction, and distribution of the Work otherwise complies with
//      the conditions stated in this License.
//
//   5. Submission of Contributions. Unless You explicitly state otherwise,
//      any Contribution intentionally submitted for inclusion in the Work
//      by You to the Licensor shall be under the terms and conditions of
//      this License, without any additional terms or conditions.
//      Notwithstanding the above, nothing herein shall supersede or modify
//      the terms of any separate license agreement you may have executed
//      with Licensor regarding such Contributions.
//
//   6. Trademarks. This License does not grant permission to use the trade
//      names, trademarks, service marks, or product names of the Licensor,
//      except as required for reasonable and customary use in describing the
//      origin of the Work and reproducing the content of the NOTICE file.
//
//   7. Disclaimer of Warranty. Unless required by applicable law or
//      agreed to in writing, Licensor provides the Work (and each
//      Contributor provides its Contributions) on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
//      implied, including, without limitation, any warranties or conditions
//      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
//      PARTICULAR PURPOSE. You are solely responsible for determining the
//      appropriateness of using or redistributing the Work and assume any
//      risks associated with Your exercise of permissions under this License.
//
//   8. Limitation of Liability. In no event and under no legal theory,
//      whether in tort (including negligence), contract, or otherwise,
//      unless required by applicable law (such as deliberate and grossly
//      negligent acts) or agreed to in writing, shall any Contributor be
//      liable to You for damages, including any direct, indirect, special,
//      incidental, or consequential damages of any character arising as a
//      result of this License or out of the use or inability to use the
//      Work (including but not limited to damages for loss of goodwill,
//      work stoppage, computer failure or malfunction, or any and all
//      other commercial damages or losses), even if such Contributor
//      has been advised of the possibility of such damages.
//
//   9. Accepting Warranty or Additional Liability. While redistributing
//      the Work or Derivative Works thereof, You may choose to offer,
//      and charge a fee for, acceptance of support, warranty, indemnity,
//      or other liability obligations and/or rights consistent with this
//      License. However, in accepting such obligations, You may act only
//      on Your own behalf and on Your sole responsibility, not on behalf
//      of any other Contributor, and only if You agree to indemnify,
//      defend, and hold each Contributor harmless for any liability
//      incurred by, or claims asserted against, such Contributor by reason
//      of your accepting any such warranty or additional liability.
//
//   END OF TERMS AND CONDITIONS
//
//   APPENDIX: How to apply the Apache License to your work.
//
//      To apply the Apache License to your work, attach the following
//      boilerplate notice, with the fields enclosed by brackets "{}"
//      replaced with your own identifying information. (Don't include
//      the brackets!)  The text should be enclosed in the appropriate
//      comment syntax for the file format. We also recommend that a
//      file or class name and description of purpose be included on the
//      same "printed page" as the copyright notice for easier
//      identification within third-party archives.
//
//   Copyright (c) 2017 Cisco
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

syntax = "proto3";

//Path: Cisco-IOS-XR-l2vpn-oper:l2vpnv2/standby/bridge-domains/bridge-domain/bridge-acs/bridge-ac

package cisco_ios_xr_l2vpn_oper.l2vpnv2.standby.bridge_domains.bridge_domain.bridge_acs.bridge_ac;

// L2VPN Bridge Attachment Circuit
message l2vpn_bd_ac_KEYS {
    string bridge_domain_group_name = 1;
    string bridge_domain_name = 2;
    string interface_name = 3;
}

message l2vpn_bd_ac {
    // Attachment Circuit
    l2vpn_ac attachment_circuit = 50;
    // Security Parameters
    l2vpn_bridge_port_sec_param security_parameters = 51;
    // MyMac Index
    uint32 bvi_mac_index = 52;
    // Static MAC addresses
    repeated l2vpn_bd_mac static_mac = 53;
    // BVI MAC addresses
    repeated l2vpn_bd_mac bvimac = 54;
}

// L2FIB statistics counters
message l2fib_stats_bag_counters {
    // packets counters
    uint64 packet_counts = 1;
    // bytes counters
    uint64 byte_counts = 2;
}

// L2FIB imposition statistics
message l2fib_stats_bag_imp {
    // imposition stats
    l2fib_stats_bag_counters imposition_stat = 1;
    // imposition mtu drop stats
    l2fib_stats_bag_counters imposition_mtu_drop = 2;
    // imposition tail drop stats
    l2fib_stats_bag_counters impostion_tail_drop = 3;
    // rx discards
    l2fib_stats_bag_counters l2fsbi_drop = 4;
    // Multicast
    l2fib_stats_bag_counters multicast = 5;
    // Broadcast
    l2fib_stats_bag_counters broadcast = 6;
    // Known Unicast
    l2fib_stats_bag_counters known_unicast = 7;
    // Unknown Unicast
    l2fib_stats_bag_counters unknown_unicast = 8;
}

// L2FIB disposition statistics
message l2fib_stats_bag_disp {
    // disposition stats
    l2fib_stats_bag_counters disposition_stat = 1;
    // disposition mtu drop stats
    l2fib_stats_bag_counters disposition_mtu_drop = 2;
    // disposition tail drop stats
    l2fib_stats_bag_counters disposition_tail_drop = 3;
    // disposition storm control multicast drop stats
    l2fib_stats_bag_counters multicast_drop = 4;
    // disposition storm control unknown unicast drop stats
    l2fib_stats_bag_counters unicast_drop = 5;
    // disposition storm control broadcast drop stats
    l2fib_stats_bag_counters broadcast_drop = 6;
    // tx discards
    l2fib_stats_bag_counters received_drops = 7;
    // Disposition dynamic ARP inspection drop statistics
    l2fib_stats_bag_counters dai_drop = 8;
    // disposition IP source guard drop statistics
    l2fib_stats_bag_counters ipsg_drop = 9;
    // Disposition Out-of-Order Drops
    l2fib_stats_bag_counters disposition_oo_o_drops = 10;
    // Disposition P2MP Stats
    l2fib_stats_bag_counters disposition_p2_mp_stats = 11;
    // Known Unicast
    l2fib_stats_bag_counters known_unicast = 12;
    // MAC Move
    l2fib_stats_bag_counters mac_move = 13;
}

// L2FIB sequence numbers
message l2fib_stats_bag_seq_num {
    // sequence number sent
    uint32 sequence_number_sent = 1;
    // sequence number expected
    uint32 sequence_number_expected = 2;
    // Bypassed inbound sequence packets
    uint64 bypassed_inbound_sequence_packet = 3;
    // Bypassed outbound sequence packets
    uint64 bypassed_out_sequence_packet = 4;
}

// L2FIB forwarding statistics
message l2fib_stats_bag_forwarding {
    // imposition stats
    l2fib_stats_bag_imp impostion_stats = 1;
    // disposition stats
    l2fib_stats_bag_disp dispostion_stats = 2;
    // sequence numbers
    l2fib_stats_bag_seq_num sequence_number = 3;
}

// Interface info for Generic interface list
message item_iflist_if {
    // Interface name
    string interface_name = 1;
    // Replicate status
    string replicate_status = 2;
}

// Generic interface list info
message item_iflist_ifl {
    // Interface-list name
    string interface_list_name = 1;
    // Interface internal ID
    uint32 interface_list_id = 2;
    // Interfaces
    repeated item_iflist_if interfaces = 3;
}

message l2vpn_ethernet {
    // XConnect tags
    uint32 x_connect_tags = 1;
}

// EFP range
message l2vpn_efp_range {
    uint32 lower = 1;
    uint32 upper = 2;
}

message l2vpn_vlan {
    // XConnect tags
    uint32 x_connect_tags = 1;
    // VLAN rewrite tag
    uint32 vlan_rewrite_tag = 2;
    // Simple EFP
    uint32 simple_efp = 3;
    // Encapsulation Type
    uint32 encapsulation_type = 4;
    // Outer Tag
    uint32 outer_tag = 5;
    repeated l2vpn_efp_range vlan_ranges = 6;
    // Rewrite Tags
    repeated uint32 rewrite_tags = 7;
}

message l2vpn_atm {
    // Max number of cells packed
    uint32 maximum_number_cells_packed = 1;
    // Max number of cells unpacked
    uint32 maximum_number_cells_un_packed = 2;
    // ATM mode
    string atm_mode = 3;
    // Virtual path identifier
    uint32 vpi = 4;
    // Virtual channel identifier
    uint32 vci = 5;
}

message l2vpn_fr {
    // Frame Relay mode
    string fr_mode = 1;
    // Data-link connection identifier
    uint32 dlci = 2;
}

message l2vpn_pwhe {
    // Is this Interface list valid
    bool is_valid = 1;
    // Interface list data
    item_iflist_ifl interface_list = 2;
    // Internal Label
    uint32 internal_label = 3;
}

// L2VPN TDM options
message l2vpn_tdm_option {
    // TDM payload bytes
    uint32 payload_bytes = 1;
    // TDM bit rate in units of Kbps
    uint32 bit_rate = 2;
    // RTP header
    string rtp = 3;
    // TDM Timestamping mode
    string timestamp_mode = 4;
    // Signalling packets
    uint32 signalling_packets = 5;
    // CAS
    uint32 cas = 6;
    // RTP header payload type
    uint32 rtp_header_payload_type = 7;
    // Timestamping clock frequency in units of 8Khz
    uint32 timestamp_clock_freq = 8;
    // Synchronization Source identifier
    uint32 ssrc = 9;
}

// L2VPN TDM parameters
message l2vpn_tdm {
    // Timeslots separated by , or - from 1 to 31. : indicates individual timeslot and - represents a range.E.g. 1-3,5 represents timeslots 1, 2, 3, and 5.
    string timeslot_group = 1;
    // Timeslot rate in units of Kbps
    uint32 timeslot_rate = 2;
    // TDM mode
    string tdm_mode = 3;
    // TDM options
    l2vpn_tdm_option tdm_options = 4;
}

message l2vpn_interface_params {
    string type = 1;
    // Ethernet
    l2vpn_ethernet ethernet = 2;
    // VLAN
    l2vpn_vlan vlan = 3;
    // TDM
    l2vpn_tdm tdm = 4;
    // ATM
    l2vpn_atm atm = 5;
    // Frame Relay
    l2vpn_fr fr = 6;
    // PW Ether
    l2vpn_pwhe pseudowire_ether = 7;
    // PW IW
    l2vpn_pwhe pseudowire_iw = 8;
}

message l2vpn_interface {
    // Interface name
    string name = 1;
    // Interface MTU
    uint32 mtu = 2;
    // Payload bytes
    uint32 payload_bytes = 3;
    // Interface parameters
    l2vpn_interface_params parameters = 4;
}

message l2vpn_protection {
    // Type of the protection
    string protection_type = 1;
    // Protection configured
    string protection_configured = 2;
    // Name of the segment acting as backup
    string protection_name = 3;
    // Name of the protected segment
    string protected_name = 4;
    // Active
    bool active = 5;
}

message l2vpn_ac {
    // Interface
    l2vpn_interface interface = 1;
    // State
    string state = 2;
    // MSTi
    string msti = 3;
    // Internal MSTi
    string internal_ms_ti = 4;
    // Interface Handler
    string interface_handle = 5;
    // Node ID
    string node_id = 6;
    // XConnect ID
    uint32 x_connect_id = 7;
    // MSTi mismatch
    bool ms_ti_mismatch = 8;
    // MTU mismatched
    bool mtu_mismatched = 9;
    // TDM media parms mismatched
    bool tdm_media_mismatched = 10;
    // BVI Mac Conflict
    bool bvi_mac_conflict = 11;
    // BVI no BP Up
    bool bvi_no_port_up = 12;
    // Control word mismatched
    bool control_word_mismatched = 13;
    // Encapsulation mismatched
    bool encapsulation_mismatched = 14;
    // Encapsulation Error
    string encapsulation_error = 15;
    // Interworking type
    string interworking = 16;
    // L2VPN Out of memory state
    uint32 out_of_memory_state = 17;
    // Statistics
    l2fib_stats_bag_forwarding statistics = 18;
    // Oper down due to MSTI mismatch
    bool msti_mismatch_down = 19;
    // Oper down because MAC limit reached
    bool mac_limit_oper_down = 20;
    // Redundancy Group ID
    uint32 redundancy_group_id = 21;
    // Redundancy Group State
    string redundancy_group_state = 22;
    // Redundancy Object ID
    uint64 redundancy_object_id = 23;
    // Protection object used for this segment
    l2vpn_protection l2vpn_protection = 24;
    // Is attachment-circuit partially programmed
    bool is_ac_partially_programmed = 25;
    // EVPN Internal Label
    uint32 evpn_internal_label = 26;
}

// Storm Control Configuration
message l2vpn_bag_storm_control_type {
    // Bridge Domain Policer
    bool bd_policer = 1;
    // Unknown-unicast Storm Control
    bool unicast = 2;
    // Multicast Storm Control
    bool multicast = 3;
    // Broadcast Storm Control
    bool broadcast = 4;
}

message l2vpn_bridge_sec_param {
    // MAC address limit
    uint32 mac_limit = 1;
    // MAC limit action
    string mac_limit_action = 2;
    // MAC limit notification
    string mac_limit_notification = 3;
    // MAC aging time in seconds
    uint32 mac_aging_time = 4;
    // MAC Aging Mode
    string mac_aging_mode = 5;
    // MAC flooding enabled
    bool mac_flooding = 6;
    // MAC learning enabled
    bool mac_learning = 7;
    // Learning disabled due to MAC limit action
    bool learn_disabled_mac_limit_action = 8;
    // Flooding of unknown-unicast disabled due to MAC limit action
    bool flood_uu_disabled_mac_limit_action = 9;
    // MAC limit reached
    bool mac_limit_reached = 10;
    // MAC Limit Threshold Percentage
    uint32 mac_limit_threshold = 11;
    // Flooding unknown unicast enabled
    bool flood_unknown_unicast_enabled = 12;
    // MAC Flush when port goes down
    bool mac_port_down_flush_enabled = 13;
    // Split Horizon Group ID
    uint32 split_horizon_group_id = 14;
    // Is IP Source Guard Enabled
    bool is_ip_source_guard_enabled = 15;
    // Is IP Source Guard Logging Enabled
    bool is_ipsg_logging_enabled = 16;
    // Is Dynamic ARP Inspection Enabled
    bool is_dai_enabled = 17;
    // Is DAI Logging Enabled
    bool is_dai_logging_enabled = 18;
    // Is DAI Source MAC Address Validation Enabled
    bool is_dai_addr_validate_source_mac_enabled = 19;
    // Is DAI Dstination MAC Address Validation Enabled
    bool is_dai_addr_validate_destination_mac_enabled = 20;
    // Is DAI IPv4 Addr Validation Enabled
    bool is_dai_addr_validate_ipv4_enabled = 21;
    // Is MAC Secure Enabled
    bool is_mac_secure_enabled = 22;
    // MAC Secure Action
    string mac_secure_action = 23;
    // Is MAC Secure Logging Enabled
    bool is_mac_secure_logging_enabled = 24;
    // Is MAC Secure Accept Shutdown Enabled (BP only)
    bool is_mac_secure_accept_shutdown_enabled = 25;
    // Is MAC Secure Threshold Enabled
    bool is_mac_secure_threshold_enabled = 26;
    // DAI Address Validation mask
    uint32 dai_address_validation_mask = 27;
    // DHCPv4 Snoop Status
    bool dhc_pv4_snoop = 28;
    // DHCPv4 Profile Name
    string dhc_pv4_profile_name = 29;
    // IGMPv4 Disabled
    bool igm_pv4_disabled = 30;
    // IGMPv4 Profile Name
    string igm_pv4_profile_name = 31;
    // MLD Profile Name
    string mld_profile_name = 32;
    // MMRP Flood Optimization Status
    bool mmrp_flood_optimization = 33;
    // Storm Control Configuration
    l2vpn_bag_storm_control_type storm_control = 34;
    // Unicast Storm Control Rate Unit
    string unicast_storm_control_rate_unit = 35;
    // Unicast Storm Control PPS
    uint64 unicast_storm_control_pps = 36;
    // Unicast Storm Control KbPS
    uint64 unicast_storm_control_kb_ps = 37;
    // Multicast Storm Control Rate Unit
    string multicast_storm_control_rate_unit = 38;
    // Multicast Storm Control PPS
    uint64 multicast_storm_control_pps = 39;
    // Multicast Storm Control KbPS
    uint64 multicast_storm_control_kb_ps = 40;
    // Broadcast Storm Control Rate Unit
    string broadcast_storm_control_rate_unit = 41;
    // Broadcast Storm Control PPS
    uint64 broadcast_storm_control_pps = 42;
    // Broadcast Storm Control KbPS
    uint64 broadcast_storm_control_kb_ps = 43;
}

message l2vpn_bridge_port_sec_param {
    // Basic Security Parameters
    l2vpn_bridge_sec_param base = 1;
    // Storm Control Configuration
    l2vpn_bag_storm_control_type storm_control = 2;
    // Unicast Storm Control Rate Unit
    string unicast_storm_control_rate_unit = 3;
    // Unicast Storm Control PPS
    uint64 unicast_storm_control_pps = 4;
    // Unicast Storm Control KbPS
    uint64 unicast_storm_control_kb_ps = 5;
    // Multicast Storm Control Rate Unit
    string multicast_storm_control_rate_unit = 6;
    // Multicast Storm Control PPS
    uint64 multicast_storm_control_pps = 7;
    // Multicast Storm Control KbPS
    uint64 multicast_storm_control_kb_ps = 8;
    // Broadcast Storm Control Rate Unit
    string broadcast_storm_control_rate_unit = 9;
    // Broadcast Storm Control PPS
    uint64 broadcast_storm_control_pps = 10;
    // Broadcast Storm Control KbPS
    uint64 broadcast_storm_control_kb_ps = 11;
    // DHCPv4 Trust Status
    bool dhc_pv4_trust = 12;
}

// L2VPN Static MAC Address
message l2vpn_bd_mac {
    // MAC address
    string address = 1;
    // Backbone MAC address
    string bmac = 2;
    // Next Hop IP
    string next_hop_ip = 3;
}

