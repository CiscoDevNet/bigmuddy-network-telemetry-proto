// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_l2vpn_oper.l2vpnv2.standby.nsr;

// L2VPN Process FSM Information
message l2vpn_mgmt_proc_fsm_KEYS {
}

message l2vpn_mgmt_proc_fsm {
    // Current Process Role
    uint32 process_role = 50;
    // Current Process State
    uint32 process_state = 51;
    // Sync complete flags
    uint32 sync_flags = 52;
    // Is s/w install currently in progress?
    bool sw_install_in_progress = 53;
    // XID information
    repeated l2vpn_mgmt_proc_fsm_xid_info xid_info = 54;
    // L2VPN failover status
    l2vpn_failover_status failover_status = 55;
    // Transition time for all states
    repeated uint32 state_transition_time = 56;
    // L2VPN NSR status and timestamp
    l2vpn_nsr_issu_status_info nsr_status = 57;
    // L2VPN ISSU Status and timestamp
    l2vpn_nsr_issu_status_info issu_status = 58;
    // L2VPN Collaborator report card
    repeated l2vpn_mgmt_proc_fsm_report_card report_card = 59;
    // L2VPN Process event history
    repeated l2vpn_mgmt_proc_fsm_event_history event_history = 60;
}

// IDT status information
message l2vpn_idt_status {
    // Sync status
    string sync_status = 1;
    // Not ready reason
    string not_ready_reason = 2;
    // IDT start timestamp in seconds
    uint32 idt_start_time = 3;
    // IDT end timestamp in seconds
    uint32 idt_end_time = 4;
    // Declare ready timestamp in seconds
    uint32 declare_time = 5;
    // Withdraw ready timestamp in seconds
    uint32 withdraw_time = 6;
}

// NSR/ISSU status information
message l2vpn_nsr_issu_status_info {
    // Process role
    string role = 1;
    // IDT status
    l2vpn_idt_status idt_status = 2;
    // Previous IDT status
    l2vpn_idt_status previ_ous_idt_status = 3;
}

// L2VPN failover status
message l2vpn_failover_status {
    // Triggered time
    uint32 triggered_time = 1;
    // Start time
    uint32 start_time = 2;
    // Master time
    uint32 master_time = 3;
}

// L2VPN Process FSM event history
message l2vpn_mgmt_proc_fsm_event_history {
    // Previous state
    uint32 previous_state = 1;
    // New state
    uint32 new_state = 2;
    // Process event
    uint32 process_event = 3;
    // Process collaborator
    uint32 process_collaborator = 4;
    // Event timestamp
    uint32 event_timestamp = 5;
}

// L2VPN Process FSM report card
message l2vpn_mgmt_proc_fsm_report_card {
    // Is the collaborator connected
    bool collaborator_is_connected = 1;
    // Time when connection state (UP/DOWN) changed
    uint32 connection_change_time = 2;
    // Is IDT done for this collaborator
    bool collaborator_idt_done = 3;
    // Time when IDT was done
    uint32 idt_time = 4;
    // Was this collaborator skipped for not connecting in time
    bool collaborator_skipped = 5;
}

message l2vpn_mgmt_proc_fsm_xid_info {
    // App type
    string app_type = 1;
    // Number of XIDs transferred
    uint32 sent_ids = 2;
}

