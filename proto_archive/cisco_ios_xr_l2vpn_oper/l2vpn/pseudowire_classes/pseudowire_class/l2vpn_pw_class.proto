// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

package cisco_ios_xr_l2vpn_oper.l2vpn.pseudowire_classes.pseudowire_class;

message l2vpn_pw_class_KEYS {
    string pseudowire_class_name = 1;
}

message l2vpn_pw_class {
    // Pseudowire class name
    string pw_class_name = 50;
    // Control word
    string control_word = 51;
    // Transport mode
    string transport_mode = 52;
    // Sequencing Type
    string sequencing_type = 53;
    // Resync if packets out of sequence
    bool resync_enabled = 54;
    // Number of Packets Out of Seqence to trigger resync
    uint32 resync_threshold = 55;
    string protocol = 56;
    // Encapsulation specific pseudowire information
    l2vpn_encap_pw_class encapsulation_info = 57;
    // TRUE if backup is not automatically disabled
    bool disable_never = 58;
    // Disable Deley
    uint32 disable_delay = 59;
    // TRUE if MAC withdraw message is sent
    bool backup_mac_withdraw = 60;
    // Static tag rewrite
    uint32 tag_rewrite = 61;
    // MPLS Preferred Path
    l2vpn_pw_mpls_prefpath preferred_path = 62;
    bool preferred_path_disable_fallback = 63;
    // Load Balance Type
    string load_balance = 64;
    // Local source address
    l2vpn_source_address local_source_address = 65;
    // Configured pseudowire flow label type
    string pw_flow_label_type_cfg = 66;
    // Disable sending Code 17 TLV
    bool pw_flow_label_code17_disabled = 67;
    // is flow label static
    bool is_flow_label_static = 68;
}

message l2vpn_l2tpv3_pw_class {
    string l2_tp_class_name = 1;
    // IPv4 source address
    string ipv4_source_address = 2;
    // Path MTU enabled
    bool path_mtu_enabled = 3;
    // Path MTU Maximum allowable session MTU
    uint32 path_mtu_max_value = 4;
    // Don't Fragment Bit
    bool dont_fragment_bit = 5;
    // Type Of Service Mode
    string tos_mode = 6;
    // Type Of Service Value
    uint32 tos = 7;
    // Time To Live value
    uint32 ttl = 8;
    // Cookie size: 0, 4, or 8 bytes
    uint32 cookie_size = 9;
}

message l2vpn_pw_mpls_prefpath {
    string option = 1;
    uint32 next_hop_ip = 2;
    uint32 te_tunnel_interface_number = 3;
    uint32 ip_tunnel_interface_number = 4;
    uint32 tp_tunnel_interface_number = 5;
}

message l2vpn_encap_pw_class {
    string encapsulation = 1;
    l2vpn_l2tpv3_pw_class l2_tpv3 = 2;
}

message l2vpn_source_address {
    string configuration = 1;
    // Local source address
    string address = 2;
}

