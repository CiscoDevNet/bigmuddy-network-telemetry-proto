// Copyright (c) 2015, Cisco Systems
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
//    contributors may be used to endorse or promote products derived
//    from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
// TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This file is autogenerated
//
// The following edits are possible, without affecting the validity of the
// file:
//
//  * Fields may be renamed.
//  * Fields may be deleted.
//  * The unique numbered tag for a field may be changed, provided that
//    the ordering of tags for fields within a message is preserved.
//  * Message types may be renamed.
//  * Message types may be deleted (if all fields that reference them
//    have been deleted).
//
// All Cisco message and field extensions must be preserved (except when the
// field itself is being deleted).

syntax = "proto3";

//Path: Cisco_IOS_XR_controller_otu_oper:otu/controllers/controller/info

package cisco_ios_xr_controller_otu_oper.otu.controllers.controller.info;

// OTU
message otu_per_port_info_KEYS {
    string controller_name = 1;
}

message otu_per_port_info {
    // Admin State
    string state = 50;
    // Interface Name
    string name = 51;
    // SF in the form of 1.0E _ <SF>
    uint32 sf = 52;
    // SD in the form of 1.0E _ <SD>
    uint32 sd = 53;
    // TTI
    otn_otu_remote_info_via_tti_t_rtrid_ifindex local = 54;
    // Remote
    otn_otu_remote_info_via_tti_t_rtrid_ifindex remote = 55;
    // OTU TTI
    otu_g709_tti tti_mode = 56;
    // Loopback
    string loopback_mode = 57;
    // FEC
    string fec_mode = 58;
    // Derived State
    string derivedstate_mode = 59;
    // Sec State
    string inherit_sec_state = 60;
    // Sec State
    string config_sec_state = 61;
    // OTU GCC
    bool gcc_mode = 62;
    // Network Shared Risk Link Group information
    network_srlg_info network_srlg = 63;
    // q value calculated
    uint64 q = 64;
    // q margin calculated
    uint64 q_margin = 65;
    // OTU layer alarm Information
    otu_alarm_info otu_alarm_info = 66;
    // Performance Monitoring
    string performance_monitoring = 67;
    // Proactive Protection
    otu_proactive_info proactive = 68;
    // Average bit errors corrected
    uint64 ec = 69;
    // Uncorrected word count
    uint64 uc = 70;
    // Pre FEC BER Value in form 0.00
    sint32 pre_fec_val = 71;
    // Pre FEC BER Mantissa in form E_<mantisaa>
    sint32 pre_fec_mantissa = 72;
    // EC value present
    bool ec_value = 73;
    // Uc value present
    bool uc_value = 74;
    // Pre fec val present 
    bool pre_fec_ber_value = 75;
    // Pre fec val mantissa
    bool pre_fec_ber_mantissa = 76;
    // NV Optical support
    bool nv_optical_support = 77;
    // GMPLS TTI MODE
    string gmpls_tti_mode = 78;
    // GMPLS TCM ID
    uint32 gmpls_tvm_id = 79;
    // OTU FEC Statistics
    FECOperData otu_fec_satistics = 80;
    // Auto tti flag
    bool auto_tti_flag = 81;
}

// TTI SAPI DAPI
message otu_TTI_st {
    // tx String 
    repeated uint32 sapi = 1;
    // exp String 
    repeated uint32 dapi = 2;
    // rec String 
    repeated uint32 operator_specific = 3;
    // full tti ascii String 
    string full_tti_ascii_string = 4;
}

// otn_otu_remote_info_via_tti_t_rtrid_ifindex
message otn_otu_remote_info_via_tti_t_rtrid_ifindex {
    // Router ID
    uint32 router_id = 1;
    // IfIndex
    uint32 if_index = 2;
}

// OTU TTI
message otu_g709_tti {
    // G709TTI sent
    string g709_tti_sent_mode = 1;
    // G709TTI Expected
    string g709_tti_exp_mode = 2;
    // G709TTI Recieved
    string g709_tti_rec_mode = 3;
    // String Sent
    otu_TTI_st tx = 4;
    // String Expected
    otu_TTI_st exp = 5;
    // String Received
    otu_TTI_st rec = 6;
    // Remote Interface Name
    string remote_interface = 7;
    // Remote host name
    string remote_hostname = 8;
    // Remote host ip
    string remote_ip_addr = 9;
}

//  OTU Alarm
message otu_edm_alarm {
    // Is reporting enabled?
    bool reporting_enabled = 1;
    // Is defect detected?
    bool is_detected = 2;
    // Is defect delared?
    bool is_asserted = 3;
    // Alarm counter
    uint64 counter = 4;
}

// otu information
message otu_alarm_info {
    // Loss of Signal
    otu_edm_alarm los = 1;
    // Loss of Frame
    otu_edm_alarm lof = 2;
    // Loss of MultiFrame
    otu_edm_alarm lom = 3;
    // Out of Frame
    otu_edm_alarm oof = 4;
    // Out of MultiFrame
    otu_edm_alarm oom = 5;
    // Alarm Indication Signal
    otu_edm_alarm ais = 6;
    // Incoming Alignment Error
    otu_edm_alarm iae = 7;
    // Backward Incoming Alignment Error
    otu_edm_alarm biae = 8;
    // Backward Defect Indication
    otu_edm_alarm bdi = 9;
    // Trace Identifier Mismatch
    otu_edm_alarm tim = 10;
    // GCC End of Channel
    otu_edm_alarm eoc = 11;
    // FEC mismatch alarm
    otu_edm_alarm fec_mismatch = 12;
    // SF BER alarm
    otu_edm_alarm sf_ber = 13;
    // SD BER alarm
    otu_edm_alarm sd_ber = 14;
    // EC alarm
    otu_edm_alarm ec = 15;
    // UC alarm
    otu_edm_alarm uc = 16;
    // FEC UnCorrected Word
    otu_edm_alarm fecunc = 17;
}

// Proactive Protection
message otu_proactive_info {
    // Proactive Status
    bool proactive_status = 1;
    // Secondary Admin State
    string inherit_sec_state = 2;
    // Sec State
    string config_sec_state = 3;
    // Proactive FSM State
    string proactive_fsm_state = 4;
    // Proactive FSM IF State
    string proactive_fsm_if_state = 5;
    // Trigger threshold coefficient
    uint32 trig_thresh_coeff = 6;
    // Trigger threshold power
    uint32 trig_thresh_power = 7;
    // Revert threshold coefficient
    uint32 rvrt_thresh_coeff = 8;
    // Revert threshold power
    uint32 rvrt_thresh_power = 9;
    // Trigger Integration window
    uint32 trigger_window = 10;
    // Revert Integration Window
    uint32 revert_window = 11;
}

// FEC Satistics
message FECOperData {
    // Bit Error Rate After Forward Error Correction
    string post_fec_ber = 1;
    // Bit Error Rate Before Forward Error Correction
    string pre_fec_ber = 2;
}

// Network Shared Risk Link Group information expressed in integer format
message network_srlg_set {
    // Array to maintain set id number
    uint32 set_id = 1;
    // Shared Risk Link Group information expressed in integer format
    repeated uint32 srlg = 2;
}

// Array of Network Shared Risk Link Group Information
message network_srlg_info {
    // Array of Network Shared Risk Link Group information
    repeated network_srlg_set srlg_info = 1;
}

message otu_per_port_info_COMBINED {
    string controller_name = 1;
    // Admin State
    string state = 50;
    // Interface Name
    string name = 51;
    // SF in the form of 1.0E _ <SF>
    uint32 sf = 52;
    // SD in the form of 1.0E _ <SD>
    uint32 sd = 53;
    // TTI
    otn_otu_remote_info_via_tti_t_rtrid_ifindex local = 54;
    // Remote
    otn_otu_remote_info_via_tti_t_rtrid_ifindex remote = 55;
    // OTU TTI
    otu_g709_tti tti_mode = 56;
    // Loopback
    string loopback_mode = 57;
    // FEC
    string fec_mode = 58;
    // Derived State
    string derivedstate_mode = 59;
    // Sec State
    string inherit_sec_state = 60;
    // Sec State
    string config_sec_state = 61;
    // OTU GCC
    bool gcc_mode = 62;
    // Network Shared Risk Link Group information
    network_srlg_info network_srlg = 63;
    // q value calculated
    uint64 q = 64;
    // q margin calculated
    uint64 q_margin = 65;
    // OTU layer alarm Information
    otu_alarm_info otu_alarm_info = 66;
    // Performance Monitoring
    string performance_monitoring = 67;
    // Proactive Protection
    otu_proactive_info proactive = 68;
    // Average bit errors corrected
    uint64 ec = 69;
    // Uncorrected word count
    uint64 uc = 70;
    // Pre FEC BER Value in form 0.00
    sint32 pre_fec_val = 71;
    // Pre FEC BER Mantissa in form E_<mantisaa>
    sint32 pre_fec_mantissa = 72;
    // EC value present
    bool ec_value = 73;
    // Uc value present
    bool uc_value = 74;
    // Pre fec val present 
    bool pre_fec_ber_value = 75;
    // Pre fec val mantissa
    bool pre_fec_ber_mantissa = 76;
    // NV Optical support
    bool nv_optical_support = 77;
    // GMPLS TTI MODE
    string gmpls_tti_mode = 78;
    // GMPLS TCM ID
    uint32 gmpls_tvm_id = 79;
    // OTU FEC Statistics
    FECOperData otu_fec_satistics = 80;
    // Auto tti flag
    bool auto_tti_flag = 81;
}

