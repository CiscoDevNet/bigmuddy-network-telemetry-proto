// Code generated by protoc-gen-go.
// source: instmgr_show_install_prepare.proto
// DO NOT EDIT!

/*
Package cisco_ios_xr_spirit_install_instmgr_oper_software_install_prepare is a generated protocol buffer package.

It is generated from these files:
	instmgr_show_install_prepare.proto

It has these top-level messages:
	InstmgrShowInstallPrepare_KEYS
	InstmgrShowInstallPrepare
	InstStringPtr
*/
package cisco_ios_xr_spirit_install_instmgr_oper_software_install_prepare

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// show install prepare
type InstmgrShowInstallPrepare_KEYS struct {
}

func (m *InstmgrShowInstallPrepare_KEYS) Reset()                    { *m = InstmgrShowInstallPrepare_KEYS{} }
func (m *InstmgrShowInstallPrepare_KEYS) String() string            { return proto.CompactTextString(m) }
func (*InstmgrShowInstallPrepare_KEYS) ProtoMessage()               {}
func (*InstmgrShowInstallPrepare_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type InstmgrShowInstallPrepare struct {
	NoPrepareDone         string           `protobuf:"bytes,50,opt,name=no_prepare_done,json=noPrepareDone" json:"no_prepare_done,omitempty"`
	PreparedBootImage     string           `protobuf:"bytes,51,opt,name=prepared_boot_image,json=preparedBootImage" json:"prepared_boot_image,omitempty"`
	PreparedBootPartition string           `protobuf:"bytes,52,opt,name=prepared_boot_partition,json=preparedBootPartition" json:"prepared_boot_partition,omitempty"`
	RestartType           string           `protobuf:"bytes,53,opt,name=restart_type,json=restartType" json:"restart_type,omitempty"`
	RpmList               []*InstStringPtr `protobuf:"bytes,54,rep,name=rpm_list,json=rpmList" json:"rpm_list,omitempty"`
	PackageList           []*InstStringPtr `protobuf:"bytes,55,rep,name=package_list,json=packageList" json:"package_list,omitempty"`
	ActivateMessage       string           `protobuf:"bytes,56,opt,name=activate_message,json=activateMessage" json:"activate_message,omitempty"`
	PrepareCleanMessage   string           `protobuf:"bytes,57,opt,name=prepare_clean_message,json=prepareCleanMessage" json:"prepare_clean_message,omitempty"`
}

func (m *InstmgrShowInstallPrepare) Reset()                    { *m = InstmgrShowInstallPrepare{} }
func (m *InstmgrShowInstallPrepare) String() string            { return proto.CompactTextString(m) }
func (*InstmgrShowInstallPrepare) ProtoMessage()               {}
func (*InstmgrShowInstallPrepare) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InstmgrShowInstallPrepare) GetNoPrepareDone() string {
	if m != nil {
		return m.NoPrepareDone
	}
	return ""
}

func (m *InstmgrShowInstallPrepare) GetPreparedBootImage() string {
	if m != nil {
		return m.PreparedBootImage
	}
	return ""
}

func (m *InstmgrShowInstallPrepare) GetPreparedBootPartition() string {
	if m != nil {
		return m.PreparedBootPartition
	}
	return ""
}

func (m *InstmgrShowInstallPrepare) GetRestartType() string {
	if m != nil {
		return m.RestartType
	}
	return ""
}

func (m *InstmgrShowInstallPrepare) GetRpmList() []*InstStringPtr {
	if m != nil {
		return m.RpmList
	}
	return nil
}

func (m *InstmgrShowInstallPrepare) GetPackageList() []*InstStringPtr {
	if m != nil {
		return m.PackageList
	}
	return nil
}

func (m *InstmgrShowInstallPrepare) GetActivateMessage() string {
	if m != nil {
		return m.ActivateMessage
	}
	return ""
}

func (m *InstmgrShowInstallPrepare) GetPrepareCleanMessage() string {
	if m != nil {
		return m.PrepareCleanMessage
	}
	return ""
}

// inst_string_ptr
type InstStringPtr struct {
	Package string `protobuf:"bytes,1,opt,name=package" json:"package,omitempty"`
}

func (m *InstStringPtr) Reset()                    { *m = InstStringPtr{} }
func (m *InstStringPtr) String() string            { return proto.CompactTextString(m) }
func (*InstStringPtr) ProtoMessage()               {}
func (*InstStringPtr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *InstStringPtr) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func init() {
	proto.RegisterType((*InstmgrShowInstallPrepare_KEYS)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.prepare.instmgr_show_install_prepare_KEYS")
	proto.RegisterType((*InstmgrShowInstallPrepare)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.prepare.instmgr_show_install_prepare")
	proto.RegisterType((*InstStringPtr)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.prepare.inst_string_ptr")
}

func init() { proto.RegisterFile("instmgr_show_install_prepare.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0x4f, 0x4b, 0xeb, 0x40,
	0x14, 0xc5, 0x29, 0xef, 0xf1, 0xfa, 0x9c, 0x56, 0xaa, 0x23, 0x62, 0x16, 0x2e, 0xda, 0x08, 0x52,
	0x11, 0xb2, 0x68, 0xb5, 0xea, 0xd2, 0x7f, 0x0b, 0x51, 0xa1, 0x54, 0x37, 0xae, 0x86, 0x69, 0x3a,
	0xc6, 0xc1, 0x64, 0xee, 0x70, 0xe7, 0x6a, 0xed, 0x17, 0xf1, 0xf3, 0x4a, 0xa6, 0x99, 0xa2, 0x2e,
	0xba, 0x11, 0x97, 0xf7, 0x9c, 0xdf, 0xc9, 0x09, 0x27, 0x61, 0xb1, 0x36, 0x8e, 0x8a, 0x0c, 0x85,
	0x7b, 0x82, 0xa9, 0x28, 0x0f, 0x99, 0xe7, 0xc2, 0xa2, 0xb2, 0x12, 0x55, 0x62, 0x11, 0x08, 0xf8,
	0x69, 0xaa, 0x5d, 0x0a, 0x42, 0x83, 0x13, 0x6f, 0x28, 0x9c, 0xd5, 0xa8, 0x69, 0x81, 0x86, 0x3c,
	0x58, 0x85, 0x89, 0x83, 0x47, 0x9a, 0x4a, 0x54, 0xc1, 0x4d, 0xaa, 0x07, 0xc5, 0x3b, 0xac, 0xb3,
	0xac, 0x48, 0x5c, 0x5f, 0x3e, 0xdc, 0xc5, 0xef, 0x7f, 0xd9, 0xf6, 0x32, 0x8a, 0xef, 0xb2, 0x96,
	0x81, 0x45, 0x66, 0x02, 0x46, 0x45, 0xbd, 0x76, 0xad, 0xbb, 0x32, 0x5a, 0x35, 0x30, 0x9c, 0xab,
	0x17, 0x60, 0x14, 0x4f, 0xd8, 0x46, 0x05, 0x4d, 0xc4, 0x18, 0x80, 0x84, 0x2e, 0x64, 0xa6, 0xa2,
	0xbe, 0x67, 0xd7, 0x83, 0x75, 0x06, 0x40, 0x57, 0xa5, 0xc1, 0x07, 0x6c, 0xeb, 0x2b, 0x6f, 0x25,
	0x92, 0x26, 0x0d, 0x26, 0x3a, 0xf0, 0x99, 0xcd, 0xcf, 0x99, 0x61, 0x30, 0x79, 0x87, 0x35, 0x51,
	0x39, 0x92, 0x48, 0x82, 0x66, 0x56, 0x45, 0x87, 0x1e, 0x6e, 0x54, 0xda, 0xfd, 0xcc, 0x2a, 0x5e,
	0xb0, 0xff, 0x68, 0x0b, 0x91, 0x6b, 0x47, 0xd1, 0xa0, 0xfd, 0xa7, 0xdb, 0xe8, 0x8d, 0x92, 0x1f,
	0xcf, 0x99, 0x94, 0xb7, 0x70, 0x84, 0xda, 0x64, 0xc2, 0x12, 0x8e, 0xea, 0x68, 0x8b, 0x1b, 0xed,
	0x88, 0xbf, 0xb0, 0xa6, 0x95, 0xe9, 0xb3, 0xcc, 0xd4, 0xbc, 0xf2, 0xe8, 0xd7, 0x2a, 0x1b, 0x55,
	0x8f, 0xaf, 0xdd, 0x63, 0x6b, 0x32, 0x25, 0xfd, 0x2a, 0x49, 0x89, 0x42, 0x39, 0x57, 0xae, 0x7d,
	0xec, 0xc7, 0x68, 0x05, 0xfd, 0x76, 0x2e, 0xf3, 0x1e, 0x0b, 0x63, 0x8a, 0x34, 0x57, 0xd2, 0x2c,
	0xf8, 0x13, 0xcf, 0x87, 0x0f, 0x77, 0x5e, 0x7a, 0x55, 0x26, 0xde, 0x67, 0xad, 0x6f, 0xf5, 0x3c,
	0x62, 0xf5, 0xea, 0x05, 0xa2, 0x9a, 0x0f, 0x86, 0x73, 0xfc, 0xcf, 0xff, 0xb4, 0xfd, 0x8f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xc3, 0x2b, 0x12, 0x85, 0xda, 0x02, 0x00, 0x00,
}
