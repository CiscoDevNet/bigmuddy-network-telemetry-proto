// Code generated by protoc-gen-go.
// source: bgp_updgen_filtergrp_bag.proto
// DO NOT EDIT!

/*
Package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_standby_vrfs_vrf_afs_af_update_generation_filter_groups_update_generation_filter_group is a generated protocol buffer package.

It is generated from these files:
	bgp_updgen_filtergrp_bag.proto

It has these top-level messages:
	BgpUpdgenFiltergrpBag_KEYS
	BgpUpdgenFiltergrpBag
*/
package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_standby_vrfs_vrf_afs_af_update_generation_filter_groups_update_generation_filter_group

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// BGP Update generation Filter-group information
type BgpUpdgenFiltergrpBag_KEYS struct {
	InstanceName     string `protobuf:"bytes,1,opt,name=instance_name,json=instanceName" json:"instance_name,omitempty"`
	VrfName          string `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName" json:"vrf_name,omitempty"`
	AfName           string `protobuf:"bytes,3,opt,name=af_name,json=afName" json:"af_name,omitempty"`
	UpdateGroupIndex uint32 `protobuf:"varint,4,opt,name=update_group_index,json=updateGroupIndex" json:"update_group_index,omitempty"`
	SubGroupIndex    uint32 `protobuf:"varint,5,opt,name=sub_group_index,json=subGroupIndex" json:"sub_group_index,omitempty"`
	SubGroupId       uint32 `protobuf:"varint,6,opt,name=sub_group_id,json=subGroupId" json:"sub_group_id,omitempty"`
	FilterGroupIndex uint32 `protobuf:"varint,7,opt,name=filter_group_index,json=filterGroupIndex" json:"filter_group_index,omitempty"`
}

func (m *BgpUpdgenFiltergrpBag_KEYS) Reset()                    { *m = BgpUpdgenFiltergrpBag_KEYS{} }
func (m *BgpUpdgenFiltergrpBag_KEYS) String() string            { return proto.CompactTextString(m) }
func (*BgpUpdgenFiltergrpBag_KEYS) ProtoMessage()               {}
func (*BgpUpdgenFiltergrpBag_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BgpUpdgenFiltergrpBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *BgpUpdgenFiltergrpBag_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *BgpUpdgenFiltergrpBag_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *BgpUpdgenFiltergrpBag_KEYS) GetUpdateGroupIndex() uint32 {
	if m != nil {
		return m.UpdateGroupIndex
	}
	return 0
}

func (m *BgpUpdgenFiltergrpBag_KEYS) GetSubGroupIndex() uint32 {
	if m != nil {
		return m.SubGroupIndex
	}
	return 0
}

func (m *BgpUpdgenFiltergrpBag_KEYS) GetSubGroupId() uint32 {
	if m != nil {
		return m.SubGroupId
	}
	return 0
}

func (m *BgpUpdgenFiltergrpBag_KEYS) GetFilterGroupIndex() uint32 {
	if m != nil {
		return m.FilterGroupIndex
	}
	return 0
}

type BgpUpdgenFiltergrpBag struct {
	// ProcessID
	ProcessId uint32 `protobuf:"varint,50,opt,name=process_id,json=processId" json:"process_id,omitempty"`
	// VRF Name
	UpdateVrfName string `protobuf:"bytes,51,opt,name=update_vrf_name,json=updateVrfName" json:"update_vrf_name,omitempty"`
	// Address family identifier
	UpdateGroupAfName string `protobuf:"bytes,52,opt,name=update_group_af_name,json=updateGroupAfName" json:"update_group_af_name,omitempty"`
	// Filter-group index
	UpdateFilterGroupIndex uint32 `protobuf:"varint,53,opt,name=update_filter_group_index,json=updateFilterGroupIndex" json:"update_filter_group_index,omitempty"`
	// Parent Filter-group index
	ParentFilterGroupIndex uint32 `protobuf:"varint,54,opt,name=parent_filter_group_index,json=parentFilterGroupIndex" json:"parent_filter_group_index,omitempty"`
	// Sub-group index
	SubGroupIndex uint32 `protobuf:"varint,55,opt,name=sub_group_index,json=subGroupIndex" json:"sub_group_index,omitempty"`
	// Sub-group identifier
	SubGroupId uint32 `protobuf:"varint,56,opt,name=sub_group_id,json=subGroupId" json:"sub_group_id,omitempty"`
	// Parent Sub-group index
	ParentSubGroupIndex uint32 `protobuf:"varint,57,opt,name=parent_sub_group_index,json=parentSubGroupIndex" json:"parent_sub_group_index,omitempty"`
	// Parent Sub-group identifier
	ParentSubGroupId uint32 `protobuf:"varint,58,opt,name=parent_sub_group_id,json=parentSubGroupId" json:"parent_sub_group_id,omitempty"`
	// Update-group index
	UpdateGroupIndex uint32 `protobuf:"varint,59,opt,name=update_group_index,json=updateGroupIndex" json:"update_group_index,omitempty"`
	// Neighbor count
	NeighborCount uint32 `protobuf:"varint,60,opt,name=neighbor_count,json=neighborCount" json:"neighbor_count,omitempty"`
}

func (m *BgpUpdgenFiltergrpBag) Reset()                    { *m = BgpUpdgenFiltergrpBag{} }
func (m *BgpUpdgenFiltergrpBag) String() string            { return proto.CompactTextString(m) }
func (*BgpUpdgenFiltergrpBag) ProtoMessage()               {}
func (*BgpUpdgenFiltergrpBag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BgpUpdgenFiltergrpBag) GetProcessId() uint32 {
	if m != nil {
		return m.ProcessId
	}
	return 0
}

func (m *BgpUpdgenFiltergrpBag) GetUpdateVrfName() string {
	if m != nil {
		return m.UpdateVrfName
	}
	return ""
}

func (m *BgpUpdgenFiltergrpBag) GetUpdateGroupAfName() string {
	if m != nil {
		return m.UpdateGroupAfName
	}
	return ""
}

func (m *BgpUpdgenFiltergrpBag) GetUpdateFilterGroupIndex() uint32 {
	if m != nil {
		return m.UpdateFilterGroupIndex
	}
	return 0
}

func (m *BgpUpdgenFiltergrpBag) GetParentFilterGroupIndex() uint32 {
	if m != nil {
		return m.ParentFilterGroupIndex
	}
	return 0
}

func (m *BgpUpdgenFiltergrpBag) GetSubGroupIndex() uint32 {
	if m != nil {
		return m.SubGroupIndex
	}
	return 0
}

func (m *BgpUpdgenFiltergrpBag) GetSubGroupId() uint32 {
	if m != nil {
		return m.SubGroupId
	}
	return 0
}

func (m *BgpUpdgenFiltergrpBag) GetParentSubGroupIndex() uint32 {
	if m != nil {
		return m.ParentSubGroupIndex
	}
	return 0
}

func (m *BgpUpdgenFiltergrpBag) GetParentSubGroupId() uint32 {
	if m != nil {
		return m.ParentSubGroupId
	}
	return 0
}

func (m *BgpUpdgenFiltergrpBag) GetUpdateGroupIndex() uint32 {
	if m != nil {
		return m.UpdateGroupIndex
	}
	return 0
}

func (m *BgpUpdgenFiltergrpBag) GetNeighborCount() uint32 {
	if m != nil {
		return m.NeighborCount
	}
	return 0
}

func init() {
	proto.RegisterType((*BgpUpdgenFiltergrpBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.vrfs.vrf.afs.af.update_generation_filter_groups.update_generation_filter_group.bgp_updgen_filtergrp_bag_KEYS")
	proto.RegisterType((*BgpUpdgenFiltergrpBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.vrfs.vrf.afs.af.update_generation_filter_groups.update_generation_filter_group.bgp_updgen_filtergrp_bag")
}

func init() { proto.RegisterFile("bgp_updgen_filtergrp_bag.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 442 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x5b, 0x8b, 0xd4, 0x30,
	0x14, 0xa6, 0xeb, 0x3a, 0xe3, 0x1e, 0xb6, 0x5e, 0xba, 0xa2, 0xdd, 0x87, 0x95, 0x61, 0x45, 0xd9,
	0x07, 0xad, 0xe0, 0xac, 0x97, 0x51, 0x5f, 0x44, 0x54, 0x06, 0xc1, 0x87, 0x19, 0x10, 0x7c, 0x0a,
	0x49, 0x93, 0xc6, 0x80, 0x93, 0x84, 0xa4, 0x2d, 0xe3, 0x6f, 0xf0, 0xc9, 0x3f, 0xe0, 0x6f, 0x95,
	0x24, 0x6d, 0xed, 0x5c, 0x8a, 0xbe, 0xb4, 0xe1, 0x7c, 0xdf, 0x77, 0x2e, 0xdf, 0x49, 0xe0, 0x1e,
	0xe1, 0x1a, 0x55, 0x9a, 0x72, 0x26, 0x51, 0x21, 0xbe, 0x97, 0xcc, 0x70, 0xa3, 0x11, 0xc1, 0x3c,
	0xd3, 0x46, 0x95, 0x2a, 0xf9, 0x15, 0xe5, 0xc2, 0xe6, 0x0a, 0x09, 0x65, 0xd1, 0xda, 0x20, 0xa1,
	0xeb, 0x4b, 0xe4, 0x24, 0x4a, 0x33, 0x93, 0x11, 0xae, 0x33, 0x21, 0x6d, 0x89, 0x65, 0xce, 0x6c,
	0x77, 0xea, 0x0e, 0xc8, 0xfd, 0x28, 0xf9, 0x91, 0xd5, 0xa6, 0xb0, 0xee, 0x93, 0xe1, 0xc2, 0x66,
	0xb8, 0xc8, 0x2a, 0x4d, 0x71, 0xc9, 0x10, 0x67, 0x92, 0x19, 0x5c, 0x0a, 0xd5, 0x96, 0x46, 0xdc,
	0xa8, 0x4a, 0xdb, 0x7f, 0xe0, 0xe7, 0xbf, 0x0f, 0xe0, 0x6c, 0xa8, 0x6d, 0xf4, 0xe9, 0xfd, 0xd7,
	0x65, 0x72, 0x1f, 0xe2, 0xae, 0x09, 0x89, 0x57, 0x2c, 0x8d, 0x26, 0xd1, 0xc5, 0xd1, 0xe2, 0xb8,
	0x0d, 0x7e, 0xc6, 0x2b, 0x96, 0x9c, 0xc2, 0xb5, 0xda, 0x14, 0x01, 0x3f, 0xf0, 0xf8, 0xb8, 0x36,
	0x85, 0x87, 0xee, 0xc2, 0x18, 0x37, 0xc8, 0x15, 0x8f, 0x8c, 0x70, 0x00, 0x1e, 0x41, 0xd2, 0x36,
	0xe7, 0x5a, 0x41, 0x42, 0x52, 0xb6, 0x4e, 0x0f, 0x27, 0xd1, 0x45, 0xbc, 0xb8, 0x19, 0x90, 0x8f,
	0x0e, 0x98, 0xbb, 0x78, 0xf2, 0x10, 0x6e, 0xd8, 0x8a, 0x6c, 0x50, 0xaf, 0x7a, 0x6a, 0x6c, 0x2b,
	0xd2, 0xe3, 0x4d, 0xe0, 0xb8, 0xc7, 0xa3, 0xe9, 0xc8, 0x93, 0xa0, 0x23, 0x51, 0x57, 0xb7, 0x6f,
	0x41, 0x93, 0x6c, 0x1c, 0xea, 0x06, 0xe4, 0x6f, 0xbe, 0xf3, 0x9f, 0x87, 0x90, 0x0e, 0x19, 0x94,
	0x9c, 0x01, 0x68, 0xa3, 0x72, 0x66, 0xad, 0x2b, 0xf5, 0xd4, 0xa7, 0x38, 0x6a, 0x22, 0x73, 0xea,
	0x7a, 0x6e, 0x26, 0xec, 0xcc, 0x99, 0x7a, 0x0b, 0xe2, 0x10, 0xfe, 0xd2, 0x58, 0xf4, 0x04, 0x6e,
	0x6f, 0x38, 0xd1, 0xfa, 0x75, 0xe9, 0xc9, 0xb7, 0x7a, 0x5e, 0xbc, 0x0d, 0x82, 0x19, 0x9c, 0x36,
	0x82, 0x3d, 0x93, 0x3c, 0xf3, 0x6d, 0xdc, 0x09, 0x84, 0x0f, 0x5b, 0xf3, 0x38, 0xa9, 0xc6, 0x86,
	0xc9, 0x72, 0x9f, 0xf4, 0x79, 0x90, 0x06, 0xc2, 0x8e, 0x74, 0xcf, 0x0a, 0x5e, 0xfc, 0xcf, 0x0a,
	0x5e, 0xee, 0xac, 0x60, 0x0a, 0x4d, 0x0d, 0xb4, 0x9d, 0x70, 0xe6, 0xb9, 0x27, 0x01, 0x5d, 0x6e,
	0xa4, 0x7d, 0x0c, 0x27, 0xbb, 0x22, 0x9a, 0xbe, 0x0a, 0x8b, 0xdb, 0x52, 0xd0, 0x81, 0xeb, 0xf5,
	0x7a, 0xe0, 0x7a, 0x3d, 0x80, 0xeb, 0x92, 0x09, 0xfe, 0x8d, 0x28, 0x83, 0x72, 0x55, 0xc9, 0x32,
	0x7d, 0x13, 0x46, 0x6b, 0xa3, 0xef, 0x5c, 0x90, 0x8c, 0xfc, 0x4b, 0x9e, 0xfe, 0x09, 0x00, 0x00,
	0xff, 0xff, 0x54, 0x31, 0xc8, 0x47, 0xeb, 0x03, 0x00, 0x00,
}
