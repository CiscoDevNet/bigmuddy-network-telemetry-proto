// Code generated by protoc-gen-go.
// source: bgp_rpki_summary_bag.proto
// DO NOT EDIT!

/*
Package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_standby_rpki_summary is a generated protocol buffer package.

It is generated from these files:
	bgp_rpki_summary_bag.proto

It has these top-level messages:
	BgpRpkiSummaryBag_KEYS
	BgpRpkiSummaryBag
*/
package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_standby_rpki_summary

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BgpRpkiSummaryBag_KEYS struct {
	InstanceName string `protobuf:"bytes,1,opt,name=instance_name,json=instanceName" json:"instance_name,omitempty"`
}

func (m *BgpRpkiSummaryBag_KEYS) Reset()                    { *m = BgpRpkiSummaryBag_KEYS{} }
func (m *BgpRpkiSummaryBag_KEYS) String() string            { return proto.CompactTextString(m) }
func (*BgpRpkiSummaryBag_KEYS) ProtoMessage()               {}
func (*BgpRpkiSummaryBag_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BgpRpkiSummaryBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

type BgpRpkiSummaryBag struct {
	// Number of RPKI Servers configured
	Servers uint32 `protobuf:"varint,50,opt,name=servers" json:"servers,omitempty"`
	// Number of IPv4 ROA Nets
	Ipv4RoaNets uint32 `protobuf:"varint,51,opt,name=ipv4_roa_nets,json=ipv4RoaNets" json:"ipv4_roa_nets,omitempty"`
	// Number of IPv4 ROA Paths
	Ipv4RoaPaths uint32 `protobuf:"varint,52,opt,name=ipv4_roa_paths,json=ipv4RoaPaths" json:"ipv4_roa_paths,omitempty"`
	// Number of IPv6 ROA Nets
	Ipv6RoaNets uint32 `protobuf:"varint,53,opt,name=ipv6_roa_nets,json=ipv6RoaNets" json:"ipv6_roa_nets,omitempty"`
	// Number of IPv6 ROA Paths
	Ipv6RoaPaths uint32 `protobuf:"varint,54,opt,name=ipv6_roa_paths,json=ipv6RoaPaths" json:"ipv6_roa_paths,omitempty"`
	// RPKI Knob disabled
	RpkiDisabled bool `protobuf:"varint,55,opt,name=rpki_disabled,json=rpkiDisabled" json:"rpki_disabled,omitempty"`
	// Use RPKI validity for bestpath calculation
	RpkiUseValidity bool `protobuf:"varint,56,opt,name=rpki_use_validity,json=rpkiUseValidity" json:"rpki_use_validity,omitempty"`
	// Allow invalid paths
	RpkiAllowInvalid bool `protobuf:"varint,57,opt,name=rpki_allow_invalid,json=rpkiAllowInvalid" json:"rpki_allow_invalid,omitempty"`
	// Signal RPKI validity to iBGP peers
	RpkiSignalIbgp bool `protobuf:"varint,58,opt,name=rpki_signal_ibgp,json=rpkiSignalIbgp" json:"rpki_signal_ibgp,omitempty"`
}

func (m *BgpRpkiSummaryBag) Reset()                    { *m = BgpRpkiSummaryBag{} }
func (m *BgpRpkiSummaryBag) String() string            { return proto.CompactTextString(m) }
func (*BgpRpkiSummaryBag) ProtoMessage()               {}
func (*BgpRpkiSummaryBag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BgpRpkiSummaryBag) GetServers() uint32 {
	if m != nil {
		return m.Servers
	}
	return 0
}

func (m *BgpRpkiSummaryBag) GetIpv4RoaNets() uint32 {
	if m != nil {
		return m.Ipv4RoaNets
	}
	return 0
}

func (m *BgpRpkiSummaryBag) GetIpv4RoaPaths() uint32 {
	if m != nil {
		return m.Ipv4RoaPaths
	}
	return 0
}

func (m *BgpRpkiSummaryBag) GetIpv6RoaNets() uint32 {
	if m != nil {
		return m.Ipv6RoaNets
	}
	return 0
}

func (m *BgpRpkiSummaryBag) GetIpv6RoaPaths() uint32 {
	if m != nil {
		return m.Ipv6RoaPaths
	}
	return 0
}

func (m *BgpRpkiSummaryBag) GetRpkiDisabled() bool {
	if m != nil {
		return m.RpkiDisabled
	}
	return false
}

func (m *BgpRpkiSummaryBag) GetRpkiUseValidity() bool {
	if m != nil {
		return m.RpkiUseValidity
	}
	return false
}

func (m *BgpRpkiSummaryBag) GetRpkiAllowInvalid() bool {
	if m != nil {
		return m.RpkiAllowInvalid
	}
	return false
}

func (m *BgpRpkiSummaryBag) GetRpkiSignalIbgp() bool {
	if m != nil {
		return m.RpkiSignalIbgp
	}
	return false
}

func init() {
	proto.RegisterType((*BgpRpkiSummaryBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.rpki_summary.bgp_rpki_summary_bag_KEYS")
	proto.RegisterType((*BgpRpkiSummaryBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.rpki_summary.bgp_rpki_summary_bag")
}

func init() { proto.RegisterFile("bgp_rpki_summary_bag.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 334 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4d, 0x4b, 0xc3, 0x30,
	0x18, 0x80, 0xa9, 0x07, 0x3f, 0xe2, 0x3a, 0x67, 0xf0, 0x10, 0x3d, 0x8d, 0xcd, 0x43, 0x11, 0xe9,
	0xc1, 0xcd, 0xfa, 0x71, 0x52, 0xd0, 0xc3, 0x10, 0xa6, 0x74, 0x28, 0x78, 0x0a, 0xc9, 0x1a, 0x6a,
	0xb0, 0x6d, 0x42, 0xde, 0x6e, 0xba, 0x1f, 0xed, 0x7f, 0x90, 0x64, 0x5d, 0x9c, 0xb0, 0x53, 0xdf,
	0x3e, 0xef, 0xd3, 0xa7, 0x1f, 0x14, 0x9d, 0xf0, 0x5c, 0x53, 0xa3, 0x3f, 0x25, 0x85, 0x59, 0x59,
	0x32, 0xb3, 0xa0, 0x9c, 0xe5, 0xb1, 0x36, 0xaa, 0x56, 0xf8, 0x79, 0x2a, 0x61, 0xaa, 0xa8, 0x54,
	0x40, 0xbf, 0x0d, 0x95, 0x7a, 0x3e, 0xa4, 0xd6, 0x56, 0x5a, 0x98, 0x98, 0xe7, 0x3a, 0x96, 0x15,
	0xd4, 0xac, 0x9a, 0x0a, 0xf0, 0x93, 0x1f, 0xa8, 0x3d, 0x64, 0x7c, 0x11, 0xaf, 0xa7, 0x7b, 0x77,
	0xe8, 0x78, 0xd3, 0xed, 0xe8, 0xd3, 0xe3, 0xfb, 0x04, 0xf7, 0x51, 0xe8, 0xaf, 0xae, 0x58, 0x29,
	0x48, 0xd0, 0x0d, 0xa2, 0xbd, 0xb4, 0xb5, 0x82, 0x63, 0x56, 0x8a, 0xde, 0xcf, 0x16, 0x3a, 0xda,
	0x94, 0xc0, 0x04, 0xed, 0x80, 0x30, 0x73, 0x61, 0x80, 0x5c, 0x74, 0x83, 0x28, 0x4c, 0x57, 0xa7,
	0xb8, 0x87, 0x42, 0xf7, 0xe8, 0x46, 0x31, 0x5a, 0x89, 0x1a, 0xc8, 0xc0, 0xed, 0xf7, 0x2d, 0x4c,
	0x15, 0x1b, 0x8b, 0x1a, 0xf0, 0x29, 0x6a, 0x7b, 0x47, 0xb3, 0xfa, 0x03, 0xc8, 0xd0, 0x49, 0xad,
	0x46, 0x7a, 0xb1, 0xac, 0x29, 0x25, 0x7f, 0xa5, 0x4b, 0x5f, 0x4a, 0xfe, 0x97, 0x92, 0xb5, 0x52,
	0xe2, 0x4b, 0x89, 0x2f, 0xf5, 0x51, 0xe8, 0xde, 0x20, 0x93, 0xc0, 0x78, 0x21, 0x32, 0x72, 0xd5,
	0x0d, 0xa2, 0xdd, 0xb4, 0x65, 0xe1, 0x43, 0xc3, 0xf0, 0x19, 0x3a, 0x74, 0xd2, 0x0c, 0x04, 0x9d,
	0xb3, 0x42, 0x66, 0xb2, 0x5e, 0x90, 0x6b, 0x27, 0x1e, 0xd8, 0xc5, 0x2b, 0x88, 0xb7, 0x06, 0xe3,
	0x73, 0x84, 0x9d, 0xcb, 0x8a, 0x42, 0x7d, 0x51, 0x59, 0x39, 0x9f, 0xdc, 0x38, 0xb9, 0x63, 0x37,
	0xf7, 0x76, 0x31, 0x5a, 0x72, 0x1c, 0xa1, 0xce, 0xf2, 0x03, 0xca, 0xbc, 0x62, 0x05, 0x95, 0x3c,
	0xd7, 0xe4, 0xd6, 0xb9, 0x6d, 0xcb, 0x27, 0x0e, 0x8f, 0x78, 0xae, 0xf9, 0xb6, 0xfb, 0x13, 0x06,
	0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3b, 0xe8, 0x7a, 0x6f, 0x27, 0x02, 0x00, 0x00,
}
