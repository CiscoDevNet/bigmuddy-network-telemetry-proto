// Code generated by protoc-gen-go.
// source: bgp_label_bag.proto
// DO NOT EDIT!

/*
Package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_active_label_entries_label_entry is a generated protocol buffer package.

It is generated from these files:
	bgp_label_bag.proto

It has these top-level messages:
	BgpLabelBag_KEYS
	BgpLabelBag
	BgpEdmLabelEntry_
*/
package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_active_label_entries_label_entry

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BgpLabelBag_KEYS struct {
	InstanceName string `protobuf:"bytes,1,opt,name=instance_name,json=instanceName" json:"instance_name,omitempty"`
	Label        uint32 `protobuf:"varint,2,opt,name=label" json:"label,omitempty"`
}

func (m *BgpLabelBag_KEYS) Reset()                    { *m = BgpLabelBag_KEYS{} }
func (m *BgpLabelBag_KEYS) String() string            { return proto.CompactTextString(m) }
func (*BgpLabelBag_KEYS) ProtoMessage()               {}
func (*BgpLabelBag_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BgpLabelBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *BgpLabelBag_KEYS) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

type BgpLabelBag struct {
	Entry *BgpEdmLabelEntry_ `protobuf:"bytes,50,opt,name=entry" json:"entry,omitempty"`
}

func (m *BgpLabelBag) Reset()                    { *m = BgpLabelBag{} }
func (m *BgpLabelBag) String() string            { return proto.CompactTextString(m) }
func (*BgpLabelBag) ProtoMessage()               {}
func (*BgpLabelBag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BgpLabelBag) GetEntry() *BgpEdmLabelEntry_ {
	if m != nil {
		return m.Entry
	}
	return nil
}

type BgpEdmLabelEntry_ struct {
	Label    uint32 `protobuf:"varint,1,opt,name=label" json:"label,omitempty"`
	Rds      string `protobuf:"bytes,2,opt,name=rds" json:"rds,omitempty"`
	Vrf      string `protobuf:"bytes,3,opt,name=vrf" json:"vrf,omitempty"`
	Ip       string `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	Ip6      string `protobuf:"bytes,5,opt,name=ip6" json:"ip6,omitempty"`
	RpcSetId uint32 `protobuf:"varint,6,opt,name=rpc_set_id,json=rpcSetId" json:"rpc_set_id,omitempty"`
	Masklen  uint32 `protobuf:"varint,7,opt,name=masklen" json:"masklen,omitempty"`
	TsSec    uint32 `protobuf:"varint,8,opt,name=ts_sec,json=tsSec" json:"ts_sec,omitempty"`
	TsSsec   uint32 `protobuf:"varint,9,opt,name=ts_ssec,json=tsSsec" json:"ts_ssec,omitempty"`
	Info     uint32 `protobuf:"varint,10,opt,name=info" json:"info,omitempty"`
	Refcount uint32 `protobuf:"varint,11,opt,name=refcount" json:"refcount,omitempty"`
	Inactive bool   `protobuf:"varint,12,opt,name=inactive" json:"inactive,omitempty"`
}

func (m *BgpEdmLabelEntry_) Reset()                    { *m = BgpEdmLabelEntry_{} }
func (m *BgpEdmLabelEntry_) String() string            { return proto.CompactTextString(m) }
func (*BgpEdmLabelEntry_) ProtoMessage()               {}
func (*BgpEdmLabelEntry_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BgpEdmLabelEntry_) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *BgpEdmLabelEntry_) GetRds() string {
	if m != nil {
		return m.Rds
	}
	return ""
}

func (m *BgpEdmLabelEntry_) GetVrf() string {
	if m != nil {
		return m.Vrf
	}
	return ""
}

func (m *BgpEdmLabelEntry_) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *BgpEdmLabelEntry_) GetIp6() string {
	if m != nil {
		return m.Ip6
	}
	return ""
}

func (m *BgpEdmLabelEntry_) GetRpcSetId() uint32 {
	if m != nil {
		return m.RpcSetId
	}
	return 0
}

func (m *BgpEdmLabelEntry_) GetMasklen() uint32 {
	if m != nil {
		return m.Masklen
	}
	return 0
}

func (m *BgpEdmLabelEntry_) GetTsSec() uint32 {
	if m != nil {
		return m.TsSec
	}
	return 0
}

func (m *BgpEdmLabelEntry_) GetTsSsec() uint32 {
	if m != nil {
		return m.TsSsec
	}
	return 0
}

func (m *BgpEdmLabelEntry_) GetInfo() uint32 {
	if m != nil {
		return m.Info
	}
	return 0
}

func (m *BgpEdmLabelEntry_) GetRefcount() uint32 {
	if m != nil {
		return m.Refcount
	}
	return 0
}

func (m *BgpEdmLabelEntry_) GetInactive() bool {
	if m != nil {
		return m.Inactive
	}
	return false
}

func init() {
	proto.RegisterType((*BgpLabelBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.label_entries.label_entry.bgp_label_bag_KEYS")
	proto.RegisterType((*BgpLabelBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.label_entries.label_entry.bgp_label_bag")
	proto.RegisterType((*BgpEdmLabelEntry_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.label_entries.label_entry.bgp_edm_label_entry_")
}

func init() { proto.RegisterFile("bgp_label_bag.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 362 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0x41, 0xce, 0xd3, 0x30,
	0x10, 0x85, 0xe5, 0xb4, 0x4d, 0xd3, 0x69, 0x8b, 0x90, 0x29, 0xc2, 0x42, 0x2c, 0xa2, 0xb2, 0xc9,
	0x2a, 0x8b, 0x82, 0x7a, 0x03, 0x16, 0x08, 0x09, 0xa4, 0x64, 0x85, 0x58, 0x58, 0x89, 0x33, 0xa9,
	0x2c, 0x1a, 0xc7, 0xd8, 0x26, 0x82, 0x13, 0x70, 0x06, 0x2e, 0xc0, 0x39, 0x91, 0x9d, 0x36, 0x7f,
	0x2b, 0xfd, 0xdb, 0x7f, 0x37, 0xef, 0x9b, 0xc9, 0x7b, 0x79, 0x51, 0xe0, 0x45, 0x7d, 0xd2, 0xfc,
	0x5c, 0xd5, 0x78, 0xe6, 0x75, 0x75, 0xca, 0xb5, 0xe9, 0x5d, 0x4f, 0xbf, 0x09, 0x69, 0x45, 0xcf,
	0x65, 0x6f, 0xf9, 0x2f, 0xc3, 0xa5, 0x1e, 0xde, 0x73, 0x7f, 0xd6, 0x6b, 0x34, 0x79, 0x7d, 0xd2,
	0xb9, 0x54, 0xd6, 0x55, 0x4a, 0xa0, 0x9d, 0xa6, 0x69, 0xe0, 0x95, 0x70, 0x72, 0xc0, 0x7c, 0xb4,
	0x44, 0xe5, 0x8c, 0x44, 0x7b, 0xa3, 0x7e, 0xef, 0xbf, 0x00, 0xbd, 0xcb, 0xe4, 0x9f, 0x3e, 0x7c,
	0x2d, 0xe9, 0x5b, 0xd8, 0x4e, 0x16, 0xaa, 0xea, 0x90, 0x91, 0x94, 0x64, 0xab, 0x62, 0x73, 0x85,
	0x9f, 0xab, 0x0e, 0xe9, 0x0e, 0x16, 0xe1, 0x31, 0x16, 0xa5, 0x24, 0xdb, 0x16, 0xa3, 0xd8, 0xff,
	0x25, 0xb0, 0xbd, 0x73, 0xa4, 0x7f, 0x08, 0x2c, 0x42, 0x18, 0x3b, 0xa4, 0x24, 0x5b, 0x1f, 0x7e,
	0xe4, 0x4f, 0x58, 0xc8, 0x1b, 0x70, 0x6c, 0x3a, 0x7e, 0xc3, 0x78, 0x31, 0xe6, 0xef, 0xff, 0x45,
	0xb0, 0x7b, 0x6c, 0xff, 0x50, 0x85, 0xdc, 0x54, 0xa1, 0xcf, 0x61, 0x66, 0x1a, 0x1b, 0xea, 0xad,
	0x0a, 0x3f, 0x7a, 0x32, 0x98, 0x96, 0xcd, 0x46, 0x32, 0x98, 0x96, 0x3e, 0x83, 0x48, 0x6a, 0x36,
	0x0f, 0x20, 0x92, 0xda, 0x5f, 0x48, 0x7d, 0x64, 0x8b, 0xf1, 0x42, 0xea, 0x23, 0x7d, 0x03, 0x60,
	0xb4, 0xe0, 0x16, 0x1d, 0x97, 0x0d, 0x8b, 0x43, 0x40, 0x62, 0xb4, 0x28, 0xd1, 0x7d, 0x6c, 0x28,
	0x83, 0x65, 0x57, 0xd9, 0xef, 0x67, 0x54, 0x6c, 0x19, 0x56, 0x57, 0x49, 0x5f, 0x42, 0xec, 0x2c,
	0xb7, 0x28, 0x58, 0x32, 0xbe, 0x94, 0xb3, 0x25, 0x0a, 0xfa, 0x0a, 0x96, 0x1e, 0x7b, 0xbe, 0x0a,
	0x3c, 0x76, 0xb6, 0xb4, 0x28, 0x28, 0x85, 0xb9, 0x54, 0x6d, 0xcf, 0x20, 0xd0, 0x30, 0xd3, 0xd7,
	0x90, 0x18, 0x6c, 0x45, 0xff, 0x53, 0x39, 0xb6, 0xbe, 0x24, 0x5f, 0xb4, 0xdf, 0x49, 0x35, 0x7e,
	0x4e, 0xb6, 0x49, 0x49, 0x96, 0x14, 0x93, 0xae, 0xe3, 0xf0, 0xe7, 0xbd, 0xfb, 0x1f, 0x00, 0x00,
	0xff, 0xff, 0x30, 0xc8, 0x27, 0x9b, 0x90, 0x02, 0x00, 0x00,
}
