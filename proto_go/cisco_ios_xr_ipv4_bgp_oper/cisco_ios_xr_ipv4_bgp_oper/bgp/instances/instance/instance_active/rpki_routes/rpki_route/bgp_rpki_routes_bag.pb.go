// Code generated by protoc-gen-go.
// source: bgp_rpki_routes_bag.proto
// DO NOT EDIT!

/*
Package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_active_rpki_routes_rpki_route is a generated protocol buffer package.

It is generated from these files:
	bgp_rpki_routes_bag.proto

It has these top-level messages:
	BgpRpkiRoutesBag_KEYS
	BgpRpkiRoutesBag
	BgpEdmRpkiRouteType_
*/
package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_active_rpki_routes_rpki_route

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BgpRpkiRoutesBag_KEYS struct {
	InstanceName string `protobuf:"bytes,1,opt,name=instance_name,json=instanceName" json:"instance_name,omitempty"`
	AfName       string `protobuf:"bytes,2,opt,name=af_name,json=afName" json:"af_name,omitempty"`
	Address      string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	Minimum      uint32 `protobuf:"varint,4,opt,name=minimum" json:"minimum,omitempty"`
	Maximum      uint32 `protobuf:"varint,5,opt,name=maximum" json:"maximum,omitempty"`
}

func (m *BgpRpkiRoutesBag_KEYS) Reset()                    { *m = BgpRpkiRoutesBag_KEYS{} }
func (m *BgpRpkiRoutesBag_KEYS) String() string            { return proto.CompactTextString(m) }
func (*BgpRpkiRoutesBag_KEYS) ProtoMessage()               {}
func (*BgpRpkiRoutesBag_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BgpRpkiRoutesBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *BgpRpkiRoutesBag_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *BgpRpkiRoutesBag_KEYS) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *BgpRpkiRoutesBag_KEYS) GetMinimum() uint32 {
	if m != nil {
		return m.Minimum
	}
	return 0
}

func (m *BgpRpkiRoutesBag_KEYS) GetMaximum() uint32 {
	if m != nil {
		return m.Maximum
	}
	return 0
}

type BgpRpkiRoutesBag struct {
	// Array or RPKI routes
	RpkiRoutes []*BgpEdmRpkiRouteType_ `protobuf:"bytes,50,rep,name=rpki_routes,json=rpkiRoutes" json:"rpki_routes,omitempty"`
}

func (m *BgpRpkiRoutesBag) Reset()                    { *m = BgpRpkiRoutesBag{} }
func (m *BgpRpkiRoutesBag) String() string            { return proto.CompactTextString(m) }
func (*BgpRpkiRoutesBag) ProtoMessage()               {}
func (*BgpRpkiRoutesBag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BgpRpkiRoutesBag) GetRpkiRoutes() []*BgpEdmRpkiRouteType_ {
	if m != nil {
		return m.RpkiRoutes
	}
	return nil
}

type BgpEdmRpkiRouteType_ struct {
	// Address Family
	AfName string `protobuf:"bytes,1,opt,name=af_name,json=afName" json:"af_name,omitempty"`
	// Address Prefix
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	// Minimum Prefix Length
	MinPrefixLen uint32 `protobuf:"varint,3,opt,name=min_prefix_len,json=minPrefixLen" json:"min_prefix_len,omitempty"`
	// Maximum Prefix Length
	MaxPrefixLen uint32 `protobuf:"varint,4,opt,name=max_prefix_len,json=maxPrefixLen" json:"max_prefix_len,omitempty"`
	// AS number
	As uint32 `protobuf:"varint,5,opt,name=as" json:"as,omitempty"`
	// Refcount
	Refcount uint32 `protobuf:"varint,6,opt,name=refcount" json:"refcount,omitempty"`
	// Source Server
	Server string `protobuf:"bytes,7,opt,name=server" json:"server,omitempty"`
	// ROA is stale
	Stale bool `protobuf:"varint,8,opt,name=stale" json:"stale,omitempty"`
}

func (m *BgpEdmRpkiRouteType_) Reset()                    { *m = BgpEdmRpkiRouteType_{} }
func (m *BgpEdmRpkiRouteType_) String() string            { return proto.CompactTextString(m) }
func (*BgpEdmRpkiRouteType_) ProtoMessage()               {}
func (*BgpEdmRpkiRouteType_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BgpEdmRpkiRouteType_) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *BgpEdmRpkiRouteType_) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *BgpEdmRpkiRouteType_) GetMinPrefixLen() uint32 {
	if m != nil {
		return m.MinPrefixLen
	}
	return 0
}

func (m *BgpEdmRpkiRouteType_) GetMaxPrefixLen() uint32 {
	if m != nil {
		return m.MaxPrefixLen
	}
	return 0
}

func (m *BgpEdmRpkiRouteType_) GetAs() uint32 {
	if m != nil {
		return m.As
	}
	return 0
}

func (m *BgpEdmRpkiRouteType_) GetRefcount() uint32 {
	if m != nil {
		return m.Refcount
	}
	return 0
}

func (m *BgpEdmRpkiRouteType_) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *BgpEdmRpkiRouteType_) GetStale() bool {
	if m != nil {
		return m.Stale
	}
	return false
}

func init() {
	proto.RegisterType((*BgpRpkiRoutesBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.rpki_routes.rpki_route.bgp_rpki_routes_bag_KEYS")
	proto.RegisterType((*BgpRpkiRoutesBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.rpki_routes.rpki_route.bgp_rpki_routes_bag")
	proto.RegisterType((*BgpEdmRpkiRouteType_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.rpki_routes.rpki_route.bgp_edm_rpki_route_type_")
}

func init() { proto.RegisterFile("bgp_rpki_routes_bag.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0xbf, 0x4e, 0xeb, 0x30,
	0x14, 0xc6, 0xe5, 0xb4, 0x4d, 0x7b, 0xdd, 0x3f, 0x43, 0xee, 0xd5, 0xc5, 0x30, 0x45, 0x85, 0x21,
	0x53, 0x86, 0xc2, 0x2b, 0x30, 0x81, 0x10, 0x0a, 0x0b, 0x4c, 0xd6, 0x49, 0x7a, 0x52, 0x59, 0xd4,
	0x8e, 0x65, 0xa7, 0x55, 0x78, 0x0e, 0xde, 0x81, 0x85, 0xc7, 0xe3, 0x05, 0x50, 0x9c, 0x34, 0x04,
	0xa9, 0x8c, 0x6c, 0xe7, 0xfb, 0x7e, 0x5f, 0x4e, 0x8e, 0x3e, 0x99, 0x9e, 0xa6, 0x1b, 0xcd, 0x8d,
	0x7e, 0x16, 0xdc, 0x14, 0xbb, 0x12, 0x2d, 0x4f, 0x61, 0x13, 0x6b, 0x53, 0x94, 0x45, 0xf0, 0x98,
	0x09, 0x9b, 0x15, 0x5c, 0x14, 0x96, 0x57, 0x86, 0x0b, 0xbd, 0xbf, 0xe2, 0x75, 0xb8, 0xd0, 0x68,
	0xe2, 0x74, 0xa3, 0x63, 0xa1, 0x6c, 0x09, 0x2a, 0x43, 0xdb, 0x4d, 0xdd, 0xc0, 0x21, 0x2b, 0xc5,
	0x1e, 0xe3, 0xde, 0xe2, 0xde, 0xbc, 0x7c, 0x23, 0x94, 0x1d, 0xf9, 0x2f, 0xbf, 0xb9, 0x7e, 0x7a,
	0x08, 0xce, 0xe9, 0xbc, 0x5b, 0xa3, 0x40, 0x22, 0x23, 0x21, 0x89, 0xfe, 0x24, 0xb3, 0x83, 0x79,
	0x07, 0x12, 0x83, 0x13, 0x3a, 0x86, 0xbc, 0xc1, 0x9e, 0xc3, 0x3e, 0xe4, 0x0e, 0x30, 0x3a, 0x86,
	0xf5, 0xda, 0xa0, 0xb5, 0x6c, 0xe0, 0xc0, 0x41, 0xd6, 0x44, 0x0a, 0x25, 0xe4, 0x4e, 0xb2, 0x61,
	0x48, 0xa2, 0x79, 0x72, 0x90, 0x8e, 0x40, 0xe5, 0xc8, 0xa8, 0x25, 0x8d, 0x5c, 0xbe, 0x13, 0xfa,
	0xf7, 0xc8, 0xa1, 0xc1, 0x2b, 0xa1, 0xd3, 0x9e, 0xc7, 0x56, 0xe1, 0x20, 0x9a, 0xae, 0x4c, 0xfc,
	0x5b, 0x8d, 0xd5, 0x5f, 0x73, 0x5c, 0xcb, 0xde, 0x21, 0xbc, 0x7c, 0xd1, 0xc8, 0x13, 0x5a, 0x3b,
	0x89, 0xcb, 0x2f, 0x3f, 0xda, 0x5a, 0x8f, 0x05, 0xfb, 0x8d, 0x91, 0x9f, 0x1a, 0xf3, 0xbe, 0x37,
	0x76, 0x41, 0x17, 0x52, 0x28, 0xae, 0x0d, 0xe6, 0xa2, 0xe2, 0x5b, 0x54, 0xae, 0xd2, 0x79, 0x32,
	0x93, 0x42, 0xdd, 0x3b, 0xf3, 0x16, 0x95, 0x4b, 0x41, 0xd5, 0x4f, 0x0d, 0xdb, 0x14, 0x54, 0x5f,
	0xa9, 0x05, 0xf5, 0xc0, 0xb6, 0xf5, 0x7a, 0x60, 0x83, 0x33, 0x3a, 0x31, 0x98, 0x67, 0xc5, 0x4e,
	0x95, 0xcc, 0x77, 0x6e, 0xa7, 0x83, 0xff, 0xd4, 0xb7, 0x68, 0xf6, 0x68, 0xd8, 0xb8, 0xb9, 0xb4,
	0x51, 0xc1, 0x3f, 0x3a, 0xb2, 0x25, 0x6c, 0x91, 0x4d, 0x42, 0x12, 0x4d, 0x92, 0x46, 0xa4, 0xbe,
	0x7b, 0xad, 0x97, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xba, 0xe1, 0x9c, 0xfc, 0xca, 0x02, 0x00,
	0x00,
}
