// Code generated by protoc-gen-go.
// source: bgp_label_rpf_bag.proto
// DO NOT EDIT!

/*
Package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_active_label_rpf_entries_label_rpf_entry is a generated protocol buffer package.

It is generated from these files:
	bgp_label_rpf_bag.proto

It has these top-level messages:
	BgpLabelRpfBag_KEYS
	BgpLabelRpfBag
	BgpEdmLabelRpfNbr_
	BgpEdmLabelRpfInfo_
*/
package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_active_label_rpf_entries_label_rpf_entry

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BgpLabelRpfBag_KEYS struct {
	InstanceName string `protobuf:"bytes,1,opt,name=instance_name,json=instanceName" json:"instance_name,omitempty"`
	Label        uint32 `protobuf:"varint,2,opt,name=label" json:"label,omitempty"`
}

func (m *BgpLabelRpfBag_KEYS) Reset()                    { *m = BgpLabelRpfBag_KEYS{} }
func (m *BgpLabelRpfBag_KEYS) String() string            { return proto.CompactTextString(m) }
func (*BgpLabelRpfBag_KEYS) ProtoMessage()               {}
func (*BgpLabelRpfBag_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BgpLabelRpfBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *BgpLabelRpfBag_KEYS) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

type BgpLabelRpfBag struct {
	Rpf *BgpEdmLabelRpfInfo_ `protobuf:"bytes,50,opt,name=rpf" json:"rpf,omitempty"`
}

func (m *BgpLabelRpfBag) Reset()                    { *m = BgpLabelRpfBag{} }
func (m *BgpLabelRpfBag) String() string            { return proto.CompactTextString(m) }
func (*BgpLabelRpfBag) ProtoMessage()               {}
func (*BgpLabelRpfBag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BgpLabelRpfBag) GetRpf() *BgpEdmLabelRpfInfo_ {
	if m != nil {
		return m.Rpf
	}
	return nil
}

type BgpEdmLabelRpfNbr_ struct {
	Ip    string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Ip6   string `protobuf:"bytes,2,opt,name=ip6" json:"ip6,omitempty"`
	Count uint32 `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	Flags uint32 `protobuf:"varint,4,opt,name=flags" json:"flags,omitempty"`
}

func (m *BgpEdmLabelRpfNbr_) Reset()                    { *m = BgpEdmLabelRpfNbr_{} }
func (m *BgpEdmLabelRpfNbr_) String() string            { return proto.CompactTextString(m) }
func (*BgpEdmLabelRpfNbr_) ProtoMessage()               {}
func (*BgpEdmLabelRpfNbr_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BgpEdmLabelRpfNbr_) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *BgpEdmLabelRpfNbr_) GetIp6() string {
	if m != nil {
		return m.Ip6
	}
	return ""
}

func (m *BgpEdmLabelRpfNbr_) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *BgpEdmLabelRpfNbr_) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

type BgpEdmLabelRpfInfo_ struct {
	Label   uint32                `protobuf:"varint,1,opt,name=label" json:"label,omitempty"`
	Flags   uint32                `protobuf:"varint,2,opt,name=flags" json:"flags,omitempty"`
	Install string                `protobuf:"bytes,3,opt,name=install" json:"install,omitempty"`
	RpfList []*BgpEdmLabelRpfNbr_ `protobuf:"bytes,4,rep,name=rpf_list,json=rpfList" json:"rpf_list,omitempty"`
}

func (m *BgpEdmLabelRpfInfo_) Reset()                    { *m = BgpEdmLabelRpfInfo_{} }
func (m *BgpEdmLabelRpfInfo_) String() string            { return proto.CompactTextString(m) }
func (*BgpEdmLabelRpfInfo_) ProtoMessage()               {}
func (*BgpEdmLabelRpfInfo_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BgpEdmLabelRpfInfo_) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *BgpEdmLabelRpfInfo_) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *BgpEdmLabelRpfInfo_) GetInstall() string {
	if m != nil {
		return m.Install
	}
	return ""
}

func (m *BgpEdmLabelRpfInfo_) GetRpfList() []*BgpEdmLabelRpfNbr_ {
	if m != nil {
		return m.RpfList
	}
	return nil
}

func init() {
	proto.RegisterType((*BgpLabelRpfBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.label_rpf_entries.label_rpf_entry.bgp_label_rpf_bag_KEYS")
	proto.RegisterType((*BgpLabelRpfBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.label_rpf_entries.label_rpf_entry.bgp_label_rpf_bag")
	proto.RegisterType((*BgpEdmLabelRpfNbr_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.label_rpf_entries.label_rpf_entry.bgp_edm_label_rpf_nbr_")
	proto.RegisterType((*BgpEdmLabelRpfInfo_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.label_rpf_entries.label_rpf_entry.bgp_edm_label_rpf_info_")
}

func init() { proto.RegisterFile("bgp_label_rpf_bag.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x92, 0xbd, 0x4e, 0xc3, 0x30,
	0x14, 0x85, 0xe5, 0xa4, 0x50, 0xea, 0x52, 0x04, 0x16, 0x02, 0x8f, 0x51, 0x58, 0x32, 0x65, 0x28,
	0x88, 0x37, 0x60, 0x02, 0x31, 0xa4, 0x13, 0x93, 0xe5, 0x04, 0x27, 0xba, 0x92, 0x6b, 0x5b, 0xb6,
	0xa9, 0x40, 0xf0, 0x0c, 0x8c, 0x3c, 0x01, 0x0f, 0xc9, 0x88, 0xec, 0xd0, 0x1f, 0x28, 0x33, 0x6c,
	0xf7, 0x9c, 0x24, 0x9f, 0xef, 0x39, 0x31, 0x3e, 0xad, 0x3b, 0xc3, 0x24, 0xaf, 0x85, 0x64, 0xd6,
	0xb4, 0xac, 0xe6, 0x5d, 0x69, 0xac, 0xf6, 0x9a, 0x34, 0x0d, 0xb8, 0x46, 0x33, 0xd0, 0x8e, 0x3d,
	0x5a, 0x06, 0x66, 0x71, 0xc1, 0xc2, 0xab, 0xda, 0x08, 0x5b, 0xd6, 0x9d, 0x29, 0x41, 0x39, 0xcf,
	0x55, 0x23, 0xdc, 0x6a, 0x5a, 0x0d, 0x8c, 0x37, 0x1e, 0x16, 0xa2, 0x5c, 0x63, 0x85, 0xf2, 0x16,
	0x84, 0xfb, 0xe1, 0x3c, 0xe5, 0x33, 0x7c, 0xb2, 0x75, 0x3e, 0xbb, 0xbe, 0xba, 0x9b, 0x91, 0x33,
	0x3c, 0x59, 0xe1, 0x14, 0x9f, 0x0b, 0x8a, 0x32, 0x54, 0x8c, 0xaa, 0xfd, 0xa5, 0x79, 0xcb, 0xe7,
	0x82, 0x1c, 0xe3, 0x9d, 0xf8, 0x29, 0x4d, 0x32, 0x54, 0x4c, 0xaa, 0x5e, 0xe4, 0xef, 0x08, 0x1f,
	0x6d, 0x51, 0xc9, 0x2b, 0xc2, 0xa9, 0x35, 0x2d, 0x9d, 0x66, 0xa8, 0x18, 0x4f, 0x5f, 0xca, 0x3f,
	0x88, 0x17, 0x40, 0x4c, 0xdc, 0xcf, 0x37, 0x36, 0x01, 0xd5, 0x6a, 0x56, 0x85, 0x45, 0xf2, 0xb6,
	0xcf, 0xfe, 0xfd, 0xb9, 0xaa, 0x2d, 0x23, 0x07, 0x38, 0x01, 0xf3, 0x15, 0x38, 0x01, 0x43, 0x0e,
	0x71, 0x0a, 0xe6, 0x32, 0x86, 0x1c, 0x55, 0x61, 0x0c, 0xc1, 0x1b, 0xfd, 0xa0, 0x3c, 0x4d, 0xfb,
	0xe0, 0x51, 0x04, 0xb7, 0x95, 0xbc, 0x73, 0x74, 0xd0, 0xbb, 0x51, 0xe4, 0x1f, 0xa8, 0xff, 0xc9,
	0xbf, 0x2c, 0xb2, 0x2e, 0x10, 0x6d, 0x14, 0xb8, 0xe6, 0x24, 0x1b, 0x1c, 0x42, 0xf1, 0x30, 0x36,
	0x20, 0x65, 0x3c, 0x75, 0x54, 0x2d, 0x25, 0x79, 0x43, 0x78, 0x2f, 0x30, 0x25, 0x38, 0x4f, 0x07,
	0x59, 0x5a, 0x8c, 0xa7, 0xcf, 0xff, 0xd4, 0x6f, 0xe8, 0xaf, 0x1a, 0x5a, 0xd3, 0xde, 0x80, 0xf3,
	0xf5, 0x6e, 0xbc, 0xca, 0xe7, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x48, 0xa4, 0xb0, 0xe5,
	0x02, 0x00, 0x00,
}
