// Code generated by protoc-gen-go.
// source: bgp_label_summary_bag.proto
// DO NOT EDIT!

/*
Package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_active_label_summary is a generated protocol buffer package.

It is generated from these files:
	bgp_label_summary_bag.proto

It has these top-level messages:
	BgpLabelSummaryBag_KEYS
	BgpLabelSummaryBag
	BgpEdmLabelStats_
*/
package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_active_label_summary

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BgpLabelSummaryBag_KEYS struct {
	InstanceName string `protobuf:"bytes,1,opt,name=instance_name,json=instanceName" json:"instance_name,omitempty"`
}

func (m *BgpLabelSummaryBag_KEYS) Reset()                    { *m = BgpLabelSummaryBag_KEYS{} }
func (m *BgpLabelSummaryBag_KEYS) String() string            { return proto.CompactTextString(m) }
func (*BgpLabelSummaryBag_KEYS) ProtoMessage()               {}
func (*BgpLabelSummaryBag_KEYS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BgpLabelSummaryBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

type BgpLabelSummaryBag struct {
	Stats *BgpEdmLabelStats_ `protobuf:"bytes,50,opt,name=stats" json:"stats,omitempty"`
}

func (m *BgpLabelSummaryBag) Reset()                    { *m = BgpLabelSummaryBag{} }
func (m *BgpLabelSummaryBag) String() string            { return proto.CompactTextString(m) }
func (*BgpLabelSummaryBag) ProtoMessage()               {}
func (*BgpLabelSummaryBag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BgpLabelSummaryBag) GetStats() *BgpEdmLabelStats_ {
	if m != nil {
		return m.Stats
	}
	return nil
}

type BgpEdmLabelStats_ struct {
	NBgpLabelAllocTypeGblIpv4 uint32 `protobuf:"varint,1,opt,name=n_bgp_label_alloc_type_gbl_ipv4,json=nBgpLabelAllocTypeGblIpv4" json:"n_bgp_label_alloc_type_gbl_ipv4,omitempty"`
	NBgpLabelAllocTypeGblIpv6 uint32 `protobuf:"varint,2,opt,name=n_bgp_label_alloc_type_gbl_ipv6,json=nBgpLabelAllocTypeGblIpv6" json:"n_bgp_label_alloc_type_gbl_ipv6,omitempty"`
	NBgpLabelAllocTypeVrfIpv4 uint32 `protobuf:"varint,3,opt,name=n_bgp_label_alloc_type_vrf_ipv4,json=nBgpLabelAllocTypeVrfIpv4" json:"n_bgp_label_alloc_type_vrf_ipv4,omitempty"`
	NBgpLabelAllocTypeVrfIpv6 uint32 `protobuf:"varint,4,opt,name=n_bgp_label_alloc_type_vrf_ipv6,json=nBgpLabelAllocTypeVrfIpv6" json:"n_bgp_label_alloc_type_vrf_ipv6,omitempty"`
	NBgpLabelAllocTypeCeIpv4  uint32 `protobuf:"varint,5,opt,name=n_bgp_label_alloc_type_ce_ipv4,json=nBgpLabelAllocTypeCeIpv4" json:"n_bgp_label_alloc_type_ce_ipv4,omitempty"`
	NBgpLabelAllocTypeCeIpv6  uint32 `protobuf:"varint,6,opt,name=n_bgp_label_alloc_type_ce_ipv6,json=nBgpLabelAllocTypeCeIpv6" json:"n_bgp_label_alloc_type_ce_ipv6,omitempty"`
	NBgpLabelAllocTypeTblIpv4 uint32 `protobuf:"varint,7,opt,name=n_bgp_label_alloc_type_tbl_ipv4,json=nBgpLabelAllocTypeTblIpv4" json:"n_bgp_label_alloc_type_tbl_ipv4,omitempty"`
	NBgpLabelAllocTypeTblIpv6 uint32 `protobuf:"varint,8,opt,name=n_bgp_label_alloc_type_tbl_ipv6,json=nBgpLabelAllocTypeTblIpv6" json:"n_bgp_label_alloc_type_tbl_ipv6,omitempty"`
	NBgpLabelAllocTypeVpnIpv4 uint32 `protobuf:"varint,9,opt,name=n_bgp_label_alloc_type_vpn_ipv4,json=nBgpLabelAllocTypeVpnIpv4" json:"n_bgp_label_alloc_type_vpn_ipv4,omitempty"`
	NBgpLabelAllocTypeVpnIpv6 uint32 `protobuf:"varint,10,opt,name=n_bgp_label_alloc_type_vpn_ipv6,json=nBgpLabelAllocTypeVpnIpv6" json:"n_bgp_label_alloc_type_vpn_ipv6,omitempty"`
	NBgpLabelAllocTypeAsbrNh  uint32 `protobuf:"varint,11,opt,name=n_bgp_label_alloc_type_asbr_nh,json=nBgpLabelAllocTypeAsbrNh" json:"n_bgp_label_alloc_type_asbr_nh,omitempty"`
	NBgpLabels                uint32 `protobuf:"varint,12,opt,name=n_bgp_labels,json=nBgpLabels" json:"n_bgp_labels,omitempty"`
	BgpLabelRpfLists          uint32 `protobuf:"varint,13,opt,name=bgp_label_rpf_lists,json=bgpLabelRpfLists" json:"bgp_label_rpf_lists,omitempty"`
	BgpLabelRpfNodes          uint32 `protobuf:"varint,14,opt,name=bgp_label_rpf_nodes,json=bgpLabelRpfNodes" json:"bgp_label_rpf_nodes,omitempty"`
}

func (m *BgpEdmLabelStats_) Reset()                    { *m = BgpEdmLabelStats_{} }
func (m *BgpEdmLabelStats_) String() string            { return proto.CompactTextString(m) }
func (*BgpEdmLabelStats_) ProtoMessage()               {}
func (*BgpEdmLabelStats_) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BgpEdmLabelStats_) GetNBgpLabelAllocTypeGblIpv4() uint32 {
	if m != nil {
		return m.NBgpLabelAllocTypeGblIpv4
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNBgpLabelAllocTypeGblIpv6() uint32 {
	if m != nil {
		return m.NBgpLabelAllocTypeGblIpv6
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNBgpLabelAllocTypeVrfIpv4() uint32 {
	if m != nil {
		return m.NBgpLabelAllocTypeVrfIpv4
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNBgpLabelAllocTypeVrfIpv6() uint32 {
	if m != nil {
		return m.NBgpLabelAllocTypeVrfIpv6
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNBgpLabelAllocTypeCeIpv4() uint32 {
	if m != nil {
		return m.NBgpLabelAllocTypeCeIpv4
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNBgpLabelAllocTypeCeIpv6() uint32 {
	if m != nil {
		return m.NBgpLabelAllocTypeCeIpv6
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNBgpLabelAllocTypeTblIpv4() uint32 {
	if m != nil {
		return m.NBgpLabelAllocTypeTblIpv4
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNBgpLabelAllocTypeTblIpv6() uint32 {
	if m != nil {
		return m.NBgpLabelAllocTypeTblIpv6
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNBgpLabelAllocTypeVpnIpv4() uint32 {
	if m != nil {
		return m.NBgpLabelAllocTypeVpnIpv4
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNBgpLabelAllocTypeVpnIpv6() uint32 {
	if m != nil {
		return m.NBgpLabelAllocTypeVpnIpv6
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNBgpLabelAllocTypeAsbrNh() uint32 {
	if m != nil {
		return m.NBgpLabelAllocTypeAsbrNh
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNBgpLabels() uint32 {
	if m != nil {
		return m.NBgpLabels
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetBgpLabelRpfLists() uint32 {
	if m != nil {
		return m.BgpLabelRpfLists
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetBgpLabelRpfNodes() uint32 {
	if m != nil {
		return m.BgpLabelRpfNodes
	}
	return 0
}

func init() {
	proto.RegisterType((*BgpLabelSummaryBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.label_summary.bgp_label_summary_bag_KEYS")
	proto.RegisterType((*BgpLabelSummaryBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.label_summary.bgp_label_summary_bag")
	proto.RegisterType((*BgpEdmLabelStats_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.label_summary.bgp_edm_label_stats_")
}

func init() { proto.RegisterFile("bgp_label_summary_bag.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xc1, 0x6b, 0xdb, 0x30,
	0x18, 0xc5, 0xf1, 0xb6, 0x64, 0x8b, 0x92, 0x8c, 0xe1, 0x6d, 0xa0, 0x6d, 0xb0, 0x85, 0xec, 0x92,
	0xcb, 0x7c, 0xc8, 0x82, 0xcf, 0x4b, 0xc6, 0x18, 0xa5, 0x21, 0x05, 0x37, 0x14, 0x7a, 0xfa, 0x90,
	0x1c, 0xd9, 0x31, 0xd8, 0xb2, 0x90, 0x54, 0xd3, 0xd0, 0x7f, 0xa3, 0x7f, 0x6e, 0x0f, 0xc5, 0x76,
	0xec, 0xb4, 0x24, 0x96, 0x2f, 0xbd, 0x89, 0xcf, 0x4f, 0xbf, 0xf7, 0xf4, 0x3d, 0x30, 0xfa, 0x46,
	0x43, 0x01, 0x31, 0xa1, 0x2c, 0x06, 0x75, 0x93, 0x24, 0x44, 0xee, 0x80, 0x92, 0xd0, 0x11, 0x32,
	0xd5, 0xa9, 0x7d, 0xe1, 0x47, 0xca, 0x4f, 0x21, 0x4a, 0x15, 0xdc, 0x4a, 0x88, 0x44, 0x36, 0x83,
	0x5c, 0x9e, 0x0a, 0x26, 0x1d, 0x1a, 0x0a, 0x27, 0xe2, 0x4a, 0x13, 0xee, 0x33, 0x55, 0x9f, 0xea,
	0x03, 0x10, 0x5f, 0x47, 0x19, 0x73, 0x9e, 0xa1, 0xc7, 0x73, 0xf4, 0xf5, 0xa4, 0x1f, 0x9c, 0xff,
	0xbb, 0xbe, 0xb4, 0x7f, 0xa2, 0x61, 0x7d, 0x9d, 0x93, 0x84, 0x61, 0x6b, 0x64, 0x4d, 0x7a, 0xde,
	0xa0, 0x1a, 0xae, 0x48, 0xc2, 0xc6, 0xf7, 0x16, 0xfa, 0x7c, 0x92, 0x61, 0xdf, 0xa1, 0x8e, 0xd2,
	0x44, 0x2b, 0x3c, 0x1d, 0x59, 0x93, 0xfe, 0x94, 0x39, 0x2f, 0x9c, 0x3e, 0xbf, 0x04, 0x6c, 0x93,
	0x54, 0xd6, 0xb9, 0x17, 0x78, 0xa5, 0xe7, 0xf8, 0xa1, 0x8b, 0x3e, 0x9d, 0xfa, 0x6e, 0x2f, 0xd0,
	0x0f, 0x0e, 0x87, 0xc0, 0x24, 0x8e, 0x53, 0x1f, 0xf4, 0x4e, 0x30, 0x08, 0x69, 0x5c, 0xa4, 0x2a,
	0x9e, 0x39, 0xf4, 0xbe, 0xf0, 0x45, 0x28, 0x96, 0xb9, 0x68, 0x9e, 0x6b, 0xd6, 0x3b, 0xc1, 0xfe,
	0xd3, 0xf8, 0x4c, 0x64, 0xb3, 0x76, 0x86, 0x8b, 0x5f, 0x99, 0x19, 0xae, 0x81, 0x91, 0xc9, 0xa0,
	0xcc, 0xf1, 0xba, 0x89, 0x71, 0x25, 0x83, 0x96, 0x1c, 0x7b, 0x86, 0x8b, 0xdf, 0x98, 0x19, 0xae,
	0xfd, 0x07, 0x7d, 0x6f, 0x60, 0xf8, 0xac, 0x8c, 0xd1, 0x29, 0x10, 0xf8, 0x18, 0xf1, 0x97, 0x15,
	0x29, 0xda, 0x08, 0x2e, 0xee, 0x1a, 0x09, 0xa6, 0x5d, 0xe8, 0xaa, 0x93, 0xb7, 0x4d, 0xef, 0x58,
	0xb7, 0x76, 0xa2, 0xab, 0x4e, 0xde, 0x99, 0x19, 0xc6, 0x4e, 0x04, 0x2f, 0x73, 0xf4, 0x1a, 0xf7,
	0x29, 0x78, 0x5b, 0x27, 0x25, 0xc3, 0xc5, 0xc8, 0xcc, 0x30, 0x75, 0x42, 0x14, 0x95, 0xc0, 0xb7,
	0xb8, 0xdf, 0xb4, 0xd1, 0xb9, 0xa2, 0x72, 0xb5, 0xb5, 0x47, 0x68, 0xf0, 0x84, 0xa0, 0xf0, 0xa0,
	0xd0, 0xa3, 0x5a, 0xaf, 0xec, 0x5f, 0xe8, 0xe3, 0xc1, 0x41, 0x8a, 0x00, 0xe2, 0x48, 0x69, 0x85,
	0x87, 0x85, 0xf0, 0x03, 0xdd, 0xeb, 0x3c, 0x11, 0x2c, 0xf3, 0xf9, 0xb1, 0x9c, 0xa7, 0x1b, 0xa6,
	0xf0, 0xfb, 0x23, 0xf9, 0x2a, 0x9f, 0xd3, 0x6e, 0xf1, 0xc3, 0xfa, 0xfd, 0x18, 0x00, 0x00, 0xff,
	0xff, 0x04, 0xdf, 0xb1, 0xa5, 0xcf, 0x04, 0x00, 0x00,
}
